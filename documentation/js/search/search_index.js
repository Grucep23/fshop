var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.273,1,2.866]],["body/controllers/AppController.html",[0,2.149,1,4.84,2,1.765,3,0.17,4,0.17,5,0.108,6,4.803,7,0.321,8,0.014,9,2.777,10,5.525,11,4.803,12,3.973,13,0.942,14,4.537,15,4.803,16,4.537,17,3.252,18,4.039,19,5.525,20,0.17,21,0.275,22,2.321,23,3.479,24,2.321,25,0.012,26,0.012]],["title/modules/AppModule.html",[27,1.022,28,2.866]],["body/modules/AppModule.html",[1,4.214,2,1.614,3,0.11,4,0.11,5,0.07,7,0.335,8,0.014,13,0.61,14,4.359,15,3.11,16,3.981,17,2.105,20,0.11,21,0.178,25,0.009,26,0.009,27,1.503,28,5.847,29,1.568,30,1.568,31,1.715,32,1.715,33,1.568,34,2.809,35,1.715,36,3.11,37,3.11,38,3.11,39,4.657,40,4.657,41,4.657,42,4.657,43,4.657,44,4.657,45,4.657,46,4.359,47,4.359,48,2.422,49,1.715,50,1.715,51,3.577,52,2.54,53,3.577,54,1.991,55,1.101,56,3.11,57,3.577,58,3.577,59,3.577,60,1.889,61,1.331,62,1.889,63,0.917,64,3.577,65,3.577,66,3.577,67,3.577,68,3.577,69,3.577,70,3.577,71,3.577,72,3.577,73,3.11,74,2.572,75,3.577,76,3.11,77,1.503,78,3.577,79,3.577,80,3.577,81,5.054,82,3.577,83,0.986,84,3.11,85,3.577]],["title/injectables/AppService.html",[14,2.492,86,0.791]],["body/injectables/AppService.html",[3,0.178,4,0.178,5,0.113,7,0.246,8,0.014,13,0.986,14,4.326,20,0.178,21,0.288,25,0.012,26,0.012,83,1.596,86,1.374,87,2.152,88,5.03,89,0.585,90,2.053,91,7.672,92,0.772,93,5.786,94,1.716,95,0.923,96,5.03]],["title/controllers/AuthController.html",[0,1.273,97,2.866]],["body/controllers/AuthController.html",[0,1.019,2,1.019,3,0.098,4,0.098,5,0.062,7,0.308,8,0.014,9,1.604,11,2.775,12,4.825,13,0.544,18,3.06,20,0.098,21,0.159,22,1.341,23,2.232,25,0.008,26,0.008,77,2.309,83,1.772,89,0.323,90,1.381,92,0.857,94,1.906,97,3.349,98,2.775,99,1.686,100,3.192,101,4.656,102,5.497,103,5.497,104,4.656,105,4.656,106,3.192,107,2.479,108,1.533,109,3.192,110,2.294,111,3.192,112,3.192,113,1.978,114,0.821,115,0.748,116,1.906,117,1.53,118,3.192,119,4.96,120,3.192,121,3.192,122,4.048,123,3.192,124,5.254,125,3.192,126,3.192,127,3.192,128,3.192,129,3.192,130,3.192,131,4.048,132,3.192,133,3.192,134,3.192,135,3.544,136,3.192,137,1.544,138,3.192,139,3.192,140,1.776,141,6.043,142,2.5,143,3.557,144,1.604,145,1.462,146,2.295,147,2.5,148,3.192,149,2.741,150,1.878,151,2.132,152,1.878,153,1.399,154,2.904,155,2.5,156,1.878,157,4.656,158,1.462,159,3.192,160,3.192,161,3.192,162,3.192,163,3.192,164,5.497,165,2.216,166,3.192,167,3.192,168,3.192,169,3.192,170,3.192,171,4.048,172,3.192,173,3.192,174,3.192,175,1.433,176,2.5,177,1.462,178,3.192,179,3.192,180,3.192,181,2.775,182,3.192,183,3.192,184,2.295,185,3.192,186,3.192,187,3.192,188,3.192,189,3.192]],["title/modules/AuthModule.html",[27,1.022,39,2.662]],["body/modules/AuthModule.html",[2,1.778,3,0.126,4,0.126,5,0.08,7,0.333,8,0.014,13,0.701,16,4.227,17,2.421,18,4.391,20,0.126,21,0.204,25,0.01,26,0.01,27,1.618,29,1.803,30,1.803,31,1.972,32,1.972,33,1.803,34,3.024,35,3.024,39,5.358,46,4.552,47,4.552,48,2.668,49,1.972,50,1.972,52,3.171,56,4.84,76,3.577,77,1.728,84,3.577,97,4.538,142,3.223,190,3.577,191,4.114,192,3.577,193,3.577,194,4.863,195,4.863,196,4.114,197,4.114,198,5.567,199,2.572,200,4.114,201,4.114,202,3.223,203,4.114,204,4.361,205,4.114,206,4.114,207,4.114,208,3.577,209,3.577,210,4.114,211,3.577,212,4.114]],["title/injectables/AuthService.html",[18,2.218,86,0.791]],["body/injectables/AuthService.html",[3,0.075,4,0.075,5,0.048,7,0.286,8,0.014,13,0.417,16,3.958,17,1.44,18,2.121,20,0.075,21,0.122,22,1.601,23,2.532,25,0.007,26,0.007,77,2.942,83,1.746,86,0.756,87,0.91,89,0.247,90,1.13,92,0.845,94,1.388,95,0.935,107,2.048,110,2.078,113,1.626,114,0.909,115,0.589,116,1.567,117,2.532,119,4.379,122,4.069,131,4.069,135,2.79,137,1.264,150,1.44,151,1.634,152,1.44,153,1.073,154,3.343,155,1.917,165,1.536,175,2.245,176,2.985,177,2.999,181,5.271,184,1.76,202,1.917,204,2.985,208,3.313,211,2.128,213,2.128,214,0.909,215,4.68,216,4.68,217,4.68,218,3.313,219,3.811,220,2.447,221,3.202,222,6.33,223,2.447,224,3.811,225,2.447,226,3.313,227,2.447,228,3.811,229,4.68,230,2.447,231,1.44,232,3.313,233,3.126,234,3.126,235,2.447,236,2.447,237,2.447,238,1.53,239,1.917,240,2.447,241,3.811,242,2.447,243,2.447,244,2.447,245,2.447,246,2.741,247,3.811,248,1.725,249,3.811,250,3.811,251,2.447,252,2.877,253,3.313,254,2.128,255,1.612,256,2.18,257,4.069,258,3.811,259,3.811,260,3.811,261,6.547,262,3.811,263,1.536,264,2.447,265,3.811,266,3.313,267,3.811,268,3.811,269,3.811,270,3.811,271,4.68,272,1.917,273,2.447,274,2.128,275,1.121,276,2.128,277,3.811,278,2.447,279,2.447,280,2.447,281,2.447,282,2.447,283,1.917,284,2.447,285,3.811,286,2.121,287,3.811,288,3.313,289,2.447,290,1.44,291,2.447,292,2.447]],["title/controllers/CompaniesController.html",[0,1.273,293,2.866]],["body/controllers/CompaniesController.html",[0,1.079,2,1.079,3,0.104,4,0.104,5,0.066,7,0.3,8,0.014,9,2.854,13,0.576,20,0.104,21,0.168,24,1.42,25,0.008,26,0.008,61,1.257,83,1.813,89,0.342,90,1.44,92,0.877,94,1.95,95,1.058,99,1.785,107,2.667,108,1.568,110,2.328,113,2.023,114,0.84,115,0.732,116,1.95,140,2.701,143,3.342,144,1.698,145,1.548,153,1.481,156,1.989,158,1.548,263,2.289,293,3.49,294,2.938,295,2.938,296,1.338,297,2.385,298,2.039,299,2.385,300,2.938,301,4.278,302,3.379,303,1.548,304,2.843,305,2.843,306,2.938,307,4.853,308,1.609,309,2.857,310,3.379,311,2.223,312,1.42,313,3.379,314,3.379,315,2.648,316,1.42,317,2.857,318,3.379,319,1.881,320,4.817,321,3.034,322,3.379,323,1.881,324,1.989,325,2.127,326,3.55,327,2.938,328,1.42,329,3.802,330,1.481,331,3.379,332,3.379,333,1.548,334,2.113,335,3.379,336,2.113,337,2.113,338,2.113,339,3.379,340,1.989,341,1.989,342,3.379,343,4.219,344,3.379,345,3.379]],["title/modules/CompaniesModule.html",[27,1.022,40,2.662]],["body/modules/CompaniesModule.html",[2,2.016,3,0.153,4,0.153,5,0.097,7,0.32,8,0.014,13,0.85,20,0.153,21,0.248,25,0.011,26,0.011,27,1.777,29,2.185,30,2.185,31,2.389,32,2.389,33,2.185,34,3.321,35,3.321,40,5.208,48,3.026,49,2.389,50,2.389,52,2.505,54,2.775,55,1.534,114,0.637,293,4.983,308,1.653,326,5.073,327,4.334,346,4.334,347,4.334,348,4.334,349,4.985,350,4.985,351,4.54,352,4.334,353,2.934,354,4.334,355,2.185]],["title/injectables/CompaniesService.html",[86,0.791,326,2.492]],["body/injectables/CompaniesService.html",[3,0.086,4,0.086,5,0.054,7,0.297,8,0.014,13,0.475,20,0.086,21,0.139,22,1.172,23,1.337,25,0.007,26,0.007,55,0.858,60,1.473,61,1.889,62,1.473,63,1.302,77,3.08,83,1.675,86,0.836,87,1.038,89,0.282,90,1.25,92,0.852,94,1.802,95,0.978,107,2.548,110,2.073,113,1.966,114,0.816,115,0.712,116,1.895,117,2.711,137,0.925,153,1.223,175,1.741,177,2.782,238,1.744,248,1.558,255,1.35,263,1.698,286,1.552,290,1.642,296,1.162,297,1.77,298,1.77,299,1.77,300,3.663,301,3.797,303,1.93,304,3.037,305,2.325,308,1.397,311,2.325,312,1.77,315,2.642,316,1.77,319,2.345,320,4.559,325,1.847,326,2.634,328,1.172,329,3.3,330,1.223,352,2.425,356,2.425,357,2.789,358,3.33,359,2.789,360,4.213,361,2.789,362,2.376,363,2.789,364,2.789,365,2.789,366,2.789,367,2.185,368,1.642,369,1.744,370,1.642,371,1.642,372,2.789,373,2.789,374,1.277,375,3.174,376,3.174,377,1.744,378,1.744,379,1.744,380,1.744,381,1.744,382,1.744,383,1.744,384,1.744,385,1.642,386,2.634,387,1.642,388,2.634,389,2.789,390,2.634,391,1.744,392,2.345,393,2.789,394,1.744,395,1.744,396,1.863,397,1.863,398,1.863,399,1.863,400,1.744,401,1.744,402,1.744,403,1.552,404,1.744,405,2.634,406,1.744,407,1.744,408,1.744,409,3.537,410,1.744,411,2.634,412,2.634,413,1.744,414,1.744,415,2.634,416,1.744,417,1.744,418,1.744,419,1.744,420,1.744,421,1.744,422,1.744,423,1.744,424,1.744,425,1.744,426,2.789,427,1.744,428,2.789,429,4.213,430,1.038,431,1.277,432,2.789]],["title/classes/Company.html",[21,0.198,308,1.321]],["body/classes/Company.html",[3,0.115,4,0.115,5,0.073,7,0.222,8,0.014,20,0.185,21,0.187,25,0.009,26,0.009,55,1.155,63,1.34,89,0.379,92,1.028,95,1.028,108,1.837,114,0.768,115,0.883,165,1.512,175,1.155,214,1.247,248,1.542,255,1.599,275,2.754,308,1.733,351,2.699,355,1.645,367,2.94,374,2.754,430,2.237,431,2.754,433,0.895,434,2.699,435,3.176,436,3.759,437,2.424,438,3.539,439,4.016,440,3.347,441,5,442,3.752,443,3.243,444,3.752,445,3.539,446,4.426,447,4.167,448,3.752,449,3.752,450,3.752,451,3.752,452,2.76,453,3.752,454,3.752,455,3.752,456,3.752,457,3.752,458,2.346,459,3.076,460,2.346,461,2.424,462,3.262]],["title/classes/Company-1.html",[21,0.165,308,1.102,385,1.957]],["body/classes/Company-1.html",[3,0.14,4,0.14,5,0.088,7,0.282,8,0.014,20,0.14,21,0.35,25,0.01,26,0.01,63,1.525,89,0.459,92,0.884,95,1.054,108,1.083,114,0.898,115,0.813,137,1.506,165,1.83,214,1.418,248,1.7,308,2.42,362,2.212,433,1.083,437,1.83,439,4.427,443,2.723,452,2.398,461,2.396,463,5.509,464,3.266,465,3.018,466,4.541,467,4.541,468,4.541,469,3.717,470,4.658,471,5.169,472,3.717,473,3.717,474,2.839,475,3.266,476,3.14,477,1.758,478,2.08,479,3.948,480,2.282,481,2.673,482,2.177,483,3.266,484,3.266,485,3.266,486,3.033,487,3.948,488,3.266,489,2.528,490,3.948,491,3.948,492,3.266,493,3.558]],["title/classes/Company-2.html",[21,0.165,308,1.102,494,2.89]],["body/classes/Company-2.html",[3,0.131,4,0.131,5,0.083,7,0.292,8,0.014,20,0.197,21,0.366,24,2.393,25,0.01,26,0.01,63,1.461,89,0.43,92,0.76,95,1.07,108,1.015,114,0.913,115,0.764,135,2.248,149,2.506,150,3.779,158,1.95,214,1.359,231,3.353,248,1.646,255,1.515,256,1.466,308,2.369,362,2.55,433,1.015,435,3.009,437,2.296,461,2.587,465,3.147,472,3.561,473,3.561,474,4.014,476,3.009,477,1.648,480,2.139,482,3.286,495,2.661,496,4.257,497,4.257,498,3.779,499,3.353,500,3.061,501,4.617,502,2.248,503,3.804,504,3.804,505,3.353,506,4.097,507,3.061,508,3.061]],["title/classes/CreateCompanyDto.html",[21,0.198,301,2.492]],["body/classes/CreateCompanyDto.html",[3,0.157,4,0.157,5,0.099,7,0.217,8,0.014,20,0.157,21,0.318,25,0.011,26,0.011,89,0.515,92,0.98,95,1.057,108,1.751,114,0.894,115,0.818,214,1.527,301,4.002,433,1.215,435,3.697,437,2.821,439,4.674,465,3.222,477,1.972,509,6.576,510,3.992,511,5.096,512,5.096,513,5.096,514,5.096]],["title/classes/CreateFileDto.html",[21,0.198,515,2.492]],["body/classes/CreateFileDto.html",[3,0.192,4,0.192,5,0.121,8,0.013,20,0.192,21,0.31,25,0.012,26,0.012,433,1.488,515,4.522,516,5.423,517,4.887]],["title/classes/CreateJobDto.html",[21,0.198,481,2.346]],["body/classes/CreateJobDto.html",[3,0.115,4,0.115,5,0.073,7,0.255,8,0.014,20,0.115,21,0.323,25,0.009,26,0.009,63,1.337,89,0.378,92,1.036,95,1.051,108,1.628,114,0.829,115,0.877,137,1.239,165,1.506,214,1.243,248,0.958,308,2.406,362,2.415,433,0.891,437,2.418,439,2.496,443,2.973,452,2.752,461,1.506,463,6.128,464,2.688,465,2.85,469,3.258,470,4.701,471,5.217,472,3.258,473,3.258,474,2.336,475,2.688,476,2.752,477,1.446,478,1.712,479,3.249,480,1.878,481,3.067,482,2.876,483,4.315,484,4.315,485,4.315,486,4.007,487,3.249,488,4.315,489,3.34,490,3.249,491,3.249,492,4.315,493,4.701,518,3.249,519,3.737,520,3.737,521,3.737,522,3.737,523,3.737,524,3.737,525,3.737,526,3.737,527,3.737,528,3.737,529,3.737,530,3.737,531,3.737,532,3.737,533,3.737]],["title/classes/CreatePermissionDto.html",[21,0.198,534,2.492]],["body/classes/CreatePermissionDto.html",[3,0.162,4,0.162,5,0.103,7,0.224,8,0.014,20,0.162,21,0.325,25,0.011,26,0.011,27,1.823,89,0.533,92,0.992,95,1.064,108,1.257,114,0.908,115,0.828,214,1.559,433,1.257,465,2.864,477,2.04,534,4.087,535,6.642,536,4.129,537,4.443,538,4.747,539,5.271,540,5.271,541,5.271,542,5.271]],["title/classes/CreateResumeDto.html",[21,0.198,543,2.218]],["body/classes/CreateResumeDto.html",[3,0.146,4,0.146,5,0.092,7,0.26,8,0.014,20,0.188,21,0.336,25,0.01,26,0.01,63,1.568,89,0.479,92,1.011,95,1.029,108,1.131,115,0.844,214,1.458,255,1.8,433,1.131,461,3.148,465,3.054,477,1.835,499,3.983,543,3.403,544,6.039,545,2.964,546,5.141,547,5.141,548,3.574,549,5.141,550,4.867,551,4.74,552,4.74,553,4.74,554,4.121,555,4.74,556,4.74,557,2.964]],["title/classes/CreateRoleDto.html",[21,0.198,558,2.492]],["body/classes/CreateRoleDto.html",[3,0.149,4,0.149,5,0.094,7,0.264,8,0.014,20,0.149,21,0.308,25,0.011,26,0.011,63,1.589,89,0.489,92,0.961,95,0.961,108,1.63,114,0.873,115,0.803,165,2.497,214,1.478,252,3.435,315,2.398,433,1.155,437,2.754,447,3.647,452,3.273,461,2.497,465,3.002,469,3.874,470,4.854,477,1.873,489,3.804,499,2.849,558,3.874,559,6.475,560,3.792,561,4.84,562,4.84,563,4.84,564,4.84,565,4.84,566,4.456,567,6.196,568,2.838,569,6.196,570,4.84,571,4.84]],["title/classes/CreateUserCvDto.html",[21,0.198,557,2.492]],["body/classes/CreateUserCvDto.html",[3,0.153,4,0.153,5,0.097,7,0.268,8,0.014,20,0.194,21,0.344,25,0.011,26,0.011,63,1.616,89,0.503,92,0.923,95,1.002,108,1.651,115,0.771,214,1.503,255,1.322,433,1.186,461,3.141,465,3.092,477,1.924,499,4.073,543,2.767,544,5.7,545,3.108,546,5.233,547,5.233,548,2.626,549,5.233,550,3.575,557,3.94,572,5.479,573,4.971,574,4.971,575,4.971]],["title/classes/CreateUserDto.html",[21,0.198,502,2.105]],["body/classes/CreateUserDto.html",[3,0.114,4,0.114,5,0.072,7,0.275,8,0.014,20,0.183,21,0.35,24,2.174,25,0.009,26,0.009,63,1.327,89,0.374,92,1.001,95,1.07,108,1.542,114,0.869,115,0.856,135,1.954,149,2.177,150,4.472,158,1.694,214,1.234,231,3.046,248,0.949,255,1.719,256,2.055,308,2.399,362,2.622,433,0.882,435,3.414,437,2.086,461,2.405,465,3.062,472,3.235,473,3.235,474,3.731,476,2.733,477,1.432,480,1.859,482,3.378,495,2.313,498,3.513,499,3.046,500,2.661,501,4.292,502,2.733,503,4.317,504,4.317,505,3.804,506,3.721,507,2.661,508,2.661,518,3.216,572,3.216,576,3.699,577,3.699,578,3.699,579,3.216,580,3.699,581,3.699,582,3.699,583,3.699,584,3.699,585,3.699]],["title/controllers/DatabasesController.html",[0,1.273,586,2.866]],["body/controllers/DatabasesController.html",[0,1.878,2,1.878,3,0.181,4,0.181,5,0.114,7,0.297,8,0.014,13,1.002,20,0.181,21,0.292,24,2.469,25,0.012,26,0.012,99,3.105,333,2.692,586,5.024,587,5.111,588,5.879,589,4.66,590,5.111,591,5.879]],["title/modules/DatabasesModule.html",[27,1.022,41,2.662]],["body/modules/DatabasesModule.html",[2,1.914,3,0.141,4,0.141,5,0.09,7,0.33,8,0.014,13,0.784,20,0.141,21,0.229,25,0.01,26,0.01,27,1.71,29,2.015,30,2.015,31,2.204,32,2.204,33,2.015,34,3.196,35,2.204,41,5.183,48,2.873,49,2.204,50,2.204,52,2.311,54,2.559,55,1.415,110,1.364,114,0.852,221,3.969,239,3.602,256,1.583,353,2.706,355,2.923,568,2.106,586,4.796,589,4.698,590,3.998,592,3.998,593,3.998,594,4.598,595,4.598,596,4.003,597,3.998,598,4.003,599,3.602,600,3.747,601,3.071,602,3.998,603,3.602,604,3.307]],["title/injectables/DatabasesService.html",[86,0.791,589,2.492]],["body/injectables/DatabasesService.html",[3,0.093,4,0.093,5,0.059,7,0.304,8,0.014,13,0.516,16,4.26,17,1.782,20,0.093,21,0.151,22,1.882,23,3.353,24,2.24,25,0.008,26,0.008,55,0.932,60,1.599,61,1.127,62,1.599,63,0.777,77,2.24,86,0.889,87,1.127,89,0.306,90,1.329,92,0.712,94,0.898,110,1.582,113,0.932,114,0.894,115,0.337,116,0.898,137,1.485,165,1.806,175,2.097,177,3.272,214,1.069,221,3.112,233,2.023,234,2.023,239,2.372,246,2.178,252,3.161,255,1.418,256,2.166,296,1.471,358,4.278,368,1.782,435,2.816,437,1.806,482,2.556,489,2.494,504,3.561,505,3.139,568,1.387,589,2.801,597,2.633,599,2.372,601,2.023,605,2.633,606,5.893,607,6.585,608,2.633,609,4.636,610,4.177,611,5.332,612,4.48,613,3.895,614,3.028,615,4.48,616,2.178,617,2.023,618,2.178,619,3.835,620,2.372,621,3.835,622,4.48,623,2.178,624,3.028,625,2.633,626,2.372,627,3.028,628,3.028,629,3.028,630,5.332,631,3.028,632,5.332,633,3.028,634,5.332,635,3.028,636,5.159,637,3.028,638,3.028,639,3.028,640,3.028,641,3.895,642,3.028,643,3.028,644,3.028,645,3.028,646,3.028,647,4.48,648,3.028,649,5.332,650,2.633,651,5.332,652,4.48,653,5.332,654,5.332,655,4.48,656,3.028,657,2.633,658,3.028,659,3.028,660,3.028,661,2.633,662,3.028,663,2.023,664,3.028,665,2.178]],["title/classes/File.html",[5,0.078,21,0.198]],["body/classes/File.html",[3,0.192,4,0.192,5,0.149,8,0.013,20,0.192,21,0.311,25,0.012,26,0.012,433,1.493,666,5.442]],["title/controllers/FilesController.html",[0,1.273,667,2.866]],["body/controllers/FilesController.html",[0,1.177,2,1.177,3,0.113,4,0.113,5,0.126,7,0.3,8,0.014,9,1.852,13,0.628,20,0.113,21,0.183,24,1.548,25,0.009,26,0.009,61,1.371,83,1.873,89,0.373,90,1.531,92,0.906,94,2.015,95,1,99,1.946,108,1.62,113,1.986,114,0.824,115,0.719,116,1.914,137,1.222,140,2.872,143,3.037,144,1.852,145,1.688,152,2.169,263,2.08,297,2.71,298,2.168,299,2.168,312,1.548,315,2.725,316,1.548,317,3.037,319,2.051,321,3.226,323,2.051,324,2.169,328,1.548,330,1.615,333,1.688,340,3.037,341,2.169,515,2.304,667,3.711,668,3.203,669,2.887,670,5.16,671,3.685,672,3.685,673,3.685,674,4.926,675,3.685,676,3.685,677,5.955,678,3.685,679,3.685,680,3.685,681,4.486,682,3.685,683,3.685,684,5.16,685,3.685,686,3.723,687,3.203,688,4.042,689,3.685,690,2.65,691,3.685,692,3.685,693,3.685,694,3.685,695,3.685,696,3.685,697,3.685,698,3.685,699,3.685,700,3.685,701,3.685,702,3.685,703,3.685,704,3.685,705,3.685,706,3.685,707,3.685,708,2.887,709,3.685,710,2.304,711,3.685]],["title/modules/FilesModule.html",[27,1.022,42,2.662]],["body/modules/FilesModule.html",[2,2.055,3,0.158,4,0.158,5,0.1,7,0.323,8,0.014,13,0.876,20,0.158,21,0.255,25,0.011,26,0.011,27,1.802,29,2.252,30,2.252,31,2.463,32,2.463,33,2.252,34,3.368,35,2.463,42,5.167,48,3.084,49,2.463,50,2.463,52,2.582,73,4.467,152,3.024,667,5.053,686,4.836,687,4.467,690,3.695,712,4.467,713,4.467,714,5.138,715,5.138,716,5.138,717,4.628,718,5.138,719,5.138]],["title/injectables/FilesService.html",[86,0.791,686,2.492]],["body/injectables/FilesService.html",[3,0.129,4,0.129,5,0.139,7,0.272,8,0.014,13,0.717,20,0.129,21,0.209,25,0.01,26,0.01,83,1.963,86,1.122,87,1.565,89,0.425,90,1.677,92,0.95,94,2.221,95,0.95,113,2.1,114,0.872,115,0.76,116,2.024,137,1.395,263,2.278,296,1.559,297,2.866,298,2.374,299,2.374,312,2.374,315,2.837,316,2.374,319,3.146,328,1.768,330,1.845,362,2.869,515,4.45,669,3.297,674,5.001,686,3.534,688,4.428,720,3.659,721,5.652,722,4.208,723,4.208,724,4.208,725,4.208,726,4.208,727,7.118,728,4.208,729,4.208,730,4.208]],["title/classes/History.html",[21,0.198,731,2.346]],["body/classes/History.html",[3,0.143,4,0.143,5,0.09,7,0.313,8,0.014,20,0.143,21,0.365,25,0.01,26,0.01,63,1.191,89,0.47,92,0.894,95,0.894,108,1.439,115,0.84,214,1.439,248,1.191,255,1.235,296,1.281,430,2.854,433,1.108,443,2.763,465,3.092,469,3.772,476,3.539,477,1.798,478,2.763,480,2.334,498,3.551,543,2.585,545,2.904,548,3.539,731,4.327,732,5.102,733,5.25,734,4.644,735,4.644,736,4.644,737,4.644,738,2.453,739,2.334,740,3.102,741,3.639,742,2.734,743,2.036,744,3.639]],["title/interfaces/IUser.html",[107,1.426,745,2.492]],["body/interfaces/IUser.html",[3,0.156,4,0.156,5,0.099,8,0.014,20,0.156,25,0.011,26,0.011,27,1.303,89,0.514,95,1.098,107,2.286,114,0.986,115,0.89,116,1.896,214,1.524,248,1.979,252,3.686,255,1.95,256,2.526,445,4.317,537,3.177,745,3.177,746,3.981,747,4.418]],["title/classes/Job.html",[21,0.198,748,2.218]],["body/classes/Job.html",[3,0.093,4,0.093,5,0.059,7,0.227,8,0.014,20,0.164,21,0.15,25,0.008,26,0.008,55,0.93,63,1.148,89,0.306,92,1.047,95,1.036,108,1.871,114,0.752,115,0.891,165,1.218,175,0.93,214,1.067,248,1.51,255,1.417,275,2.44,308,1.766,355,1.325,362,2.19,374,2.44,430,1.982,431,2.44,433,0.721,436,3.33,437,2.147,438,3.136,439,2.019,440,2.965,441,5.078,443,3.327,445,3.466,446,4.371,447,4.116,452,3.11,458,1.89,459,2.634,460,1.89,461,2.373,482,2.553,483,3.831,484,3.831,485,3.831,486,3.558,488,3.831,489,2.965,492,3.831,748,2.491,749,2.174,750,5.327,751,3.023,752,3.023,753,3.023,754,3.023,755,3.023,756,3.023,757,3.023,758,3.023,759,3.023,760,3.023,761,3.023,762,3.023,763,3.023,764,3.023,765,3.023,766,3.023,767,3.023,768,3.023,769,3.023,770,2.629,771,2.629,772,2.369,773,2.174,774,2.629]],["title/controllers/JobsController.html",[0,1.273,775,2.866]],["body/controllers/JobsController.html",[0,1.056,2,1.056,3,0.102,4,0.102,5,0.064,7,0.298,8,0.014,9,2.401,13,0.564,20,0.102,21,0.164,24,1.389,25,0.008,26,0.008,61,1.23,83,1.797,89,0.334,90,1.417,92,0.87,94,1.933,95,1.054,99,1.746,107,2.654,108,1.554,110,2.321,113,2.006,114,0.833,115,0.726,116,1.933,137,1.584,140,2.659,143,3.302,144,1.662,145,1.514,153,1.449,156,1.946,158,1.514,263,2.261,296,1.317,297,2.356,298,2.007,299,2.007,303,1.514,304,2.814,305,2.814,306,2.875,309,2.812,311,2.188,312,1.389,315,2.775,316,1.389,317,1.946,319,1.84,321,2.067,323,1.84,324,1.946,325,2.094,328,1.389,330,1.449,333,1.514,334,2.067,336,2.987,337,2.067,338,2.067,340,1.946,341,1.946,343,2.875,481,3.998,710,2.067,748,3.991,775,3.436,776,2.875,777,4.877,778,2.875,779,2.208,780,3.306,781,3.306,782,3.306,783,3.306,784,2.208,785,3.306,786,4.789,787,2.378,788,3.306,789,3.507,790,2.875,791,3.743,792,3.306,793,3.306,794,2.208,795,3.306,796,3.306,797,3.306,798,2.208,799,3.306,800,2.208,801,3.306]],["title/modules/JobsModule.html",[27,1.022,43,2.662]],["body/modules/JobsModule.html",[2,2.055,3,0.158,4,0.158,5,0.1,7,0.323,8,0.014,13,0.876,20,0.158,21,0.255,25,0.011,26,0.011,27,1.802,29,2.252,30,2.252,31,2.463,32,2.463,33,2.252,34,3.368,35,2.463,43,5.167,48,3.084,49,2.463,50,2.463,52,2.582,54,2.86,55,1.581,114,0.656,353,3.024,355,2.252,748,2.86,773,4.628,775,5.053,789,4.836,790,4.467,802,4.467,803,4.467,804,5.138,805,5.138,806,4.467,807,4.467]],["title/injectables/JobsService.html",[86,0.791,789,2.492]],["body/injectables/JobsService.html",[3,0.082,4,0.082,5,0.052,7,0.293,8,0.014,13,0.453,20,0.082,21,0.132,22,1.705,23,1.273,25,0.007,26,0.007,55,0.817,60,1.403,61,1.833,62,1.403,63,1.264,77,3.146,83,1.728,86,0.806,87,0.988,89,0.269,90,1.204,92,0.836,94,1.763,95,0.968,107,2.516,110,2.044,113,1.929,114,0.859,115,0.698,116,1.859,117,2.644,153,1.164,175,1.929,177,2.87,248,1.524,255,1.31,263,1.636,290,1.563,296,1.119,297,1.705,298,1.705,299,1.705,303,1.859,304,2.986,305,2.257,308,1.346,311,2.257,312,1.705,315,2.425,316,1.705,319,2.259,325,1.779,328,1.116,330,1.164,358,3.247,362,2.331,368,1.563,369,1.66,370,1.563,371,1.563,374,1.216,375,3.08,376,3.08,377,1.66,378,1.66,379,1.66,380,1.66,381,1.66,382,1.66,383,1.66,384,1.66,385,1.563,386,2.538,387,1.563,388,2.538,390,2.538,391,1.66,392,2.259,394,1.66,395,1.66,396,1.774,397,1.774,398,1.774,399,1.774,400,1.66,401,1.66,402,1.66,403,1.478,404,1.66,405,2.538,406,1.66,407,1.66,408,1.66,409,3.449,410,1.66,411,2.538,412,2.538,413,1.66,414,1.66,415,2.538,416,1.66,417,1.66,418,1.66,419,1.66,420,1.66,421,1.66,422,1.66,423,1.66,424,1.66,425,2.538,427,2.538,430,0.988,431,1.216,437,1.636,481,3.688,483,2.919,484,2.919,485,2.919,486,2.711,488,2.919,489,2.259,492,2.919,493,3.18,748,2.742,772,2.081,778,3.529,786,4.49,789,2.538,791,3.18,806,2.309,808,2.309,809,2.656,810,2.656,811,4.059,812,2.656,813,2.656,814,2.656,815,2.656,816,2.656,817,2.656,818,2.656,819,2.656,820,2.656,821,2.656,822,2.656,823,2.711,824,4.059,825,2.656]],["title/injectables/JwtAuthGuard.html",[74,2.866,86,0.791]],["body/injectables/JwtAuthGuard.html",[3,0.213,4,0.12,5,0.076,7,0.295,8,0.014,12,4.406,13,0.663,20,0.12,21,0.193,22,1.633,25,0.009,26,0.009,74,3.852,83,1.69,86,1.063,87,1.446,89,0.393,90,1.589,92,0.818,94,1.589,110,2.054,113,1.886,114,0.783,115,0.683,116,1.818,137,1.776,145,1.78,152,2.288,165,1.567,175,2.203,199,2.43,252,2.692,286,3.41,288,3.38,333,1.78,743,1.704,826,5.74,827,3.045,828,5.356,829,5.356,830,3.38,831,5.608,832,3.887,833,5.356,834,5.275,835,3.887,836,5.173,837,5.356,838,3.887,839,6.603,840,3.887,841,3.38,842,2.796,843,3.38,844,3.045,845,3.887,846,3.045,847,4.656,848,3.887,849,3.887,850,3.887,851,3.887,852,3.887,853,3.887,854,3.887,855,3.887,856,3.887,857,3.887,858,5.356,859,3.887,860,5.356,861,3.887,862,3.887,863,2.796,864,3.887,865,3.887,866,3.887,867,3.887,868,3.887,869,3.887,870,3.887]],["title/injectables/JwtStrategy.html",[86,0.791,194,2.662]],["body/injectables/JwtStrategy.html",[3,0.133,4,0.133,5,0.084,7,0.315,8,0.014,13,0.739,16,4.622,17,2.553,20,0.133,21,0.216,22,2.423,23,2.765,25,0.01,26,0.01,77,2.722,83,1.196,86,1.145,87,1.613,89,0.439,90,1.711,92,0.77,94,1.287,95,0.77,107,2.471,113,1.775,114,0.919,115,0.643,116,1.711,117,2.765,153,1.901,154,3.985,155,3.398,175,1.994,176,3.398,177,1.987,194,3.852,199,2.712,209,3.771,246,3.119,248,1.662,252,2.18,253,3.771,255,1.534,256,2.231,257,5.015,475,4.148,743,1.901,846,3.398,871,3.771,872,4.337,873,4.337,874,5.768,875,4.337,876,4.337,877,3.771,878,3.398,879,3.771,880,3.771,881,3.771,882,4.337,883,4.337,884,4.337,885,3.771,886,4.337,887,4.337]],["title/injectables/LocalAuthGuard.html",[86,0.791,146,2.866]],["body/injectables/LocalAuthGuard.html",[3,0.184,4,0.184,5,0.116,7,0.3,8,0.014,13,1.018,20,0.184,21,0.297,25,0.012,26,0.012,86,1.4,87,2.222,146,5.072,199,3.735,743,2.619,827,4.68,843,5.194,888,5.194,889,5.974]],["title/injectables/LocalStrategy.html",[86,0.791,195,2.662]],["body/injectables/LocalStrategy.html",[3,0.147,4,0.147,5,0.093,7,0.305,8,0.014,13,0.814,18,4.226,20,0.147,21,0.237,22,2.007,25,0.011,26,0.011,77,2.853,83,1.317,86,1.22,87,1.777,89,0.483,90,1.823,92,0.82,94,1.417,95,1.013,110,2.015,113,1.891,114,0.785,115,0.685,116,1.823,137,1.584,142,3.743,147,3.743,175,1.47,177,2.188,195,4.104,199,2.987,231,2.812,232,5.342,286,2.659,333,2.188,475,4.419,482,3.437,743,2.094,841,5.342,846,3.743,877,4.154,878,3.743,880,4.154,881,4.154,890,4.154,891,4.777,892,4.777,893,6.144,894,4.777,895,4.777]],["title/injectables/MulterConfigService.html",[86,0.791,717,2.866]],["body/injectables/MulterConfigService.html",[3,0.116,4,0.116,5,0.127,7,0.292,8,0.014,13,0.645,20,0.116,21,0.188,25,0.009,26,0.009,83,1.666,86,1.043,87,1.407,89,0.382,90,1.559,92,0.806,94,1.559,95,0.806,113,1.164,114,0.772,115,0.422,116,1.122,124,4.57,152,2.227,165,1.525,175,1.164,214,1.254,233,4.034,234,2.527,290,4.036,296,1.043,486,2.527,568,1.733,623,2.721,663,3.51,681,3.289,690,2.721,717,3.78,896,3.289,897,6.04,898,6.526,899,5.256,900,3.783,901,6.04,902,5.256,903,3.783,904,3.783,905,3.783,906,3.783,907,5.256,908,5.256,909,5.256,910,3.783,911,4.118,912,3.783,913,3.783,914,3.783,915,3.783,916,3.783,917,3.783,918,3.783,919,3.78,920,3.783,921,3.783,922,5.256,923,3.783,924,3.783,925,3.783,926,3.783,927,6.04,928,3.783,929,3.783,930,3.783,931,3.783,932,3.783,933,3.783,934,3.783,935,3.783,936,3.783,937,3.783,938,3.783,939,3.783,940,5.256,941,3.783,942,3.783,943,3.783,944,5.256,945,3.783,946,3.783,947,3.783,948,5.256,949,5.256,950,3.783,951,3.783,952,3.783,953,5.256,954,3.783,955,5.256,956,3.783]],["title/classes/Permission.html",[21,0.198,568,1.825]],["body/classes/Permission.html",[3,0.115,4,0.115,5,0.073,7,0.222,8,0.014,20,0.185,21,0.187,25,0.009,26,0.009,27,1.542,55,1.155,63,1.34,89,0.379,92,1.028,95,1.028,108,1.837,114,0.768,115,0.883,165,1.512,175,1.155,214,1.247,248,1.542,255,1.599,275,2.754,355,1.645,374,2.754,430,2.237,431,2.754,433,0.895,436,3.759,438,3.539,440,3.347,441,5,443,3.243,445,3.539,446,4.426,447,4.167,452,2.76,458,2.346,459,3.076,460,2.346,461,2.424,537,3.759,538,4.016,568,2.394,598,2.506,616,2.699,957,2.699,958,3.752,959,3.752,960,3.752,961,3.752,962,3.752,963,3.752,964,3.752,965,3.752,966,3.752,967,3.752,968,3.752,969,3.262]],["title/controllers/PermissionsController.html",[0,1.273,970,2.866]],["body/controllers/PermissionsController.html",[0,1.066,2,1.066,3,0.103,4,0.103,5,0.065,7,0.299,8,0.014,9,2.417,13,0.569,20,0.103,21,0.166,24,1.402,25,0.008,26,0.008,61,1.241,83,1.804,89,0.337,90,1.426,92,0.873,94,1.94,95,1.056,99,1.762,107,2.659,108,1.56,110,2.324,113,2.013,114,0.836,115,0.729,116,1.94,137,1.594,140,2.677,144,1.677,145,1.528,153,1.463,156,1.964,158,1.528,252,2.834,263,1.938,296,1.326,297,2.368,298,2.02,299,2.02,303,1.528,304,2.826,305,2.826,309,2.83,311,2.202,312,1.402,315,2.782,316,1.402,317,1.964,319,1.857,321,2.086,323,1.857,324,1.964,325,2.108,328,1.402,330,1.463,333,1.528,334,2.086,336,3.006,337,2.086,338,2.086,340,1.964,341,1.964,534,4.259,568,3.292,708,2.614,710,2.086,779,2.228,784,2.228,787,2.399,794,2.228,798,2.228,800,2.228,970,3.458,971,2.901,972,2.901,973,3.336,974,2.399,975,3.336,976,2.614,977,3.336,978,3.336,979,4.493,980,3.336,981,3.525,982,2.901,983,3.458,984,3.336,985,3.336,986,3.336,987,3.336,988,3.336,989,3.336,990,3.336]],["title/modules/PermissionsModule.html",[27,1.022,44,2.662]],["body/modules/PermissionsModule.html",[2,2.055,3,0.158,4,0.158,5,0.1,7,0.323,8,0.014,13,0.876,20,0.158,21,0.255,25,0.011,26,0.011,27,1.802,29,2.252,30,2.252,31,2.463,32,2.463,33,2.252,34,3.368,35,2.463,44,5.167,48,3.084,49,2.463,50,2.463,52,2.582,54,2.86,55,1.581,114,0.656,353,3.024,355,2.252,568,2.353,598,4.298,603,4.025,970,5.053,981,4.836,982,4.467,991,4.467,992,4.467,993,5.138,994,5.138,995,4.467]],["title/injectables/PermissionsService.html",[86,0.791,981,2.492]],["body/injectables/PermissionsService.html",[3,0.078,4,0.078,5,0.05,7,0.29,8,0.014,13,0.434,20,0.078,21,0.127,22,1.65,23,1.22,25,0.007,26,0.007,27,1.384,55,0.783,60,1.344,61,1.785,62,1.344,63,1.231,77,3.12,83,1.699,86,0.78,87,0.947,89,0.257,90,1.166,92,0.822,94,1.729,95,0.958,107,2.487,110,2.019,113,1.896,114,0.869,115,0.687,116,1.828,117,2.795,137,1.591,153,1.116,175,2.041,177,2.941,238,1.591,248,1.647,255,1.276,263,1.584,275,1.166,286,2.671,290,1.498,296,1.083,297,1.65,298,1.65,299,1.65,303,1.8,304,2.941,305,2.198,311,2.198,312,1.65,315,2.088,316,1.65,325,1.722,328,1.069,330,1.116,358,3.176,362,2.292,368,1.498,369,1.591,370,1.498,371,1.498,374,1.166,375,3,376,3,377,1.591,378,1.591,379,1.591,380,1.591,381,1.591,382,1.591,383,1.591,384,1.591,385,1.498,386,2.456,387,1.498,388,2.456,390,2.456,391,1.591,392,2.187,394,1.591,395,1.591,396,1.7,397,1.7,398,1.7,399,1.7,400,1.591,401,1.591,402,1.591,403,1.417,404,1.591,405,2.456,406,1.591,407,1.591,408,1.591,409,3.373,410,1.591,411,2.456,412,2.456,413,1.591,414,1.591,415,2.456,416,1.591,417,1.591,418,1.591,419,1.591,420,1.591,421,1.591,422,1.591,423,1.591,424,1.591,425,2.456,427,3,430,0.947,431,1.166,534,3.852,537,3.373,538,3.894,568,2.471,609,3.416,616,1.831,625,2.213,663,1.7,823,2.624,863,1.831,919,1.831,972,3.416,979,4.146,981,2.456,983,2.826,995,2.213,996,2.213,997,2.546,998,2.546,999,2.546,1000,2.546,1001,2.546,1002,2.546,1003,3.078,1004,2.546,1005,2.213,1006,2.546,1007,1.994,1008,2.546,1009,2.546,1010,2.546,1011,2.546,1012,2.546,1013,2.546,1014,2.546,1015,2.546,1016,2.546,1017,1.994,1018,1.994,1019,2.546,1020,1.994,1021,1.994,1022,3.929,1023,2.546]],["title/classes/RegisterUserDto.html",[21,0.198,135,2.105]],["body/classes/RegisterUserDto.html",[3,0.119,4,0.119,5,0.075,7,0.28,8,0.014,20,0.188,21,0.355,24,2.243,25,0.009,26,0.009,63,1.37,89,0.391,92,0.978,95,1.075,108,1.274,114,0.883,115,0.844,135,2.82,149,2.278,150,4.394,158,1.773,214,1.274,231,3.143,248,0.993,255,1.753,256,1.333,308,2.185,362,2.659,433,0.923,435,3.481,437,2.152,461,2.152,465,3.091,472,3.339,473,3.339,474,3.822,476,2.82,477,1.498,480,1.946,482,3.427,495,2.42,498,3.598,499,3.143,500,2.784,501,4.397,502,2.045,503,4.402,504,4.402,505,3.879,506,3.84,507,2.784,508,2.784,579,3.366,1024,3.871,1025,3.871,1026,3.871,1027,3.871,1028,3.871,1029,3.871,1030,3.871]],["title/interfaces/Response.html",[119,2.492,745,2.492]],["body/interfaces/Response.html",[3,0.142,4,0.142,5,0.09,7,0.312,8,0.014,13,0.786,20,0.185,21,0.229,25,0.01,26,0.01,83,1.656,86,1.192,89,0.466,95,0.891,115,0.744,119,3.753,145,2.111,214,1.432,333,2.111,362,2.484,392,2.566,403,2.566,566,5.275,623,3.315,665,5.408,745,2.882,746,3.611,831,5.231,834,4.318,836,3.611,842,3.315,1031,3.611,1032,6.377,1033,5.22,1034,5.22,1035,5.22,1036,3.611,1037,4.008,1038,4.008,1039,3.315,1040,3.315,1041,4.008,1042,5.22,1043,4.008,1044,4.008,1045,4.008,1046,4.008,1047,4.008,1048,5.22,1049,4.008,1050,4.008,1051,4.008]],["title/classes/Resume.html",[21,0.198,1052,2.346]],["body/classes/Resume.html",[3,0.099,4,0.099,5,0.063,7,0.275,8,0.014,20,0.17,21,0.161,25,0.008,26,0.008,55,0.994,63,1.205,89,0.327,92,1.026,95,0.998,108,1.835,115,0.882,165,1.302,175,0.994,214,1.121,248,1.559,255,1.849,275,2.536,308,1.071,354,2.809,355,1.416,374,2.536,430,2.261,431,2.536,433,0.771,436,3.461,438,3.258,440,3.383,441,4.901,443,3.185,445,3.578,446,4.725,447,3.966,452,2.481,458,2.02,459,2.765,460,2.02,461,3.046,546,3.981,547,3.981,548,3.21,549,3.981,550,3.981,731,3.258,748,1.798,770,2.809,771,2.809,807,2.809,1052,2.765,1053,2.324,1054,5.059,1055,4.762,1056,3.231,1057,3.231,1058,3.231,1059,3.231,1060,3.231,1061,3.231,1062,3.231,1063,3.231,1064,3.231,1065,3.231,1066,3.231,1067,3.231,1068,3.231,1069,3.231,1070,3.231,1071,3.231,1072,2.531,1073,3.231,1074,2.324,1075,2.809]],["title/controllers/ResumesController.html",[0,1.273,1076,2.866]],["body/controllers/ResumesController.html",[0,0.997,2,0.997,3,0.096,4,0.096,5,0.061,7,0.293,8,0.014,9,2.302,13,0.532,20,0.096,21,0.155,24,1.311,25,0.008,26,0.008,61,1.161,83,1.836,89,0.316,90,1.359,92,0.888,94,1.975,95,1.06,99,1.648,107,2.713,108,1.588,110,2.364,113,2.049,114,0.85,115,0.742,116,1.975,137,1.519,140,1.737,144,1.569,145,1.429,153,1.368,156,1.837,158,1.429,171,2.713,296,1.263,297,2.28,298,1.924,299,1.924,303,1.429,304,2.739,305,2.739,309,2.696,311,2.098,312,1.311,315,2.833,316,1.311,317,1.837,321,1.951,323,1.737,324,1.837,325,2.008,328,1.311,330,1.368,333,1.429,334,1.951,336,2.864,337,1.951,338,1.951,340,1.837,341,1.837,548,3.516,557,4.161,710,1.951,740,3.059,742,1.837,779,2.084,784,2.084,787,2.245,794,2.084,798,2.084,800,2.084,974,2.245,976,2.445,1052,4.308,1076,3.294,1077,2.713,1078,4.718,1079,4.581,1080,4.581,1081,2.713,1082,3.121,1083,3.121,1084,3.121,1085,3.121,1086,4.581,1087,3.121,1088,3.121,1089,3.121,1090,3.121,1091,3.121,1092,3.393,1093,2.713,1094,3.121,1095,3.121,1096,3.121,1097,3.121,1098,3.121,1099,3.121,1100,3.121,1101,3.121,1102,3.121,1103,3.121,1104,3.121]],["title/modules/ResumesModule.html",[27,1.022,45,2.662]],["body/modules/ResumesModule.html",[2,2.055,3,0.158,4,0.158,5,0.1,7,0.323,8,0.014,13,0.876,20,0.158,21,0.255,25,0.011,26,0.011,27,1.802,29,2.252,30,2.252,31,2.463,32,2.463,33,2.252,34,3.368,35,2.463,45,5.167,48,3.084,49,2.463,50,2.463,52,2.582,54,2.86,55,1.581,114,0.656,353,3.024,355,2.252,1052,3.024,1074,4.628,1076,5.053,1092,4.836,1093,4.467,1105,4.467,1106,4.467,1107,5.138,1108,5.138,1109,4.467,1110,5.138]],["title/injectables/ResumesService.html",[86,0.791,1092,2.492]],["body/injectables/ResumesService.html",[3,0.073,4,0.073,5,0.046,7,0.283,8,0.014,13,0.404,20,0.073,21,0.118,22,1.56,23,1.135,25,0.006,26,0.006,55,0.729,60,1.251,61,1.705,62,1.251,63,1.175,77,3.154,83,1.724,86,0.737,87,0.881,89,0.239,90,1.102,92,0.834,94,1.774,95,0.977,107,2.561,110,2.06,113,1.925,114,0.851,115,0.697,116,1.855,117,2.867,137,1.721,153,1.038,175,1.925,177,2.864,238,1.481,248,1.747,255,1.591,263,1.497,275,1.701,286,2.067,290,1.394,296,1.024,297,1.56,298,1.56,299,1.56,303,1.701,304,2.864,305,2.099,311,2.099,312,1.56,315,2.008,316,1.56,325,1.628,328,0.995,330,1.038,358,3.054,362,2.225,368,1.394,369,1.481,370,1.394,371,1.394,375,3.524,376,3.244,377,1.481,378,2.322,379,1.481,380,1.481,381,1.481,382,1.481,383,1.481,384,1.481,385,2.697,386,2.322,387,1.394,388,2.322,390,2.322,391,1.481,392,2.067,394,1.481,395,1.481,396,1.582,397,1.582,398,1.582,399,1.582,400,1.481,401,1.481,402,1.481,403,1.318,404,1.481,405,2.322,406,1.481,407,1.481,408,1.481,409,3.244,410,1.481,411,2.322,412,2.322,413,1.481,414,1.481,415,2.322,416,1.481,417,1.481,418,1.481,419,1.481,420,1.481,421,1.481,422,1.481,423,1.481,424,1.481,425,2.322,427,2.865,430,1.705,431,1.085,440,2.067,443,1.701,543,1.318,546,3.296,547,3.296,548,3.42,549,1.703,550,2.671,557,3.739,731,2.186,740,2.481,742,1.394,823,2.481,911,2.91,1003,2.91,1017,1.855,1018,1.855,1020,1.855,1021,1.855,1052,3.054,1072,1.855,1081,3.229,1092,2.322,1109,2.059,1111,2.059,1112,3.714,1113,2.368,1114,2.368,1115,3.714,1116,2.368,1117,2.368,1118,3.714,1119,2.368,1120,2.368,1121,2.368,1122,2.368,1123,2.368,1124,2.368,1125,2.368,1126,2.368,1127,3.714,1128,2.368,1129,2.368,1130,2.368,1131,3.714,1132,2.368,1133,2.368,1134,2.368,1135,2.368,1136,2.368,1137,2.059,1138,3.229,1139,2.368]],["title/classes/Role.html",[21,0.198,256,1.372]],["body/classes/Role.html",[3,0.112,4,0.112,5,0.071,7,0.252,8,0.014,20,0.182,21,0.182,25,0.009,26,0.009,55,1.125,63,1.316,89,0.37,92,1.022,95,0.962,108,1.828,114,0.757,115,0.884,165,1.473,175,1.125,214,1.224,248,1.521,252,3.403,255,1.577,256,1.767,275,2.716,355,1.602,374,2.716,430,2.206,431,2.716,433,0.872,436,3.707,437,2.39,438,3.49,440,3.3,441,4.961,443,3.216,445,3.49,446,4.508,447,4.133,452,3.396,458,2.285,459,3.02,460,2.285,461,2.591,489,3.3,568,1.674,599,2.864,600,2.285,603,2.864,617,2.441,1054,4.02,1055,4.02,1140,2.629,1141,3.655,1142,3.655,1143,3.655,1144,3.655,1145,3.655,1146,3.655,1147,3.655,1148,3.655,1149,3.655,1150,3.655,1151,3.655,1152,3.178]],["title/controllers/RolesController.html",[0,1.273,1153,2.866]],["body/controllers/RolesController.html",[0,1.066,2,1.066,3,0.103,4,0.103,5,0.065,7,0.299,8,0.014,9,2.417,13,0.569,20,0.103,21,0.166,24,1.402,25,0.008,26,0.008,61,1.241,83,1.804,89,0.337,90,1.426,92,0.873,94,1.94,95,1.056,99,1.762,107,2.659,108,1.56,110,2.324,113,2.013,114,0.836,115,0.729,116,1.94,137,1.594,140,2.677,144,1.677,145,1.528,153,1.463,154,2.978,156,1.964,158,1.528,256,2.475,263,1.938,296,1.326,297,2.368,298,2.02,299,2.02,303,1.528,304,2.826,305,2.826,309,2.83,311,2.202,312,1.402,315,2.782,316,1.402,317,1.964,319,1.857,321,2.086,323,1.857,324,1.964,325,2.108,328,1.402,333,1.528,334,2.086,336,3.006,337,2.086,338,2.086,340,1.964,341,1.964,558,4.259,708,2.614,710,2.086,779,2.228,784,2.228,787,2.399,794,2.228,798,2.228,800,2.228,974,2.399,976,2.614,979,4.493,983,2.399,1153,3.458,1154,2.901,1155,4.902,1156,2.901,1157,3.336,1158,3.336,1159,3.336,1160,3.336,1161,3.336,1162,2.901,1163,2.614,1164,2.614,1165,3.336,1166,3.336,1167,3.336,1168,3.336,1169,3.336,1170,3.336,1171,3.336]],["title/modules/RolesModule.html",[27,1.022,46,2.492]],["body/modules/RolesModule.html",[2,2.02,3,0.154,4,0.154,5,0.097,7,0.32,8,0.014,13,0.852,20,0.154,21,0.248,25,0.011,26,0.011,27,1.779,29,2.191,30,2.191,31,2.396,32,2.396,33,2.191,34,3.325,35,3.031,46,4.878,48,3.031,49,2.396,50,2.396,52,2.512,54,2.782,55,1.538,114,0.639,154,4.266,256,1.721,353,2.942,355,2.191,600,3.954,604,3.595,1153,4.989,1162,4.346,1172,4.346,1173,4.346,1174,4.346,1175,4.998,1176,4.998,1177,4.346,1178,4.998]],["title/injectables/RolesService.html",[86,0.791,154,2.105]],["body/injectables/RolesService.html",[3,0.076,4,0.076,5,0.048,7,0.293,8,0.014,13,0.422,20,0.076,21,0.123,22,1.614,23,1.186,25,0.007,26,0.007,27,0.634,55,0.761,60,1.306,61,1.977,62,1.306,63,1.208,77,3.103,83,1.587,86,0.763,87,0.92,89,0.25,90,1.14,92,0.813,94,1.707,95,0.952,107,2.468,110,2.002,113,1.874,114,0.881,115,0.679,116,1.807,117,2.758,137,1.762,153,1.084,154,2.03,175,2.077,177,3.009,238,1.546,248,1.63,252,2.892,255,1.253,256,1.83,263,1.549,275,1.133,286,2.957,290,1.456,296,1.06,297,1.614,298,1.614,299,1.614,303,1.76,304,2.911,305,2.158,311,2.158,312,1.614,315,2.056,316,1.614,325,1.684,328,1.039,330,1.084,358,3.127,362,2.265,368,1.456,369,1.546,370,1.456,371,1.456,374,1.133,375,2.946,376,2.946,377,1.546,378,1.546,379,1.546,380,1.546,381,1.546,382,1.546,383,1.546,384,1.546,385,3.584,386,2.402,387,1.456,388,2.402,390,2.402,391,1.546,392,2.139,394,1.546,395,1.546,396,1.652,397,1.652,398,1.652,399,1.652,400,1.546,401,1.546,402,1.546,403,1.377,404,1.546,405,2.402,406,1.546,407,1.546,408,1.546,409,3.322,410,1.546,411,2.402,412,2.402,413,1.546,414,1.546,415,2.402,416,1.546,417,1.546,418,1.546,419,1.546,420,1.546,421,1.546,422,1.546,423,1.546,424,1.546,425,1.546,427,2.402,430,0.92,431,1.133,437,2.141,489,2.957,537,1.546,538,1.652,558,3.807,610,3.01,617,1.652,619,2.764,626,1.938,641,2.151,663,1.652,823,2.566,863,1.779,919,1.779,1003,3.01,1005,2.151,1007,1.938,1017,1.938,1018,1.938,1020,1.938,1021,1.938,1156,3.341,1163,3.01,1177,2.151,1179,2.151,1180,2.474,1181,2.474,1182,2.474,1183,2.474,1184,2.474,1185,2.474,1186,4.725,1187,2.474,1188,2.151,1189,2.151,1190,2.474,1191,2.474,1192,2.474,1193,2.474,1194,2.474,1195,2.474,1196,2.474,1197,2.474,1198,3.843,1199,2.151,1200,2.474,1201,3.843,1202,2.474,1203,2.474,1204,2.151,1205,2.474]],["title/injectables/TransformInterceptor.html",[86,0.791,1040,2.866]],["body/injectables/TransformInterceptor.html",[3,0.137,4,0.137,5,0.087,7,0.309,8,0.014,13,0.761,20,0.181,21,0.222,22,1.875,25,0.01,26,0.01,83,1.621,86,1.167,87,1.661,89,0.451,90,1.744,92,0.784,94,1.324,95,0.596,113,1.809,114,0.751,115,0.655,116,1.744,119,2.791,145,2.045,333,2.045,362,1.661,392,2.485,403,2.485,566,4.228,623,3.21,665,4.727,745,2.791,830,3.881,831,5.839,834,5.024,836,4.605,842,3.21,1031,3.497,1032,5.111,1033,5.111,1034,6.074,1035,5.715,1036,3.497,1037,3.881,1038,3.881,1039,3.21,1040,4.228,1041,5.715,1042,6.074,1043,3.881,1044,3.881,1045,3.881,1046,3.881,1047,3.881,1048,5.111,1049,3.881,1050,3.881,1051,3.881,1206,4.464,1207,4.464,1208,4.464]],["title/classes/UpdateCompanyDto.html",[21,0.198,320,2.662]],["body/classes/UpdateCompanyDto.html",[3,0.183,4,0.183,5,0.116,7,0.3,8,0.014,20,0.183,21,0.296,25,0.012,26,0.012,296,1.642,301,3.723,320,4.701,329,4.665,433,1.42,478,2.727,510,4.665,738,3.145,739,2.993,743,2.61,1209,5.177,1210,5.955]],["title/classes/UpdateFileDto.html",[21,0.198,674,2.662]],["body/classes/UpdateFileDto.html",[3,0.183,4,0.183,5,0.116,7,0.3,8,0.014,20,0.183,21,0.296,25,0.012,26,0.012,296,1.642,433,1.42,478,2.727,515,3.723,517,4.665,674,4.701,688,4.665,738,3.145,739,2.993,743,2.61,1211,5.177,1212,5.955]],["title/classes/UpdateJobDto.html",[21,0.198,786,2.662]],["body/classes/UpdateJobDto.html",[3,0.183,4,0.183,5,0.116,7,0.3,8,0.014,20,0.183,21,0.296,25,0.012,26,0.012,296,1.642,433,1.42,464,4.283,478,2.727,481,3.505,738,3.145,739,2.993,743,2.61,786,4.701,791,4.665,1213,5.177,1214,5.955]],["title/classes/UpdatePermissionDto.html",[21,0.198,979,2.492]],["body/classes/UpdatePermissionDto.html",[3,0.183,4,0.183,5,0.116,7,0.3,8,0.014,20,0.183,21,0.296,25,0.012,26,0.012,296,1.642,433,1.42,478,2.727,534,3.723,536,4.665,738,3.145,739,2.993,743,2.61,979,4.401,983,4.283,1164,4.665,1215,5.955]],["title/classes/UpdateResumeDto.html",[21,0.198,742,2.346]],["body/classes/UpdateResumeDto.html",[3,0.15,4,0.15,5,0.095,7,0.318,8,0.014,20,0.15,21,0.371,25,0.011,26,0.011,63,1.251,89,0.493,92,0.651,95,0.831,108,1.164,115,0.805,214,1.485,248,1.251,255,1.297,296,1.345,430,2.688,433,1.164,443,2.235,465,3.077,469,3.893,476,3.623,477,1.888,478,2.852,480,2.452,498,3.665,543,2.716,545,3.05,548,2.577,731,4.567,732,4.479,733,3.822,738,2.577,739,2.452,740,3.259,741,3.822,742,3.665,743,2.139,744,3.822,1216,4.879,1217,4.879]],["title/classes/UpdateRoleDto.html",[21,0.198,1186,2.866]],["body/classes/UpdateRoleDto.html",[3,0.183,4,0.183,5,0.116,7,0.3,8,0.014,20,0.183,21,0.296,25,0.012,26,0.012,296,1.642,433,1.42,478,2.727,558,3.723,560,4.665,738,3.145,739,2.993,743,2.61,1163,4.665,1186,5.062,1218,5.177,1219,5.955]],["title/classes/UpdateUserDto.html",[21,0.198,1220,2.662]],["body/classes/UpdateUserDto.html",[3,0.167,4,0.167,5,0.106,7,0.306,8,0.014,20,0.167,21,0.331,25,0.011,26,0.011,89,0.549,92,0.724,95,0.888,108,1.294,115,0.605,151,3.624,175,1.67,214,1.588,248,1.976,296,1.497,433,1.294,465,2.187,477,2.1,478,2.486,495,3.393,502,2.866,738,2.866,739,2.727,743,2.379,1220,4.446,1221,5.787,1222,6.656,1223,6.656,1224,5.427,1225,5.427,1226,5.427]],["title/classes/UpdatedBy.html",[21,0.198,430,1.483]],["body/classes/UpdatedBy.html",[3,0.146,4,0.146,5,0.092,7,0.315,8,0.014,20,0.146,21,0.368,25,0.01,26,0.01,63,1.216,89,0.479,92,0.816,95,0.903,108,1.458,115,0.825,214,1.458,248,1.735,255,1.8,296,1.307,430,2.753,433,1.131,443,2.171,465,3.107,469,3.822,476,3.574,477,1.835,478,2.8,480,2.382,498,3.598,543,2.638,545,2.964,548,2.504,554,4.121,731,4.208,732,4.867,733,3.714,738,2.504,739,2.382,740,3.166,741,4.789,742,2.79,743,2.078,744,3.714,1227,4.74,1228,4.74]],["title/classes/User.html",[21,0.198,110,1.182]],["body/classes/User.html",[3,0.095,4,0.095,5,0.06,7,0.23,8,0.014,20,0.166,21,0.154,25,0.008,26,0.008,55,0.952,63,1.168,89,0.313,92,1.039,95,1.033,108,1.858,110,1.35,114,0.761,115,0.887,165,2.558,175,0.952,184,3.884,214,1.086,248,1.527,255,1.765,256,2.051,275,2.473,308,1.791,355,1.357,362,1.694,374,2.473,430,2.009,431,2.473,433,0.738,435,2.852,436,3.376,438,3.179,440,3.006,441,4.994,443,3.224,445,3.505,446,4.567,447,4.143,452,2.404,458,1.935,459,2.68,460,1.935,461,2.765,482,2.589,503,3.607,505,3.179,596,2.067,601,2.067,604,2.226,618,2.226,1054,3.566,1055,3.566,1229,2.226,1230,5.4,1231,3.095,1232,3.095,1233,3.095,1234,3.095,1235,3.095,1236,3.095,1237,3.095,1238,4.552,1239,3.095,1240,3.095,1241,3.095,1242,3.095,1243,3.095,1244,3.095,1245,3.095,1246,3.095,1247,3.095,1248,3.095,1249,4.552,1250,2.691]],["title/classes/UserLoginDto.html",[21,0.198,149,2.346]],["body/classes/UserLoginDto.html",[3,0.127,4,0.127,5,0.08,7,0.288,8,0.014,20,0.194,21,0.362,24,3.063,25,0.01,26,0.01,63,1.432,89,0.418,92,0.745,95,1.071,108,1.332,114,0.808,115,0.755,135,2.183,149,3.287,150,3.722,158,1.893,214,1.332,231,4.164,248,1.06,255,1.485,256,1.423,308,2.246,362,2.52,433,0.986,435,2.949,437,2.73,461,2.25,465,3.096,472,3.491,473,3.491,474,3.954,476,2.949,477,1.599,480,2.077,482,3.573,495,2.583,498,3.722,499,3.287,500,2.972,501,4.548,502,2.183,503,3.729,504,3.729,505,3.287,506,4.016,507,4.016,508,4.016,1251,5.584,1252,4.132,1253,4.132]],["title/controllers/UsersController.html",[0,1.273,1254,2.866]],["body/controllers/UsersController.html",[0,1.021,2,1.021,3,0.098,4,0.098,5,0.062,7,0.295,8,0.014,9,2.343,13,0.545,20,0.098,21,0.159,24,1.343,25,0.008,26,0.008,61,1.189,77,3.043,83,1.773,89,0.323,90,1.383,92,0.858,94,1.908,95,1.032,99,1.689,107,2.634,108,1.534,110,2.391,113,1.979,114,0.822,115,0.717,116,1.908,117,2.638,137,1.546,140,1.779,143,2.744,144,1.607,145,1.464,151,3.114,156,1.882,158,1.464,175,0.984,177,2.52,221,2.906,248,0.82,263,1.879,272,2.505,274,2.78,275,1.464,276,2.78,296,1.286,297,2.312,298,1.958,299,1.958,303,1.464,304,2.77,305,2.77,309,2.744,311,2.135,312,1.343,315,2.598,316,1.343,317,1.882,323,2.595,324,1.882,325,2.044,328,1.343,330,1.401,333,1.464,334,1.999,336,2.915,337,1.999,338,1.999,340,1.882,341,1.882,502,3.546,710,1.999,779,2.135,784,2.135,794,2.135,798,2.135,800,2.135,974,2.299,1220,4.484,1254,3.353,1255,2.78,1256,2.78,1257,2.78,1258,3.197,1259,3.197,1260,3.197,1261,3.197,1262,3.197,1263,2.78,1264,3.197,1265,3.197,1266,3.197,1267,2.78,1268,2.78,1269,3.197,1270,3.197,1271,3.197,1272,3.197,1273,4.053,1274,3.197,1275,3.197,1276,4.662,1277,3.197,1278,3.197]],["title/modules/UsersModule.html",[27,1.022,47,2.492]],["body/modules/UsersModule.html",[2,1.969,3,0.148,4,0.148,5,0.093,7,0.323,8,0.014,13,0.819,20,0.148,21,0.239,25,0.011,26,0.011,27,1.746,29,2.105,30,2.105,31,2.302,32,2.302,33,2.105,34,3.264,35,3.264,47,4.834,48,2.955,49,2.302,50,2.302,52,2.414,54,2.673,55,1.478,110,1.425,114,0.788,221,4.264,256,1.654,353,2.827,355,2.702,596,4.117,600,3.854,601,3.207,602,4.175,604,3.454,1254,4.897,1267,4.175,1279,4.175,1280,4.175,1281,4.802,1282,4.802,1283,4.802,1284,4.175]],["title/injectables/UsersService.html",[86,0.791,221,2.105]],["body/injectables/UsersService.html",[3,0.058,4,0.058,5,0.037,7,0.288,8,0.014,13,0.323,20,0.058,21,0.094,22,1.306,23,1.49,25,0.005,26,0.005,55,0.584,60,1.002,61,1.699,62,1.002,63,1.013,77,3.072,83,1.866,86,0.617,87,0.705,89,0.192,90,0.922,92,0.887,94,1.77,95,0.989,107,2.275,110,2.113,113,1.901,114,0.9,115,0.688,116,1.833,117,2.416,135,2.412,137,1.309,145,0.869,151,2.076,175,2.143,177,3.098,184,3.284,214,0.741,218,2.702,221,1.641,226,2.702,231,1.829,233,2.637,234,2.637,238,1.185,246,1.364,248,1.63,255,1.732,256,2.055,263,1.253,272,2.435,283,1.486,286,2.198,296,0.857,297,1.306,298,1.306,299,1.306,303,1.423,304,2.618,305,1.809,308,1.03,311,1.809,312,1.306,315,1.951,316,1.306,325,1.362,328,0.797,330,0.831,358,3.365,362,2.014,368,1.116,369,1.185,370,1.116,371,1.116,374,0.869,375,2.469,376,2.469,377,1.185,378,1.185,379,1.185,380,1.185,381,1.185,382,1.185,383,1.185,384,1.185,385,2.966,386,1.943,387,1.116,388,1.943,390,1.943,391,1.185,392,1.73,394,1.185,395,1.185,400,1.185,401,1.185,402,1.185,403,1.055,404,1.185,405,1.943,406,1.185,407,1.185,408,1.185,409,2.855,410,1.185,411,1.943,412,1.943,413,1.185,414,1.185,415,1.943,416,1.185,417,1.185,418,1.185,419,1.185,420,1.185,421,1.185,422,1.185,423,1.185,424,1.185,425,1.943,427,1.943,431,0.869,435,2.412,482,2.86,502,2.859,505,2.688,601,1.266,608,1.649,610,3.094,613,2.702,617,1.266,618,1.364,621,2.235,626,1.486,650,1.649,661,1.649,663,2.076,823,1.266,863,2.235,911,1.486,919,2.235,1007,2.435,1137,1.649,1138,4.382,1188,1.649,1189,1.649,1199,2.702,1204,1.649,1220,3.616,1257,2.702,1263,2.702,1268,1.649,1273,1.649,1284,1.649,1285,1.649,1286,3.949,1287,3.949,1288,3.949,1289,3.108,1290,3.108,1291,1.896,1292,1.896,1293,1.896,1294,1.896,1295,3.108,1296,1.896,1297,3.108,1298,5.414,1299,1.896,1300,1.896,1301,1.896,1302,1.896,1303,1.896,1304,1.896,1305,1.896,1306,1.896,1307,1.896,1308,1.896,1309,1.896,1310,1.896,1311,1.649,1312,1.896,1313,1.896,1314,1.896,1315,3.108,1316,1.896,1317,1.896,1318,3.108,1319,3.108,1320,4.567,1321,1.896,1322,3.108,1323,1.896,1324,3.108,1325,3.949,1326,1.896,1327,3.949,1328,1.896,1329,1.896,1330,1.896,1331,1.896,1332,1.896,1333,1.896]],["title/coverage.html",[1334,4.737]],["body/coverage.html",[0,2.203,1,1.781,5,0.075,6,2.153,8,0.014,14,1.548,18,1.379,21,0.393,25,0.007,26,0.007,33,1.086,74,1.781,86,1.48,88,2.153,97,1.781,98,2.153,107,0.886,110,1.141,115,0.276,119,1.548,135,1.308,137,0.821,143,1.458,144,1.245,146,1.781,149,1.458,150,3.13,154,1.308,194,1.654,195,1.654,213,2.153,221,1.308,256,0.853,293,1.781,294,2.153,301,1.548,308,1.564,320,1.654,326,1.548,351,1.781,356,2.153,430,0.921,434,2.766,463,3.014,464,3.392,481,1.458,495,3.599,502,1.308,509,2.153,510,3.014,515,1.548,516,2.153,517,3.014,534,1.548,535,2.153,536,3.014,543,1.379,544,3.014,545,3.599,557,1.548,558,1.548,559,2.153,560,3.014,568,1.134,586,1.781,587,2.153,589,1.548,596,1.654,598,1.654,600,1.548,605,2.153,619,1.781,620,1.94,621,1.781,636,6.515,666,2.153,667,1.781,668,2.153,674,1.654,686,1.548,717,1.781,720,2.153,731,1.458,732,3.392,742,1.458,745,2.405,747,2.153,748,1.379,749,2.766,773,1.781,775,1.781,776,2.153,786,1.654,789,1.548,808,2.153,826,2.153,827,3.014,844,1.94,871,2.153,888,2.153,890,2.153,896,2.153,957,2.766,970,1.781,971,2.153,979,1.548,981,1.548,996,2.153,1031,3.014,1039,1.781,1040,1.781,1052,1.458,1053,2.766,1074,1.781,1076,1.781,1077,2.153,1092,1.548,1111,2.153,1140,2.766,1153,1.781,1154,2.153,1164,1.94,1179,2.153,1186,1.781,1209,2.153,1211,2.153,1213,2.153,1218,2.153,1220,1.654,1221,2.153,1229,2.766,1254,1.781,1255,2.153,1285,2.153,1334,2.153,1335,2.477,1336,2.477,1337,2.477,1338,7.831,1339,4.716,1340,6.75,1341,4.716,1342,6.359,1343,6.093,1344,6.093,1345,4.716,1346,4.716,1347,7.314,1348,4.1,1349,5.005,1350,3.847,1351,2.477,1352,2.153,1353,2.477,1354,2.477,1355,2.477,1356,2.477,1357,2.477,1358,2.477]],["title/dependencies.html",[30,2.102,1359,2.89]],["body/dependencies.html",[8,0.014,13,0.834,17,2.879,21,0.31,25,0.011,26,0.011,30,2.144,55,1.506,60,2.584,61,1.82,62,2.584,63,1.6,147,3.832,152,2.879,158,2.241,199,3.058,202,3.832,204,3.832,266,4.253,325,2.144,370,2.879,371,2.879,477,1.893,478,2.241,480,2.459,690,3.518,739,2.459,842,3.518,878,5.381,879,4.253,1036,3.832,1311,4.253,1360,6.868,1361,4.892,1362,4.892,1363,6.238,1364,4.892,1365,4.892,1366,4.892,1367,4.892,1368,4.892,1369,4.892,1370,4.892,1371,4.892,1372,4.892,1373,4.892,1374,4.892,1375,4.892,1376,4.892,1377,4.892,1378,4.892,1379,4.892,1380,4.892,1381,4.892,1382,4.892,1383,4.892,1384,4.892,1385,4.892,1386,4.892,1387,4.892,1388,4.892]],["title/miscellaneous/functions.html",[1389,2.078,1390,4.17]],["body/miscellaneous/functions.html",[8,0.012,25,0.012,26,0.012,33,3.363,89,0.637,1352,5.479,1389,3.94,1390,5.479,1391,6.302]],["title/index.html",[89,0.403,1392,3.465]],["body/index.html",[2,1.189,8,0.014,14,3.743,18,4.034,25,0.009,26,0.009,27,0.955,28,5.841,29,1.631,30,1.631,31,1.784,32,1.784,33,1.631,34,1.784,35,1.784,36,3.236,37,3.236,38,3.236,39,5.255,40,4.716,41,4.841,42,4.553,43,4.553,44,4.553,45,4.553,46,4.531,47,4.531,48,2.491,49,1.784,50,1.784,87,1.385,154,3.828,190,3.236,192,3.236,193,3.236,194,3.999,195,3.999,221,3.905,326,4.531,346,3.236,347,3.236,348,3.236,387,3.059,433,0.888,494,3.236,589,3.743,592,3.236,593,3.236,686,3.743,712,3.236,713,3.236,746,2.916,789,3.743,802,3.236,803,3.236,981,3.743,991,3.236,992,3.236,1092,3.743,1105,3.236,1106,3.236,1172,3.236,1173,3.236,1174,3.236,1279,3.236,1280,3.236,1392,3.236,1393,3.722,1394,3.722]],["title/modules.html",[29,2.388]],["body/modules.html",[8,0.011,25,0.011,26,0.011,28,3.95,29,2.407,39,3.668,40,3.668,41,3.668,42,3.668,43,3.668,44,3.668,45,3.668,46,3.433,47,3.433,1395,8.145,1396,8.145,1397,8.145,1398,8.145]],["title/properties.html",[214,1.144,1359,2.89]],["body/properties.html",[8,0.014,25,0.012,26,0.012,96,5.369,214,1.473,437,2.489,1399,6.175,1400,6.175,1401,6.175,1402,6.175,1403,6.175,1404,6.175,1405,6.175]],["title/miscellaneous/typealiases.html",[1389,2.078,1406,4.796]],["body/miscellaneous/typealiases.html",[8,0.012,25,0.012,26,0.012,89,0.585,115,0.645,367,5.421,434,4.161,459,4.685,616,4.977,617,4.622,618,4.977,749,4.161,772,5.421,957,4.161,1053,4.161,1072,5.421,1140,4.161,1229,4.161,1389,3.617,1407,5.786,1408,5.03,1409,5.03,1410,5.03,1411,5.03,1412,5.03,1413,5.03]],["title/miscellaneous/variables.html",[1389,2.078,1414,4.17]],["body/miscellaneous/variables.html",[5,0.023,8,0.014,9,2.449,12,0.868,25,0.004,26,0.004,27,1.852,61,2.119,83,0.333,89,0.122,95,0.516,110,1.519,114,0.923,115,0.431,117,0.579,143,1.246,144,1.064,165,0.486,175,0.371,233,3.998,234,3.998,248,2.017,252,1.943,254,6.28,255,1.93,256,1.17,263,1.716,275,3.308,283,3.335,295,3.361,296,1.174,308,1.282,309,2.506,315,1.648,323,2.369,351,1.523,374,3.308,430,0.449,434,0.868,438,4.251,440,4.02,462,1.049,537,4.515,538,4.824,548,0.637,566,1.523,568,1.771,596,1.414,598,1.414,600,1.324,619,1.523,620,1.659,621,1.523,636,5.658,657,6.31,665,0.868,669,0.946,748,2.152,749,0.868,773,1.523,774,1.049,777,3.361,834,0.868,844,1.659,847,1.049,885,6.28,957,0.868,969,1.049,1039,2.034,1052,2.276,1053,0.868,1074,1.523,1075,1.049,1078,3.989,1140,0.868,1152,1.049,1155,3.701,1229,0.868,1250,1.049,1256,3.361,1348,1.049,1349,1.049,1389,0.755,1408,1.049,1409,1.049,1410,1.049,1411,1.049,1412,1.049,1413,1.049,1414,1.049,1415,2.828,1416,3.866,1417,1.207,1418,1.207,1419,2.117,1420,7.258,1421,7.223,1422,7.854,1423,7.854,1424,1.207,1425,1.207,1426,7.223,1427,1.207,1428,2.117,1429,1.207,1430,2.828,1431,2.117,1432,1.207,1433,2.117,1434,1.207,1435,2.117,1436,1.207,1437,2.117,1438,2.117,1439,1.207,1440,2.828,1441,2.117,1442,1.207,1443,2.117,1444,1.207,1445,2.117,1446,1.207,1447,2.117,1448,1.207,1449,1.207,1450,1.207,1451,1.207,1452,2.117,1453,1.207,1454,2.117,1455,2.117,1456,1.207,1457,2.828,1458,2.117,1459,1.207,1460,2.117,1461,1.207,1462,2.117,1463,1.207,1464,2.117,1465,1.207,1466,2.117,1467,2.117,1468,1.207,1469,2.117,1470,1.207,1471,2.828,1472,2.117,1473,1.207,1474,2.117,1475,1.207,1476,2.117,1477,1.207,1478,1.207,1479,2.117,1480,1.207,1481,2.117,1482,2.117,1483,1.207,1484,2.117,1485,1.207,1486,2.828,1487,2.117,1488,1.207,1489,2.117,1490,1.207,1491,2.117,1492,1.207,1493,2.117,1494,2.117,1495,1.207,1496,2.117,1497,1.207,1498,2.828,1499,2.117,1500,1.207,1501,2.117,1502,1.207,1503,2.117,1504,1.207,1505,1.207,1506,1.207,1507,1.207,1508,1.207,1509,1.207,1510,1.207]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":636,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1400,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1384,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1370,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1369,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1379,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1338,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1355,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1346,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1350,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1354,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1356,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1339,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1351,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1343,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1342,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1345,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1340,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1344,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1341,"title":{},"body":{"coverage.html":{}}}],["07",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":385,"title":{"classes/Company-1.html":{}},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["1.0.0",{"_index":1381,"title":{},"body":{"dependencies.html":{}}}],["1.0.15",{"_index":1386,"title":{},"body":{"dependencies.html":{}}}],["1.22.19",{"_index":1388,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":1372,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":387,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["10.0.0",{"_index":1363,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":1362,"title":{},"body":{"dependencies.html":{}}}],["1024*1024",{"_index":701,"title":{},"body":{"controllers/FilesController.html":{}}}],["123456",{"_index":508,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["16",{"_index":1393,"title":{},"body":{"index.html":{}}}],["16.3.1",{"_index":1374,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":494,"title":{"classes/Company-2.html":{}},"body":{"index.html":{}}}],["2.0.6",{"_index":1366,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":1378,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1368,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t06:47:49.369z",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t06:48:22.224z",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t06:51:01.241z",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t06:51:23.973z",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t06:54:05.131z",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t06:54:32.799z",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t06:59:31.898z",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t06:59:51.041z",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t07:00:13.364z",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t07:00:41.934z",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t07:00:56.274z",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t07:01:36.923z",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t09:06:16.508z",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t09:06:33.697z",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t09:06:46.085z",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t09:07:24.175z",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t09:07:37.896z",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t09:08:14.659z",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t09:08:33.395z",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t09:08:50.801z",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t09:09:15.785z",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t09:09:41.694z",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t09:10:05.961z",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t09:10:50.946z",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t09:11:10.914z",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t09:11:33.234z",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t09:11:48.081z",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t09:12:11.323z",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t09:12:51.974z",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t09:13:06.618z",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t09:13:20.853z",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t09:13:36.836z",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20t09:13:52.798z",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":1394,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":1361,"title":{},"body":{"dependencies.html":{}}}],["3.1.9",{"_index":1376,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1380,"title":{},"body":{"dependencies.html":{}}}],["5.4.0",{"_index":1367,"title":{},"body":{"dependencies.html":{}}}],["647b5108a8a243e8191855b5",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab415f4328bd3153ee211",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab436f4328bd3153ee216",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4d5f4328bd3153ee21b",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4ebf4328bd3153ee220",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab5a8072f2a2ef910638d",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6d3fa16b294212e4033",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6e7fa16b294212e4038",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6fdfa16b294212e403d",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab719fa16b294212e4042",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab728fa16b294212e4047",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab750fa16b294212e404c",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad488dafdb9754f40b846",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad499dafdb9754f40b84b",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4a6dafdb9754f40b850",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4ccdafdb9754f40b859",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4d9dafdb9754f40b85e",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4fedafdb9754f40b863",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad511dafdb9754f40b868",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad522dafdb9754f40b86d",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad53bdafdb9754f40b872",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad555dafdb9754f40b877",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad56ddafdb9754f40b87c",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad59adafdb9754f40b881",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5aedafdb9754f40b886",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5c5dafdb9754f40b88b",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5d4dafdb9754f40b890",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5ebdafdb9754f40b895",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad613dafdb9754f40b89a",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad622dafdb9754f40b89f",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad630dafdb9754f40b8a6",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad640dafdb9754f40b8ab",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad650dafdb9754f40b8b0",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69",{"_index":652,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["7.0.4",{"_index":1364,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1385,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":1377,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":1360,"title":{},"body":{"dependencies.html":{}}}],["96",{"_index":658,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["__v",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["access",{"_index":870,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["access_token",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["action",{"_index":727,"title":{},"body":{"injectables/FilesService.html":{}}}],["actual",{"_index":1050,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["add",{"_index":1365,"title":{},"body":{"dependencies.html":{}}}],["addfiletypevalidator",{"_index":696,"title":{},"body":{"controllers/FilesController.html":{}}}],["addmaxsizevalidator",{"_index":699,"title":{},"body":{"controllers/FilesController.html":{}}}],["address",{"_index":435,"title":{},"body":{"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["adds",{"_index":728,"title":{},"body":{"injectables/FilesService.html":{}}}],["admin",{"_index":641,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{}}}],["admin@gmail.com",{"_index":650,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["admin_role",{"_index":619,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminrole",{"_index":646,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["adminrole?._id",{"_index":655,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["age",{"_index":504,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["aliases",{"_index":1407,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":663,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["api",{"_index":370,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["api/v1/companies",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/companies/:id",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/files/upload",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs/:id",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions/:id",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/:id",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/by",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles/:id",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users/:id",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["apipath",{"_index":537,"title":{},"body":{"classes/CreatePermissionDto.html":{},"interfaces/IUser.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["apipath=${apipath",{"_index":1009,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["apiproperty",{"_index":501,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["apitags",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('companies",{"_index":331,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["apitags('jobs",{"_index":792,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags('permissions",{"_index":984,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["apitags('resumes",{"_index":1094,"title":{},"body":{"controllers/ResumesController.html":{}}}],["apitags('roles",{"_index":1165,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags('users",{"_index":1269,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":28,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["appservice",{"_index":14,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"index.html":{}}}],["aqp",{"_index":369,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["aqp(qs",{"_index":381,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["arguments",{"_index":855,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["async",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":205,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":827,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:13",{"_index":832,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:16",{"_index":835,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:27",{"_index":838,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["authcontroller",{"_index":97,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":843,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":845,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":889,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":39,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"index.html":{},"modules.html":{}}}],["author",{"_index":1403,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":18,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"index.html":{}}}],["await",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["badrequestexception",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception(\"cant",{"_index":1204,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception(\"not",{"_index":1021,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["badrequestexception(\"refresh",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('not",{"_index":1018,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["badrequestexception(`email",{"_index":1319,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception(`not",{"_index":426,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["badrequestexception(`permission",{"_index":1008,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["badrequestexception(`role",{"_index":1190,"title":{},"body":{"injectables/RolesService.html":{}}}],["based",{"_index":854,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["basename",{"_index":953,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["bcryptjs",{"_index":1311,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["birthday",{"_index":1230,"title":{},"body":{"classes/User.html":{}}}],["body",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["body(\"status",{"_index":1102,"title":{},"body":{"controllers/ResumesController.html":{}}}],["boolean",{"_index":452,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["boolean(isinit",{"_index":629,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bootstrap",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["break",{"_index":927,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["browse",{"_index":1398,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1395,"title":{},"body":{"modules.html":{}}}],["build",{"_index":702,"title":{},"body":{"controllers/FilesController.html":{}}}],["bulk",{"_index":638,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bản",{"_index":411,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["callhandler",{"_index":1034,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":828,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":833,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["case",{"_index":922,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["catch",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["cb",{"_index":940,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb(null",{"_index":944,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["check",{"_index":857,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["class",{"_index":21,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":433,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_providers",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_authmodule",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_exports",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_imports",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_companiesmodule",{"_index":346,"title":{},"body":{"modules/CompaniesModule.html":{},"index.html":{}}}],["cluster_companiesmodule_exports",{"_index":348,"title":{},"body":{"modules/CompaniesModule.html":{},"index.html":{}}}],["cluster_companiesmodule_providers",{"_index":347,"title":{},"body":{"modules/CompaniesModule.html":{},"index.html":{}}}],["cluster_databasesmodule",{"_index":592,"title":{},"body":{"modules/DatabasesModule.html":{},"index.html":{}}}],["cluster_databasesmodule_providers",{"_index":593,"title":{},"body":{"modules/DatabasesModule.html":{},"index.html":{}}}],["cluster_filesmodule",{"_index":712,"title":{},"body":{"modules/FilesModule.html":{},"index.html":{}}}],["cluster_filesmodule_providers",{"_index":713,"title":{},"body":{"modules/FilesModule.html":{},"index.html":{}}}],["cluster_jobsmodule",{"_index":802,"title":{},"body":{"modules/JobsModule.html":{},"index.html":{}}}],["cluster_jobsmodule_providers",{"_index":803,"title":{},"body":{"modules/JobsModule.html":{},"index.html":{}}}],["cluster_permissionsmodule",{"_index":991,"title":{},"body":{"modules/PermissionsModule.html":{},"index.html":{}}}],["cluster_permissionsmodule_providers",{"_index":992,"title":{},"body":{"modules/PermissionsModule.html":{},"index.html":{}}}],["cluster_resumesmodule",{"_index":1105,"title":{},"body":{"modules/ResumesModule.html":{},"index.html":{}}}],["cluster_resumesmodule_providers",{"_index":1106,"title":{},"body":{"modules/ResumesModule.html":{},"index.html":{}}}],["cluster_rolesmodule",{"_index":1172,"title":{},"body":{"modules/RolesModule.html":{},"index.html":{}}}],["cluster_rolesmodule_exports",{"_index":1173,"title":{},"body":{"modules/RolesModule.html":{},"index.html":{}}}],["cluster_rolesmodule_providers",{"_index":1174,"title":{},"body":{"modules/RolesModule.html":{},"index.html":{}}}],["cluster_usersmodule",{"_index":1279,"title":{},"body":{"modules/UsersModule.html":{},"index.html":{}}}],["cluster_usersmodule_exports",{"_index":1280,"title":{},"body":{"modules/UsersModule.html":{},"index.html":{}}}],["cluster_usersmodule_providers",{"_index":1281,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":399,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["companies",{"_index":295,"title":{},"body":{"controllers/CompaniesController.html":{},"miscellaneous/variables.html":{}}}],["companies.controller",{"_index":350,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["companies.service",{"_index":327,"title":{},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{}}}],["companies/companies.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["companiescontroller",{"_index":293,"title":{"controllers/CompaniesController.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"coverage.html":{}}}],["companiesmodule",{"_index":40,"title":{"modules/CompaniesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"index.html":{},"modules.html":{}}}],["companiesservice",{"_index":326,"title":{"injectables/CompaniesService.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"coverage.html":{},"index.html":{}}}],["company",{"_index":308,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["company.dto",{"_index":329,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts",{"_index":510,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["company.dto.ts:12",{"_index":512,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:15",{"_index":513,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:6",{"_index":514,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:9",{"_index":511,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.name",{"_index":354,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Resume.html":{}}}],["companydocument",{"_index":367,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"miscellaneous/typealiases.html":{}}}],["companyid",{"_index":546,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["companymodel",{"_index":360,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["companyschema",{"_index":351,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparesync",{"_index":1310,"title":{},"body":{"injectables/UsersService.html":{}}}],["comparesync(password",{"_index":1326,"title":{},"body":{"injectables/UsersService.html":{}}}],["configmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot({isglobal:true",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('jwt_access_token_secret",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('mongodb",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["connection",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(softdeleteplugin",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionfactory",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["console",{"_index":771,"title":{},"body":{"classes/Job.html":{},"classes/Resume.html":{}}}],["console.error(error",{"_index":937,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log('directory",{"_index":916,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["const",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel(company.name",{"_index":372,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(authservice",{"_index":891,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companymodel",{"_index":357,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(configservice",{"_index":872,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jobmodel",{"_index":809,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(permissionmodel",{"_index":997,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["constructor(private",{"_index":333,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":830,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["constructor(resumemodel",{"_index":1113,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(rolemodel",{"_index":1180,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(usermodel",{"_index":608,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["const{name",{"_index":1005,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["const{url",{"_index":1124,"title":{},"body":{"injectables/ResumesService.html":{}}}],["contains",{"_index":931,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["context",{"_index":836,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":850,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":849,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":852,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":1046,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller(\"auth",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('companies",{"_index":332,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["controller('databases",{"_index":591,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["controller('files",{"_index":691,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('jobs",{"_index":793,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('permissions",{"_index":985,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["controller('resumes",{"_index":1095,"title":{},"body":{"controllers/ResumesController.html":{}}}],["controller('roles",{"_index":1166,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('users",{"_index":1270,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["cookie",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["countpermission",{"_index":632,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countrole",{"_index":634,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countuser",{"_index":630,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["coverage",{"_index":1334,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":296,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":334,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["create(createcompanydto",{"_index":300,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{}}}],["create(createfiledto",{"_index":721,"title":{},"body":{"injectables/FilesService.html":{}}}],["create(createjobdto",{"_index":778,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["create(createpermissiondto",{"_index":972,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["create(createroledto",{"_index":1156,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["create(createusercvdto",{"_index":1081,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["create(createuserdto",{"_index":1257,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createcompanydto",{"_index":301,"title":{"classes/CreateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["created",{"_index":918,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createdat",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["createdby",{"_index":374,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createdby:{_id,email",{"_index":1128,"title":{},"body":{"injectables/ResumesService.html":{}}}],["createfiledto",{"_index":515,"title":{"classes/CreateFileDto.html":{}},"body":{"classes/CreateFileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["createjobdto",{"_index":481,"title":{"classes/CreateJobDto.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["createmulteroptions",{"_index":898,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermissiondto",{"_index":534,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createrefreshtoken",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["createresumedto",{"_index":543,"title":{"classes/CreateResumeDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/History.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["createroledto",{"_index":558,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createusercvdto",{"_index":557,"title":{"classes/CreateUserCvDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":502,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["ctx",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":404,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["currentpage",{"_index":311,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["data",{"_index":665,"title":{},"body":{"injectables/DatabasesService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["data.result",{"_index":1048,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["databases",{"_index":588,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["databases.controller",{"_index":595,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["databases.service",{"_index":590,"title":{},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{}}}],["databases/databases.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["databasescontroller",{"_index":586,"title":{"controllers/DatabasesController.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"coverage.html":{}}}],["databasesmodule",{"_index":41,"title":{"modules/DatabasesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabasesModule.html":{},"index.html":{},"modules.html":{}}}],["databasesservice",{"_index":589,"title":{"injectables/DatabasesService.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"index.html":{}}}],["date",{"_index":443,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{}}}],["date(value",{"_index":491,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["date.now()}${extname",{"_index":956,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["declarations",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["decorators",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defaultlimit",{"_index":386,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["defined",{"_index":92,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":317,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@responsemessage('delete",{"_index":784,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["deleteat",{"_index":436,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["deletedat",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletedby",{"_index":431,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["denied",{"_index":936,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dependencies",{"_index":30,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":437,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/UserLoginDto.html":{},"properties.html":{}}}],["destination",{"_index":939,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dir",{"_index":933,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["directory",{"_index":926,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["diskstorage",{"_index":909,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["documentation",{"_index":1335,"title":{},"body":{"coverage.html":{}}}],["don't",{"_index":869,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["dotenv",{"_index":1373,"title":{},"body":{"dependencies.html":{}}}],["dto/create",{"_index":328,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":330,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["duy",{"_index":656,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["duy@gmail.com",{"_index":657,"title":{},"body":{"injectables/DatabasesService.html":{},"miscellaneous/variables.html":{}}}],["dân",{"_index":1405,"title":{},"body":{"properties.html":{}}}],["each",{"_index":567,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["eexist",{"_index":923,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ejs",{"_index":1375,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["email@gmail.com",{"_index":507,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["empty",{"_index":1223,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["enddate",{"_index":493,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/JobsService.html":{}}}],["endtdate",{"_index":750,"title":{},"body":{"classes/Job.html":{}}}],["enotdir",{"_index":928,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists",{"_index":899,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists(targetdirectory",{"_index":902,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["err",{"_index":839,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["error.code",{"_index":921,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["errorhttpstatuscode",{"_index":703,"title":{},"body":{"controllers/FilesController.html":{}}}],["example",{"_index":506,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["exception",{"_index":853,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["exec",{"_index":402,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["executioncontext",{"_index":834,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exists",{"_index":919,"title":{},"body":{"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["expiresin",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["exports:[rolesservice",{"_index":1178,"title":{},"body":{"modules/RolesModule.html":{}}}],["express",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":677,"title":{},"body":{"controllers/FilesController.html":{}}}],["extends",{"_index":743,"title":{},"body":{"classes/History.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{}}}],["extension",{"_index":948,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extname",{"_index":949,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":876,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":883,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":885,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file')@useinterceptors(undefined",{"_index":679,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.dto",{"_index":688,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{}}}],["file.dto.ts",{"_index":517,"title":{},"body":{"classes/CreateFileDto.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":705,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileinterceptor",{"_index":689,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":681,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["files",{"_index":669,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"miscellaneous/variables.html":{}}}],["files.controller",{"_index":715,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.service",{"_index":687,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files/files.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["filescontroller",{"_index":667,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesmodule",{"_index":42,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"index.html":{},"modules.html":{}}}],["filesservice",{"_index":686,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"coverage.html":{},"index.html":{}}}],["filetype",{"_index":697,"title":{},"body":{"controllers/FilesController.html":{}}}],["filter",{"_index":377,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["filter.current",{"_index":382,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["filter.pagesize",{"_index":383,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["finalname",{"_index":955,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["findall",{"_index":297,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(currentpage",{"_index":303,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findbyusers",{"_index":1112,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findbyusers(user",{"_index":1118,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findone",{"_index":298,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":341,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":312,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findonebyusername",{"_index":1289,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyusername(username",{"_index":1295,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbytoken",{"_index":1286,"title":{},"body":{"injectables/UsersService.html":{}}}],["folder",{"_index":941,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["forbiddenexception",{"_index":840,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["forbiddenexception(\"you",{"_index":868,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["found",{"_index":427,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["foundroler",{"_index":1202,"title":{},"body":{"injectables/RolesService.html":{}}}],["founduser",{"_index":1273,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["founduser.email",{"_index":1332,"title":{},"body":{"injectables/UsersService.html":{}}}],["fs",{"_index":908,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.mkdir(targetdirectory",{"_index":914,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["full",{"_index":642,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["function",{"_index":1353,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1390,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":505,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["gensaltsync",{"_index":1308,"title":{},"body":{"injectables/UsersService.html":{}}}],["gensaltsync(10",{"_index":1316,"title":{},"body":{"injectables/UsersService.html":{}}}],["get('/account",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/refresh",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":340,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@public",{"_index":313,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["get(':id')@public()@responsemessage('fetch",{"_index":782,"title":{},"body":{"controllers/JobsController.html":{}}}],["get(':id')@responsemessage('fetch",{"_index":976,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["get()@public()@responsemessage('fetch",{"_index":306,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{}}}],["get()@responsemessage('fetch",{"_index":974,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["gethashpassword",{"_index":1287,"title":{},"body":{"injectables/UsersService.html":{}}}],["gethello",{"_index":91,"title":{},"body":{"injectables/AppService.html":{}}}],["getresumbyuser",{"_index":1079,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getresumbyuser(@body",{"_index":1097,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getresumbyuser(user",{"_index":1085,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getrootpath",{"_index":897,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ghi",{"_index":412,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["grucep23",{"_index":96,"title":{},"body":{"injectables/AppService.html":{},"properties.html":{}}}],["handle",{"_index":1043,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["handlegetaccount",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(@user",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(user",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(req",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout(response",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken(@req",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken(request",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(@body",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(registeruserdto",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":829,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":837,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hash",{"_index":1298,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":1320,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync",{"_index":1309,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync(password",{"_index":1317,"title":{},"body":{"injectables/UsersService.html":{}}}],["hierarchy",{"_index":930,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["history",{"_index":731,"title":{"classes/History.html":{}},"body":{"classes/History.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["hiện",{"_index":406,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["httponly",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus",{"_index":685,"title":{},"body":{"controllers/FilesController.html":{}}}],["httpstatus.unprocessable_entity",{"_index":704,"title":{},"body":{"controllers/FilesController.html":{}}}],["hydrateddocument",{"_index":459,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["hỏi",{"_index":1404,"title":{},"body":{"properties.html":{}}}],["i'm",{"_index":649,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["id",{"_index":315,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateRoleDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1336,"title":{},"body":{"coverage.html":{}}}],["if(!isexist",{"_index":867,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["if(!mongoose.types.objectid.isvalid(_id",{"_index":1020,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["if(!mongoose.types.objectid.isvalid(id",{"_index":425,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["if(foundroler.name",{"_index":1203,"title":{},"body":{"injectables/RolesService.html":{}}}],["if(founduser",{"_index":1331,"title":{},"body":{"injectables/UsersService.html":{}}}],["if(isexist",{"_index":1007,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["if(isvalid===true",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(user",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["ignore",{"_index":397,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["ignoreexpiration",{"_index":884,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":947,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["image's",{"_index":951,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["implements",{"_index":623,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":89,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["information')@get('/account",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["init",{"_index":664,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["init_permissions",{"_index":620,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["injectable",{"_index":86,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":87,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["injectmodel",{"_index":368,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(job.name",{"_index":817,"title":{},"body":{"injectables/JobsService.html":{}}}],["injectmodel(permission.name",{"_index":625,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["injectmodel(resume.name",{"_index":1123,"title":{},"body":{"injectables/ResumesService.html":{}}}],["injectmodel(role.name",{"_index":626,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(user.name",{"_index":624,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["injectmodel(userm.name",{"_index":1312,"title":{},"body":{"injectables/UsersService.html":{}}}],["intercept",{"_index":1041,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":1207,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":745,"title":{"interfaces/IUser.html":{},"interfaces/Response.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":746,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"index.html":{}}}],["is_public_key",{"_index":844,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":489,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{}}}],["isarray",{"_index":469,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["isarray()@isstring({each",{"_index":529,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isboolean",{"_index":470,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["isdate",{"_index":471,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["isdeleted",{"_index":438,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":498,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{}}}],["isemail()@isnotempty",{"_index":579,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isexist",{"_index":863,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["isinit",{"_index":627,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["ismongoid",{"_index":499,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["ismongoid({each",{"_index":571,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["isnotempty",{"_index":465,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty()@isarray()@ismongoid({each",{"_index":565,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["isnotempty()@isarray()@validatenested()@type(undefined",{"_index":1216,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["isnotempty()@isboolean",{"_index":562,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["isnotempty()@isemail",{"_index":1227,"title":{},"body":{"classes/UpdatedBy.html":{}}}],["isnotempty()@ismongoid",{"_index":572,"title":{},"body":{"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{}}}],["isnotempty()@transform",{"_index":532,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isnotempty({message",{"_index":1222,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["isnotemptyobject",{"_index":472,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotemptyobject()@isobject()@validatenested()@type(undefined",{"_index":518,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{}}}],["isobject",{"_index":473,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isphonenumber",{"_index":500,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["ispublic",{"_index":847,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["iss",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":474,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({example",{"_index":1251,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["isstring({each",{"_index":487,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["isvalid",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalidpassword",{"_index":1290,"title":{},"body":{"injectables/UsersService.html":{}}}],["isvalidpassword(password",{"_index":1297,"title":{},"body":{"injectables/UsersService.html":{}}}],["it's",{"_index":925,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["iuser",{"_index":107,"title":{"interfaces/IUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["iều",{"_index":417,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["job",{"_index":748,"title":{"classes/Job.html":{}},"body":{"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/Resume.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["job.dto",{"_index":791,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts",{"_index":464,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:15",{"_index":525,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:16",{"_index":526,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:17",{"_index":528,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:18",{"_index":527,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:19",{"_index":523,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:20",{"_index":520,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:21",{"_index":524,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:26",{"_index":531,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:32",{"_index":519,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:35",{"_index":522,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:40",{"_index":533,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:41",{"_index":521,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:7",{"_index":466,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:8",{"_index":468,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:9",{"_index":467,"title":{},"body":{"classes/Company-1.html":{}}}],["job.name",{"_index":807,"title":{},"body":{"modules/JobsModule.html":{},"classes/Resume.html":{}}}],["jobdocument",{"_index":772,"title":{},"body":{"classes/Job.html":{},"injectables/JobsService.html":{},"miscellaneous/typealiases.html":{}}}],["jobid",{"_index":547,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["jobmodel",{"_index":811,"title":{},"body":{"injectables/JobsService.html":{}}}],["jobs",{"_index":777,"title":{},"body":{"controllers/JobsController.html":{},"miscellaneous/variables.html":{}}}],["jobs.controller",{"_index":805,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":790,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["jobschema",{"_index":773,"title":{},"body":{"classes/Job.html":{},"modules/JobsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobscontroller",{"_index":775,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["jobsmodule",{"_index":43,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"index.html":{},"modules.html":{}}}],["jobsservice",{"_index":789,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"index.html":{}}}],["join",{"_index":912,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["join(this.getrootpath",{"_index":945,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["jwt",{"_index":879,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":74,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":882,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":194,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"index.html":{}}}],["kiện",{"_index":418,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["kết",{"_index":422,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["legend",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["level",{"_index":485,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["license",{"_index":1401,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":304,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["limit(defaultlimit",{"_index":395,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["list",{"_index":307,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["literal",{"_index":445,"title":{},"body":{"classes/Company.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["local",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":146,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":195,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"index.html":{}}}],["location",{"_index":486,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{}}}],["logger",{"_index":606,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["logger(databasesservice.name",{"_index":615,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["login",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(user",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":439,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["logout",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["lượng",{"_index":410,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["lấy",{"_index":413,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["male",{"_index":653,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["map",{"_index":1037,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":1045,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalitems",{"_index":391,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["maxage:ms(this.configservice.get(\"jwt_refresh_expire",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxsize",{"_index":700,"title":{},"body":{"controllers/FilesController.html":{}}}],["message",{"_index":566,"title":{},"body":{"classes/CreateRoleDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":403,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":1383,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":538,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["method=${method",{"_index":1010,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["methods",{"_index":90,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":1389,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":1307,"title":{},"body":{"injectables/UsersService.html":{}}}],["module",{"_index":27,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/CreatePermissionDto.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"interfaces/IUser.html":{},"modules/JobsModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/UsersModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":29,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"index.html":{},"modules.html":{}}}],["mongo",{"_index":569,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["mongoose",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.schema.types.array",{"_index":1073,"title":{},"body":{"classes/Resume.html":{}}}],["mongoose.schema.types.objectid",{"_index":461,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["mongoosemodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":353,"title":{},"body":{"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["ms",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["ms(configservice.get('jwt_access_expire'))/1000",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{}}}],["ms(this.configservice.get(\"jwt_refresh_expire\"))/1000",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["multer",{"_index":910,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multer.config",{"_index":718,"title":{},"body":{"modules/FilesModule.html":{}}}],["multerconfigservice",{"_index":717,"title":{"injectables/MulterConfigService.html":{}},"body":{"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["multermodule",{"_index":716,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermodule.registerasync",{"_index":719,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermoduleoptions",{"_index":901,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":907,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["name",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["name=${name",{"_index":1191,"title":{},"body":{"injectables/RolesService.html":{}}}],["nestinterceptor",{"_index":1033,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs/common",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":842,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":202,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":739,"title":{},"body":{"classes/History.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":690,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newcv",{"_index":1125,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newcv?._id",{"_index":1129,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newcv?.createdat",{"_index":1130,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newjob",{"_index":818,"title":{},"body":{"injectables/JobsService.html":{}}}],["newpermission",{"_index":1011,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newpermission?._id",{"_index":1013,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newpermission?.createdat",{"_index":1014,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newregister",{"_index":1324,"title":{},"body":{"injectables/UsersService.html":{}}}],["newrole",{"_index":1192,"title":{},"body":{"injectables/RolesService.html":{}}}],["newrole?._id",{"_index":1194,"title":{},"body":{"injectables/RolesService.html":{}}}],["newrole?.createdat",{"_index":1195,"title":{},"body":{"injectables/RolesService.html":{}}}],["newuser",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["newuser?._id",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["newuser?.createdat",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["next",{"_index":1042,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["normal",{"_index":659,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["normal_user",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["null",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":362,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/FilesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":447,"title":{},"body":{"classes/Company.html":{},"classes/CreateRoleDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["objuser",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":1035,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["offset",{"_index":384,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["ok",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["omittype",{"_index":1225,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["omittype(createuserdto,['password",{"_index":1226,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["onmoduleinit",{"_index":607,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["optional",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["overview",{"_index":1392,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":1359,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":414,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["pagesize",{"_index":408,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["paginate",{"_index":309,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":324,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":343,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{}}}],["parameters",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":371,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["parent",{"_index":929,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["parsefilepipebuilder",{"_index":684,"title":{},"body":{"controllers/FilesController.html":{}}}],["parser",{"_index":1371,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":738,"title":{},"body":{"classes/History.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{}}}],["partialtype(createcompanydto",{"_index":1210,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["partialtype(createfiledto",{"_index":1212,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["partialtype(createjobdto",{"_index":1214,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["partialtype(createpermissiondto",{"_index":1215,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["partialtype(createresumedto",{"_index":744,"title":{},"body":{"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["partialtype(createroledto",{"_index":1219,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["pass",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":878,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passport/jwt.strategy",{"_index":203,"title":{},"body":{"modules/AuthModule.html":{}}}],["passport/local.stratery",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":880,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":881,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passthrough",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":482,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":323,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["patch(':id",{"_index":321,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["patch(':id')@responsemessage('update",{"_index":787,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["path",{"_index":911,"title":{},"body":{"injectables/MulterConfigService.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["path.basename(file.originalname",{"_index":954,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.extname(file.originalname",{"_index":950,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["payload",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["pending",{"_index":1127,"title":{},"body":{"injectables/ResumesService.html":{}}}],["permission",{"_index":568,"title":{"classes/Permission.html":{}},"body":{"classes/CreateRoleDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Role.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission.apipath",{"_index":866,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.dto",{"_index":983,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/RolesController.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":536,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:6",{"_index":542,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:7",{"_index":539,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:8",{"_index":540,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:9",{"_index":541,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.method",{"_index":865,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.name",{"_index":603,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/PermissionsModule.html":{},"classes/Role.html":{}}}],["permissiondocument",{"_index":616,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"miscellaneous/typealiases.html":{}}}],["permissionmodel",{"_index":609,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["permissions",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["permissions.controller",{"_index":994,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["permissions.find(permission",{"_index":864,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permissions.service",{"_index":982,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{}}}],["permissions/permissions.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["permissionschema",{"_index":598,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionscontroller",{"_index":970,"title":{"controllers/PermissionsController.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"coverage.html":{}}}],["permissionsmodule",{"_index":44,"title":{"modules/PermissionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionsModule.html":{},"index.html":{},"modules.html":{}}}],["permissionsservice",{"_index":981,"title":{"injectables/PermissionsService.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"index.html":{}}}],["phone",{"_index":503,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["phần",{"_index":420,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["pipe",{"_index":1044,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["plugin",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["png|image\\/jpge|jpg|image\\/png|gif|pdf|txt|doc|text\\/plain)$/i",{"_index":698,"title":{},"body":{"controllers/FilesController.html":{}}}],["populate",{"_index":1137,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["populate(population",{"_index":401,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["populate({path",{"_index":1199,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["population",{"_index":380,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["post",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["post('/login",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('by",{"_index":1086,"title":{},"body":{"controllers/ResumesController.html":{}}}],["post('upload",{"_index":692,"title":{},"body":{"controllers/FilesController.html":{}}}],["post()@responsemessage('create",{"_index":779,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["power",{"_index":643,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["prefix",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["process.cwd",{"_index":913,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["processnewtoken",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["projection",{"_index":379,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["promise",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["prop",{"_index":441,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["prop({required",{"_index":1238,"title":{},"body":{"classes/User.html":{}}}],["prop({type",{"_index":446,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["properties",{"_index":214,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["provide",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["public",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get(':id')@responsemessage('fetch",{"_index":1260,"title":{},"body":{"controllers/UsersController.html":{}}}],["public()@post('upload')@responsemessage('upload",{"_index":678,"title":{},"body":{"controllers/FilesController.html":{}}}],["public()@responsemessage('get",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@responsemessage('register",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@useguards(localauthguard)@apibody({type",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/images/${folder",{"_index":946,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["push",{"_index":1132,"title":{},"body":{"injectables/ResumesService.html":{}}}],["qs",{"_index":305,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["qu",{"_index":423,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["quantity",{"_index":484,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["quer",{"_index":424,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["query",{"_index":325,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["query('current",{"_index":337,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["query('pagesize",{"_index":338,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompaniesController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["recursive",{"_index":915,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ref",{"_index":1055,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["reflect",{"_index":1382,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":831,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["refresh",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["register",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["register(user",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["registeruserdto",{"_index":135,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["remove",{"_index":299,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":710,"title":{},"body":{"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":316,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":730,"title":{},"body":{"injectables/FilesService.html":{}}}],["render",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["replace",{"_index":1051,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["req",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MulterConfigService.html":{}}}],["req?.headers?.folder_type",{"_index":942,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["request",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["request.cookies[\"refresh_token",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.method",{"_index":859,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.route?.apipath",{"_index":861,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.user",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":924,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["required",{"_index":1249,"title":{},"body":{"classes/User.html":{}}}],["res",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["response",{"_index":119,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.clearcookie(\"refresh_token",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.cookie('refresh_token",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_message",{"_index":1039,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage(\"create",{"_index":794,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage(\"delete",{"_index":800,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage(\"get",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResumesController.html":{}}}],["responsemessage(\"logout",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage(\"register",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage(\"update",{"_index":798,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('fetch",{"_index":336,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('get",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('logout",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('update",{"_index":1264,"title":{},"body":{"controllers/UsersController.html":{}}}],["responsemessage('upload",{"_index":693,"title":{},"body":{"controllers/FilesController.html":{}}}],["responsemessage('user",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["result",{"_index":392,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["results",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1052,"title":{"classes/Resume.html":{}},"body":{"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resume.dto",{"_index":740,"title":{},"body":{"classes/History.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["resume.dto.ts",{"_index":545,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["resume.dto.ts:10",{"_index":554,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["resume.dto.ts:11",{"_index":553,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:14",{"_index":1228,"title":{},"body":{"classes/UpdatedBy.html":{}}}],["resume.dto.ts:17",{"_index":575,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:19",{"_index":734,"title":{},"body":{"classes/History.html":{}}}],["resume.dto.ts:20",{"_index":735,"title":{},"body":{"classes/History.html":{}}}],["resume.dto.ts:21",{"_index":573,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:25",{"_index":737,"title":{},"body":{"classes/History.html":{}}}],["resume.dto.ts:26",{"_index":574,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:33",{"_index":1217,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts:6",{"_index":556,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:7",{"_index":552,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:8",{"_index":555,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:9",{"_index":551,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.name",{"_index":1110,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumedocument",{"_index":1072,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{},"miscellaneous/typealiases.html":{}}}],["resumemodel",{"_index":1115,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumes",{"_index":1078,"title":{},"body":{"controllers/ResumesController.html":{},"miscellaneous/variables.html":{}}}],["resumes.controller",{"_index":1108,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumes.service",{"_index":1093,"title":{},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{}}}],["resumes/resumes.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["resumeschema",{"_index":1074,"title":{},"body":{"classes/Resume.html":{},"modules/ResumesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resumescontroller",{"_index":1076,"title":{"controllers/ResumesController.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"coverage.html":{}}}],["resumesmodule",{"_index":45,"title":{"modules/ResumesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResumesModule.html":{},"index.html":{},"modules.html":{}}}],["resumesservice",{"_index":1092,"title":{"injectables/ResumesService.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"index.html":{}}}],["return",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":94,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":256,"title":{"classes/Role.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role.dto",{"_index":1163,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":560,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:11",{"_index":563,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:16",{"_index":570,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:6",{"_index":564,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:7",{"_index":561,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.name",{"_index":604,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/RolesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["roledocument",{"_index":617,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodel",{"_index":610,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["roles",{"_index":1155,"title":{},"body":{"controllers/RolesController.html":{},"miscellaneous/variables.html":{}}}],["roles.controller",{"_index":1176,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.service",{"_index":1162,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/roles.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["roleschema",{"_index":600,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolescontroller",{"_index":1153,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["rolesmodule",{"_index":46,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RolesModule.html":{},"index.html":{},"modules.html":{}}}],["rolesservice",{"_index":154,"title":{"injectables/RolesService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"coverage.html":{},"index.html":{}}}],["rxjs",{"_index":1036,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1038,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["s",{"_index":409,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["salary",{"_index":483,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["salt",{"_index":1315,"title":{},"body":{"injectables/UsersService.html":{}}}],["same",{"_index":932,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sample",{"_index":622,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["schema",{"_index":355,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schema({timestamps",{"_index":460,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["schemafactory",{"_index":458,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(company",{"_index":462,"title":{},"body":{"classes/Company.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(job",{"_index":774,"title":{},"body":{"classes/Job.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(permission",{"_index":969,"title":{},"body":{"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(resume",{"_index":1075,"title":{},"body":{"classes/Resume.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1152,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1250,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/company.schema",{"_index":352,"title":{},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{}}}],["schemas/job.schema",{"_index":806,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["schemas/permission.schema",{"_index":995,"title":{},"body":{"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{}}}],["schemas/resume.schema",{"_index":1109,"title":{},"body":{"modules/ResumesModule.html":{},"injectables/ResumesService.html":{}}}],["schemas/role.schema",{"_index":1177,"title":{},"body":{"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["schemas/user.schema",{"_index":1284,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["secret",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":886,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":1138,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["select(projection",{"_index":1017,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["select:{_id",{"_index":1200,"title":{},"body":{"injectables/RolesService.html":{}}}],["server",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["setmetadata(is_public_key",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_message",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signoptions",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{}}}],["single",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skills",{"_index":488,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["skip(offset",{"_index":394,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["soft",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["softdeletemodel",{"_index":358,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["softdeleteplugin",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":378,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["sort(sort",{"_index":400,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/.../company.schema.ts",{"_index":1408,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../customize.ts",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../job.schema.ts",{"_index":1409,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1391,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permission.schema.ts",{"_index":1410,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../resume.schema.ts",{"_index":1411,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schema.ts",{"_index":1412,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../sample.ts",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1413,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":88,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":93,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:26",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:35",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:41",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:50",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:57",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":196,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:135",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:37",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:69",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:77",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:84",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":826,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local",{"_index":888,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts",{"_index":871,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts:21",{"_index":875,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/jwt.strategy.ts:9",{"_index":873,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/local.stratery.ts",{"_index":890,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/local.stratery.ts:12",{"_index":894,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passport/local.stratery.ts:7",{"_index":892,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/companies/companies.controller.ts",{"_index":294,"title":{},"body":{"controllers/CompaniesController.html":{},"coverage.html":{}}}],["src/companies/companies.controller.ts:15",{"_index":302,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:22",{"_index":310,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:32",{"_index":314,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:37",{"_index":322,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:47",{"_index":318,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.module.ts",{"_index":349,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["src/companies/companies.service.ts",{"_index":356,"title":{},"body":{"injectables/CompaniesService.html":{},"coverage.html":{}}}],["src/companies/companies.service.ts:13",{"_index":359,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:16",{"_index":361,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:26",{"_index":363,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:52",{"_index":364,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:60",{"_index":366,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:72",{"_index":365,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/dto/create",{"_index":509,"title":{},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/dto/update",{"_index":1209,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/schemas/company.schema",{"_index":1070,"title":{},"body":{"classes/Resume.html":{}}}],["src/companies/schemas/company.schema.ts",{"_index":434,"title":{},"body":{"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/companies/schemas/company.schema.ts:10",{"_index":455,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:13",{"_index":442,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:16",{"_index":451,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:19",{"_index":454,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:22",{"_index":448,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:28",{"_index":457,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:34",{"_index":450,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:40",{"_index":444,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:43",{"_index":456,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:46",{"_index":453,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:49",{"_index":449,"title":{},"body":{"classes/Company.html":{}}}],["src/core/transform.interceptor.ts",{"_index":1031,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/core/transform.interceptor.ts:20",{"_index":1206,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/core/transform.interceptor.ts:22",{"_index":1208,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/databases/databases.controller.ts",{"_index":587,"title":{},"body":{"controllers/DatabasesController.html":{},"coverage.html":{}}}],["src/databases/databases.module.ts",{"_index":594,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["src/databases/databases.service.ts",{"_index":605,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{}}}],["src/databases/databases.service.ts:13",{"_index":612,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/databases.service.ts:30",{"_index":614,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/sample",{"_index":1188,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["src/databases/sample.ts",{"_index":1348,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorator/customize",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["src/decorator/customize.ts",{"_index":1349,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/files/dto/create",{"_index":516,"title":{},"body":{"classes/CreateFileDto.html":{},"coverage.html":{}}}],["src/files/dto/update",{"_index":1211,"title":{},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/files/files.controller.ts",{"_index":668,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/files/files.controller.ts:16",{"_index":680,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:32",{"_index":671,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:37",{"_index":672,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:42",{"_index":675,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:47",{"_index":673,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module.ts",{"_index":714,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.service.ts",{"_index":720,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/files/files.service.ts:11",{"_index":723,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:15",{"_index":724,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:19",{"_index":726,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:23",{"_index":725,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:7",{"_index":722,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/multer.config.ts",{"_index":896,"title":{},"body":{"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["src/files/multer.config.ts:12",{"_index":903,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:36",{"_index":900,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:9",{"_index":906,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/schemas/file.schema.ts",{"_index":666,"title":{},"body":{"classes/File.html":{},"coverage.html":{}}}],["src/jobs/dto/create",{"_index":463,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"coverage.html":{}}}],["src/jobs/dto/update",{"_index":1213,"title":{},"body":{"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":776,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts:16",{"_index":780,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:23",{"_index":781,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:34",{"_index":783,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:40",{"_index":788,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:50",{"_index":785,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module.ts",{"_index":804,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":808,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/jobs/jobs.service.ts:12",{"_index":810,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:18",{"_index":812,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:33",{"_index":813,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:61",{"_index":814,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:68",{"_index":816,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:81",{"_index":815,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/schemas/job.schema",{"_index":1071,"title":{},"body":{"classes/Resume.html":{}}}],["src/jobs/schemas/job.schema.ts",{"_index":749,"title":{},"body":{"classes/Job.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/jobs/schemas/job.schema.ts:12",{"_index":762,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:15",{"_index":763,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:18",{"_index":766,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:21",{"_index":751,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:28",{"_index":761,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:31",{"_index":765,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:34",{"_index":764,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:37",{"_index":760,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:40",{"_index":756,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:43",{"_index":767,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:46",{"_index":757,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:50",{"_index":758,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:53",{"_index":753,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:59",{"_index":769,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:65",{"_index":755,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:71",{"_index":752,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:74",{"_index":768,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:78",{"_index":759,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:81",{"_index":754,"title":{},"body":{"classes/Job.html":{}}}],["src/main.ts",{"_index":1352,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/permissions/dto/create",{"_index":535,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/dto/update",{"_index":1164,"title":{},"body":{"controllers/RolesController.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts",{"_index":971,"title":{},"body":{"controllers/PermissionsController.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts:16",{"_index":973,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:22",{"_index":975,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:33",{"_index":977,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:39",{"_index":980,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:47",{"_index":978,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.module.ts",{"_index":993,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/permissions/permissions.service.ts",{"_index":996,"title":{},"body":{"injectables/PermissionsService.html":{},"coverage.html":{}}}],["src/permissions/permissions.service.ts:12",{"_index":998,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:17",{"_index":999,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:38",{"_index":1000,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:67",{"_index":1001,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:74",{"_index":1004,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:92",{"_index":1002,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/schemas/permission.schema",{"_index":599,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Role.html":{}}}],["src/permissions/schemas/permission.schema.ts",{"_index":957,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/permissions/schemas/permission.schema.ts:11",{"_index":966,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:14",{"_index":958,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:17",{"_index":964,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:20",{"_index":965,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:23",{"_index":960,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:29",{"_index":968,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:35",{"_index":962,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:41",{"_index":959,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:44",{"_index":967,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:48",{"_index":963,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:51",{"_index":961,"title":{},"body":{"classes/Permission.html":{}}}],["src/resumes/dto/create",{"_index":544,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"coverage.html":{}}}],["src/resumes/dto/update",{"_index":732,"title":{},"body":{"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts",{"_index":1077,"title":{},"body":{"controllers/ResumesController.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts:16",{"_index":1082,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:22",{"_index":1088,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:28",{"_index":1083,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:38",{"_index":1084,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:44",{"_index":1091,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:52",{"_index":1089,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.module.ts",{"_index":1107,"title":{},"body":{"modules/ResumesModule.html":{}}}],["src/resumes/resumes.service.ts",{"_index":1111,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{}}}],["src/resumes/resumes.service.ts:104",{"_index":1119,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:12",{"_index":1114,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:122",{"_index":1121,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:18",{"_index":1116,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:41",{"_index":1122,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:68",{"_index":1117,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:97",{"_index":1120,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/schemas/resume.schema.ts",{"_index":1053,"title":{},"body":{"classes/Resume.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/resumes/schemas/resume.schema.ts:14",{"_index":1061,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:17",{"_index":1069,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:20",{"_index":1068,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:23",{"_index":1065,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:26",{"_index":1056,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:30",{"_index":1064,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:33",{"_index":1062,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:43",{"_index":1058,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:49",{"_index":1067,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:55",{"_index":1060,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:61",{"_index":1057,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:64",{"_index":1066,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:68",{"_index":1063,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:71",{"_index":1059,"title":{},"body":{"classes/Resume.html":{}}}],["src/roles/dto/create",{"_index":559,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/update",{"_index":1218,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts",{"_index":1154,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:16",{"_index":1157,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:22",{"_index":1158,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:32",{"_index":1159,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:38",{"_index":1161,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:46",{"_index":1160,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/roles/roles.module.ts",{"_index":1175,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/roles/roles.service.ts",{"_index":1179,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:13",{"_index":1181,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:18",{"_index":1182,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:39",{"_index":1183,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:68",{"_index":1184,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:76",{"_index":1187,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:94",{"_index":1185,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/schemas/role.schema",{"_index":601,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/roles/schemas/role.schema.ts",{"_index":1140,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/roles/schemas/role.schema.ts:11",{"_index":1148,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:14",{"_index":1145,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:17",{"_index":1146,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:20",{"_index":1149,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:23",{"_index":1142,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:29",{"_index":1151,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:35",{"_index":1144,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:41",{"_index":1141,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:44",{"_index":1150,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:48",{"_index":1147,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:51",{"_index":1143,"title":{},"body":{"classes/Role.html":{}}}],["src/users/dto/create",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":1221,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema",{"_index":597,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":1229,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:12",{"_index":1239,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:15",{"_index":1243,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:18",{"_index":1242,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:21",{"_index":1232,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:24",{"_index":1240,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:27",{"_index":1231,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:30",{"_index":1244,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:33",{"_index":1233,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:39",{"_index":1246,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:42",{"_index":1245,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:45",{"_index":1235,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:51",{"_index":1248,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:57",{"_index":1237,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:63",{"_index":1234,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:66",{"_index":1247,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:70",{"_index":1241,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:73",{"_index":1236,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1255,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:16",{"_index":1258,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:26",{"_index":1259,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:37",{"_index":1261,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:44",{"_index":1266,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:51",{"_index":1262,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.interface",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["src/users/users.interface.ts",{"_index":747,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/users/users.module",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":1282,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/users.service.ts",{"_index":1285,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:107",{"_index":1296,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:113",{"_index":1299,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:117",{"_index":1302,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:128",{"_index":1301,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:149",{"_index":1305,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:156",{"_index":1303,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:17",{"_index":1291,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:23",{"_index":1293,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:49",{"_index":1304,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:54",{"_index":1292,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:75",{"_index":1300,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:96",{"_index":1294,"title":{},"body":{"injectables/UsersService.html":{}}}],["startdate",{"_index":492,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["statements",{"_index":1337,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":548,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/History.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":1032,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["storage",{"_index":938,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["strategy",{"_index":877,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":95,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfully",{"_index":917,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["super",{"_index":846,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":851,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super_admin",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1396,"title":{},"body":{"modules.html":{}}}],["supposed",{"_index":1049,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["svg",{"_index":1397,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":920,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["system",{"_index":645,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["t",{"_index":421,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["table",{"_index":1358,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1357,"title":{},"body":{"coverage.html":{}}}],["targetdirectory",{"_index":904,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["targetendpoint",{"_index":860,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetmethod",{"_index":858,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["temp",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["temp.permissions",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["temp?.permissions",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.authservice.login(req.user",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(response",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.processnewtoken(refreshtoken",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registeruserdto",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":895,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.companiesservice.create(createcompanydto",{"_index":335,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findall(+currentpage",{"_index":339,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findone(id",{"_index":342,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.remove(id",{"_index":345,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.update(id",{"_index":344,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companymodel.create({...createcompanydto",{"_index":373,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(filter",{"_index":393,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(filter)).length",{"_index":389,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.findbyid(id",{"_index":428,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.softdelete({_id",{"_index":432,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.updateone",{"_index":429,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.configservice.get(\"jwt_refresh_token_secret",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get(\"should_init",{"_index":628,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.createrefreshtoken(payload",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.ensureexists(`public/images/${folder",{"_index":943,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["this.filesservice.findall",{"_index":706,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.findone(+id",{"_index":707,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.remove(+id",{"_index":711,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.update(+id",{"_index":709,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.gethashpassword(createuserdto.password",{"_index":1321,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.gethashpassword(password",{"_index":1323,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jobmodel.create",{"_index":819,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find(filter",{"_index":821,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find(filter)).length",{"_index":820,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findbyid(id",{"_index":822,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.softdelete({_id",{"_index":825,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.updateone",{"_index":824,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobsservice.create(createjobdto",{"_index":795,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall(+currentpage",{"_index":796,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findone(id",{"_index":797,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.remove(id",{"_index":801,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.update(id",{"_index":799,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log",{"_index":662,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.count",{"_index":633,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.create",{"_index":1012,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter",{"_index":1016,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter)).length",{"_index":1015,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find({}).select(\"_id",{"_index":639,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.findbyid(id",{"_index":1019,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.findone({apipath",{"_index":1006,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.insertmany(init_permissions",{"_index":637,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.softdelete({_id",{"_index":1023,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.updateone",{"_index":1022,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionsservice.create(createpermissiondto",{"_index":986,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findall(+currentpage",{"_index":987,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findone(id",{"_index":988,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.remove(id",{"_index":990,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.update(id",{"_index":989,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.reflector.get(response_message,context.gethandler",{"_index":1047,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":848,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.resumemodel.create",{"_index":1126,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find",{"_index":1136,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter",{"_index":1134,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter)).length",{"_index":1133,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.findbyid(id",{"_index":1135,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.softdelete({_id",{"_index":1139,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.updateone",{"_index":1131,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumesservice.create(createusercvdto",{"_index":1096,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findall(+currentpage",{"_index":1099,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findbyusers(user",{"_index":1098,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findone(id",{"_index":1100,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.remove(id",{"_index":1104,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.update(id",{"_index":1103,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.rolemodel.count",{"_index":635,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.create",{"_index":1193,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter",{"_index":1197,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter)).length",{"_index":1196,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id",{"_index":1198,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findone",{"_index":647,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.findone({name",{"_index":1189,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["this.rolemodel.insertmany",{"_index":640,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.softdelete({_id",{"_index":1205,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.updateone",{"_index":1201,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesservice.create(createroledto",{"_index":1167,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findall(+currentpage",{"_index":1168,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(id",{"_index":1169,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(user.role._id",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.rolesservice.findone(userrole._id",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.rolesservice.findone(userrole._id)).toobject",{"_index":887,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.rolesservice.remove(id",{"_index":1171,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.update(id",{"_index":1170,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.usermodel.count",{"_index":631,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.create",{"_index":1322,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filter",{"_index":1314,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filter)).length",{"_index":1313,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id",{"_index":1330,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":1325,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone({email",{"_index":1318,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.insertmany",{"_index":648,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.softdelete",{"_index":1333,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.updateone",{"_index":1327,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.gethashpassword(this.configservice.get(\"init_password",{"_index":651,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":1271,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(+currentpage",{"_index":1272,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":1274,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyusername(username",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.finduserbytoken(refreshtoken",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.isvalidpassword(pass",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.register(user",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.remove(id",{"_index":1278,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(updateuserdto",{"_index":1277,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateusertoken(\"\",user._id",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateusertoken(refresh_token,_id",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateusertoken(refresh_token,_id.tostring",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["timestamp",{"_index":770,"title":{},"body":{"classes/Job.html":{},"classes/Resume.html":{}}}],["token",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token')@get('/refresh",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["total",{"_index":419,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["totalitems",{"_index":388,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["totalpages",{"_index":390,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["trang",{"_index":405,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["transform",{"_index":479,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["transform(({value",{"_index":490,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["transformer",{"_index":480,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":1040,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["true",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["true})@isnotempty",{"_index":530,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["try",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["trying",{"_index":935,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ts",{"_index":396,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["type",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1406,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":478,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/History.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"dependencies.html":{}}}],["types.objectid",{"_index":741,"title":{},"body":{"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["tại",{"_index":407,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["tổng",{"_index":415,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception",{"_index":841,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('token",{"_index":856,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["undefined",{"_index":1054,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["unknown",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1402,"title":{},"body":{"properties.html":{}}}],["unreachable",{"_index":398,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["unvalid",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["update",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(@body",{"_index":1275,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(@param('id",{"_index":708,"title":{},"body":{"controllers/FilesController.html":{},"controllers/PermissionsController.html":{},"controllers/RolesController.html":{}}}],["update(_id",{"_index":1003,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["update(id",{"_index":319,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"controllers/RolesController.html":{}}}],["update(updateuserdto",{"_index":1263,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateat",{"_index":733,"title":{},"body":{"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["updateby",{"_index":1329,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatecompanydto",{"_index":320,"title":{"classes/UpdateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["updated",{"_index":823,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["updatedat",{"_index":440,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["updatedby",{"_index":430,"title":{"classes/UpdatedBy.html":{}},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/History.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatefiledto",{"_index":674,"title":{"classes/UpdateFileDto.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["updatejobdto",{"_index":786,"title":{"classes/UpdateJobDto.html":{}},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["updatepermissiondto",{"_index":979,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/RolesController.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updateresumedto",{"_index":742,"title":{"classes/UpdateResumeDto.html":{}},"body":{"classes/History.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["updateroledto",{"_index":1186,"title":{"classes/UpdateRoleDto.html":{}},"body":{"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updates",{"_index":729,"title":{},"body":{"injectables/FilesService.html":{}}}],["updatestatus",{"_index":1080,"title":{},"body":{"controllers/ResumesController.html":{}}}],["updatestatus(@param('id",{"_index":1101,"title":{},"body":{"controllers/ResumesController.html":{}}}],["updatestatus(id",{"_index":1090,"title":{},"body":{"controllers/ResumesController.html":{}}}],["updateuser",{"_index":1276,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuserdto",{"_index":1220,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto._id",{"_index":1328,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateusertoken",{"_index":1288,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploadedfile",{"_index":683,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile",{"_index":670,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(@uploadedfile",{"_index":695,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(file",{"_index":676,"title":{},"body":{"controllers/FilesController.html":{}}}],["uri",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":549,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["use",{"_index":644,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["useclass",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{}}}],["usefactory",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["useguards",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":682,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(fileinterceptor('fileupload",{"_index":694,"title":{},"body":{"controllers/FilesController.html":{}}}],["user",{"_index":110,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user')@patch",{"_index":1265,"title":{},"body":{"controllers/UsersController.html":{}}}],["user')@post('/logout",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["user')@post('/register",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["user')@responsemessage('get",{"_index":1087,"title":{},"body":{"controllers/ResumesController.html":{}}}],["user's",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["user._id",{"_index":375,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":495,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["user.dto.ts:16",{"_index":580,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:19",{"_index":583,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:20",{"_index":582,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:21",{"_index":584,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:22",{"_index":577,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:23",{"_index":581,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:24",{"_index":576,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":585,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:34",{"_index":578,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:40",{"_index":1026,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:43",{"_index":1029,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:44",{"_index":1028,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:45",{"_index":1030,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:46",{"_index":1025,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:47",{"_index":1027,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:48",{"_index":1024,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:55",{"_index":1253,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.dto.ts:62",{"_index":1252,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.dto.ts:7",{"_index":1224,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:8",{"_index":496,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:9",{"_index":497,"title":{},"body":{"classes/Company-2.html":{}}}],["user.email",{"_index":376,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["user.name",{"_index":602,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/UsersModule.html":{}}}],["user.password",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permissions",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.role",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.toobject",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.permissions",{"_index":862,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["user@gmail.com",{"_index":660,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["user_role",{"_index":621,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userdocument",{"_index":618,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":550,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["userlogindto",{"_index":149,"title":{"classes/UserLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["userlogindto})@post('/login')@responsemessage('user",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["userm",{"_index":1306,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermodel",{"_index":613,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["userrole",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["userrole?._id",{"_index":661,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":1256,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1283,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.interface",{"_index":1268,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":1267,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":596,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":1254,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":611,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["usersmodule",{"_index":47,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"index.html":{},"modules.html":{}}}],["usersservice",{"_index":221,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["validate",{"_index":475,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":874,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":893,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatenested",{"_index":476,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{}}}],["validatenested()@isnotempty()@type(undefined",{"_index":736,"title":{},"body":{"classes/History.html":{}}}],["validateuser",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":477,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1347,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1414,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1399,"title":{},"body":{"properties.html":{}}}],["vietnam",{"_index":654,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["void",{"_index":905,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["với",{"_index":416,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["without",{"_index":952,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["yarn",{"_index":1387,"title":{},"body":{"dependencies.html":{}}}],["you're",{"_index":934,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["zoom",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get, Post, Render, UseGuards, Request } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ConfigService } from '@nestjs/config';\nimport { AuthService } from './auth/auth.service';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private configService: ConfigService,\n    private authService: AuthService,\n\n    ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompaniesModule\n                        \n                        \n                            DatabasesModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            ResumesModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { CompaniesModule } from './companies/companies.module';\nimport { JobsModule } from './jobs/jobs.module';\nimport { FilesModule } from './files/files.module';\nimport { ResumesModule } from './resumes/resumes.module';\nimport { PermissionsModule } from './permissions/permissions.module';\nimport { RolesModule } from './roles/roles.module';\nimport { DatabasesModule } from './databases/databases.module';\n\n\n@Module({\n  \n  controllers: [AppController],\n  providers: [AppService,\n    // {\n    //   provide: APP_GUARD,\n    //   useClass: JwtAuthGuard,\n    // },\n  ],\n  imports: [\n    MongooseModule.forRootAsync({\n    useFactory: async (configService: ConfigService) => ({\n      uri: configService.get('MONGODB'),\n      connectionFactory: (connection) => {\n        connection.plugin(softDeletePlugin);\n        return connection;\n        }\n    }),\n    inject: [ConfigService],\n  }),\n    ConfigModule.forRoot({isGlobal:true}),\n    UsersModule,\n    AuthModule,\n    CompaniesModule,\n    JobsModule,\n    FilesModule,\n    ResumesModule,\n    PermissionsModule,\n    RolesModule,\n    DatabasesModule\n  ]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Grucep23!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                handleGetAccount\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                handleLogin\n                            \n                            \n                                    \n                                    \n                                handleLogout\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRefreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        handleGetAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleGetAccount(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('get user information')@Get('/account')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        handleLogin\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleLogin(req, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(LocalAuthGuard)@ApiBody({type: UserLoginDto})@Post('/login')@ResponseMessage('user login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        handleLogout\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleLogout(response: Response, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('logout user')@Post('/logout')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        handleRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleRefreshToken(request: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('get user by refresh token')@Get('/refresh')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        handleRegister\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleRegister(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('register a new user')@Post('/register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerUserDto\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Req, UseGuards, Body, Res, Get } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { LocalAuthGuard } from './local-auth.guard';\nimport { RegisterUserDto, UserLoginDto } from 'src/users/dto/create-user.dto';\nimport { Request, Response } from 'express';\nimport { IUser } from 'src/users/users.interface';\nimport { RolesService } from 'src/roles/roles.service';\nimport { ApiTags, ApiBody }  from '@nestjs/swagger';\n\n\n@ApiTags('auth')\n@Controller(\"auth\")\nexport class AuthController {\n  constructor(\n    private authService: AuthService,\n    private rolesService: RolesService,\n\n    ) {}\n\n  @Public()\n  @UseGuards(LocalAuthGuard)\n  @ApiBody({ type: UserLoginDto, })\n  @Post('/login')\n  @ResponseMessage('user login')\n  handleLogin(\n  @Req() req, \n  @Res({ passthrough: true }) response: Response){\n    return this.authService.login(req.user, response);\n  }\n\n  @Public()\n  @ResponseMessage(\"register a new user\")\n  @Post('/register')\n  handleRegister(@Body() registerUserDto: RegisterUserDto){\n    return this.authService.register(registerUserDto);\n  }\n\n  @ResponseMessage(\"get user information\")\n  @Get('/account')\n  async handleGetAccount(@User() user: IUser){\n    const temp = await this.rolesService.findOne(user.role._id) as any;\n    user.permissions = temp.permissions;\n    return { user };\n  };\n\n  @Public()\n  @ResponseMessage(\"get user by refresh token\")\n  @Get('/refresh')\n  handleRefreshToken(@Req() request: Request, @Res({ passthrough: true }) response: Response){\n    const refreshToken = request.cookies[\"refresh_token\"]\n    return this.authService.processNewToken(refreshToken, response)\n  };\n\n  @ResponseMessage(\"logout user\")\n  @Post('/logout')\n  handleLogout(\n    @Res({ passthrough: true }) response: Response,\n    @User() user: IUser\n    ){\n      return this.authService.logout(response, user)\n  };\n  }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './passport/local.stratery';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './passport/jwt.strategy';\nimport ms from 'ms'\nimport { AuthController } from './auth.controller';\nimport { RolesModule } from 'src/roles/roles.module';\n\n\n@Module({\n  imports: [UsersModule, RolesModule, PassportModule, \n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n        signOptions: {\n            expiresIn: ms(configService.get('JWT_ACCESS_EXPIRE'))/1000,\n        },\n      }),\n      inject: [ConfigService],\n    }),\n],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n  controllers: [AuthController],\n  \n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRefreshToken\n                            \n                            \n                                logout\n                            \n                            \n                                processNewToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService, configService: ConfigService, rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: IUser, response: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(user: RegisterUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processNewToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:84\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { IUser } from 'src/users/users.interface';\nimport { RegisterUserDto } from 'src/users/dto/create-user.dto';\nimport ms from 'ms';\nimport { ConfigService } from '@nestjs/config';\nimport { Response } from 'express';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        private usersService: UsersService,\n        private jwtService: JwtService,\n        private configService: ConfigService,\n        private rolesService: RolesService,\n        \n        ) {}\n    async validateUser(username: string, pass: string): Promise {\n        const user = await this.usersService.findOneByUsername(username);\n        if(user){\n            const isValid = this.usersService.isValidPassword(pass, user.password)\n            if(isValid===true){\n                const userRole = user.role as unknown as {_id: string; name: string}\n                const temp = await this.rolesService.findOne(userRole._id);\n\n                const objUser = {\n                    ...user.toObject(),\n                    permissions: temp?.permissions ?? []\n                }\n                return objUser;\n            }\n        }\n        return null;\n      }\n      async login(user: IUser, response: Response) {\n        const { _id, name, email, role, permissions} = user;\n        const payload = {\n        sub: \"token login\",\n        iss: \"from server\",\n        _id,\n        name,\n        email,\n        role,\n        permissions,\n        };\n\n        const refresh_token = this.createRefreshToken(payload)\n        //update user with refresh token\n        await this.usersService.updateUserToken(refresh_token,_id)\n        //set refresh_token as cookie\n        response.cookie('refresh_token', refresh_token,{\n            httpOnly: true,\n            maxAge:ms(this.configService.get(\"JWT_REFRESH_EXPIRE\")),\n        })\n        return {\n        access_token: this.jwtService.sign(payload),\n        user:{\n            _id,\n            name,\n            email,\n            role,\n            permissions\n        }  \n}\n}\n\nasync register(user: RegisterUserDto) {\n    let newUser = await this.usersService.register(user);\n    return {\n        _id: newUser?._id,\n        createdAt: newUser?.createdAt,\n    }\n}\n\ncreateRefreshToken = (payload: any) => {\n    const refresh_token = this.jwtService.sign(payload, {\n        secret: this.configService.get(\"JWT_REFRESH_TOKEN_SECRET\"),\n        expiresIn: ms(this.configService.get(\"JWT_REFRESH_EXPIRE\"))/1000\n    });\n    return refresh_token;\n}\nprocessNewToken = async (refreshToken: string, response: Response) => {\n    try {\n        this.jwtService.verify(refreshToken,{\n            secret: this.configService.get(\"JWT_REFRESH_TOKEN_SECRET\")\n        })\n        let user  = await this.usersService.findUserByToken(refreshToken);\n        if(user){\n        const { _id, name, email, role } = user;\n        const payload = {\n        sub: \"token refresh\",\n        iss: \"from server\",\n        _id,\n        name,\n        email,\n        role\n        };\n\n        const refresh_token = this.createRefreshToken(payload)\n        //update user with refresh token\n        await this.usersService.updateUserToken(refresh_token,_id.toString())\n        //fetch user's role\n        const userRole = user.role as unknown as {_id: string, name: string}\n        const temp = await this.rolesService.findOne(userRole._id)\n        //set refresh_token as cookie\n        response.clearCookie(\"refresh_token\")\n\n        response.cookie('refresh_token', refresh_token,{\n            httpOnly: true,\n            maxAge:ms(this.configService.get(\"JWT_REFRESH_EXPIRE\")),\n        })\n        \n        return {\n        access_token: this.jwtService.sign(payload),\n        user:{\n            _id,\n            name,\n            email,\n            role,\n            permissions: temp?.permissions ?? []\n\n        }  \n}\n        }\n        else{\n            throw new BadRequestException(\"refresh token is unvalid\")\n        }\n    } catch (error) {\n        throw new BadRequestException(\"refresh token is unvalid\")\n    }\n};\n\nlogout = async (response: Response, user: IUser) => {\n    await this.usersService.updateUserToken(\"\",user._id)\n    response.clearCookie(\"refresh_token\")\n    return \"ok\"\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompaniesController.html":{"url":"controllers/CompaniesController.html","title":"controller - CompaniesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompaniesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                companies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/companies/companies.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCompanyDto\n                                    \n                                                CreateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('fetch list company with paginate')\n                \n            \n\n            \n                \n                    Defined in src/companies/companies.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()\n                \n            \n\n            \n                \n                    Defined in src/companies/companies.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/companies/companies.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/companies/companies.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCompanyDto\n                                    \n                                                UpdateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags }  from '@nestjs/swagger';\n\n@ApiTags('companies')\n@Controller('companies')\nexport class CompaniesController {\n  constructor(private readonly companiesService: CompaniesService) {}\n\n  @Post()\n  create(@Body() createCompanyDto: CreateCompanyDto, @User() user: IUser) {\n    return this.companiesService.create(createCompanyDto, user);\n  }\n\n  @Get()\n  @Public()\n  @ResponseMessage('fetch list company with paginate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.companiesService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @Public()\n  findOne(@Param('id') id: string) {\n    return this.companiesService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateCompanyDto: UpdateCompanyDto,\n    @User() user: IUser,\n    )\n     {\n    return this.companiesService.update(id, updateCompanyDto, user);\n  }\n\n  @Delete(':id')\n  remove(\n    @Param('id') id: string,\n    @User() user: IUser,\n    ) {\n    return this.companiesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompaniesModule.html":{"url":"modules/CompaniesModule.html","title":"module - CompaniesModule","body":"\n                   \n\n\n\n\n    Modules\n    CompaniesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_CompaniesModule_exports\n\n\n\n\nCompaniesService \n\nCompaniesService \n\n\n\nCompaniesModule\n\nCompaniesModule\n\nCompaniesService  -->\n\nCompaniesModule->CompaniesService \n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/companies/companies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompaniesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CompaniesController } from './companies.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Company, CompanySchema } from './schemas/company.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Company.name, schema: CompanySchema }])],\n  controllers: [CompaniesController],\n  providers: [CompaniesService],\n  exports: [CompaniesService],\n})\nexport class CompaniesModule {}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompaniesService.html":{"url":"injectables/CompaniesService.html","title":"injectable - CompaniesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompaniesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/companies/companies.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/companies/companies.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCompanyDto\n                                    \n                                                CreateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n            \n                \n                    Defined in src/companies/companies.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/companies/companies.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/companies/companies.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/companies/companies.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCompanyDto\n                                    \n                                                UpdateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Company, CompanyDocument } from './schemas/company.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n\n@Injectable()\nexport class CompaniesService {\n  constructor(@InjectModel(Company.name) private companyModel: SoftDeleteModel) { }\n\n   create(createCompanyDto: CreateCompanyDto, user: IUser){\n    return this.companyModel.create({...createCompanyDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      }\n    })\n  }\n  \n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, projection, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.companyModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n   \n    const result = await this.companyModel.find(filter)\n    .skip(offset)\n    .limit(defaultLimit)\n    // @ts-ignore: Unreachable code error\n    .sort(sort)\n    .populate(population)\n    .exec()\n    return {\n      meta: {\n      current: currentPage, //trang hiện tại\n      pageSize: limit, //số lượng bản ghi đã lấy\n      pages: totalPages, //tổng số trang với điều kiện query\n      total: totalItems // tổng số phần tử (số bản ghi)\n      },\n      result //kết quả quer\n  }}\n\n  async findOne(id: string) {\n    if(!mongoose.Types.ObjectId.isValid(id))\n    {\n    throw new BadRequestException(`not found company with id ${id}`)\n    }\n    return await this.companyModel.findById(id)\n  }\n\n  async update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser){\n    return await this.companyModel.updateOne({\n      _id: id},\n      {\n        ...updateCompanyDto,\n        updatedBy:{\n          _id: user._id,\n          email: user.email,\n        }\n      })\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.companyModel.updateOne(\n      {_id: id},\n      {\n        deletedBy:{\n          _id: user._id,\n          email: user.email,\n        }\n      },\n    )\n    return this.companyModel.softDelete({_id: id})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/schemas/company.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type CompanyDocument = HydratedDocument;\n\n@Schema({timestamps: true})\nexport class Company {\n\n  @Prop()\n  name: string;\n\n  @Prop()\n  address: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  logo: string;\n\n  @Prop({type: Object})\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string,\n  };\n\n  @Prop({type: Object})\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string,\n  };\n\n  @Prop({type: Object})\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string,\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deleteAt: Date;\n\n}\n\nexport const CompanySchema = SchemaFactory.createForClass(Company);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-1.html":{"url":"classes/Company-1.html","title":"class - Company-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                logo\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsBoolean, IsDate, IsNotEmpty, IsNotEmptyObject, IsObject, IsString, Validate, ValidateNested } from 'class-validator';\nimport mongoose, { Types } from 'mongoose';\nimport { Transform, Type } from 'class-transformer';\n\nclass Company{\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n  name: string;\n  logo: string;\n}\n\nexport class CreateJobDto {\n    \n  @IsNotEmpty()\n  name: string;\n  password: string;\n  salary: number;\n  quantity: number;\n  level: string;\n  description: string;\n  location: string;\n\n  @IsArray()\n  @IsString({each: true})\n  @IsNotEmpty()\n  skills: string[];\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n\n  @IsBoolean()\n    isActive: boolean;\n  \n    @IsNotEmpty()\n    @Transform(({value}) => new Date(value))\n    @IsDate()\n    startDate: Date\n    endDate: Date\n\n   \n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-2.html":{"url":"classes/Company-2.html","title":"class - Company-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, IsString, ValidateNested, isPhoneNumber } from 'class-validator';\nimport mongoose from 'mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n\n  }\n\nexport class CreateUserDto {\n    @IsEmail()\n    @IsNotEmpty()\n    email: string;\n\n    @IsNotEmpty()\n    password: string;\n    name: string;\n    phone: number;\n    age: number;\n    gender: string;\n    address: string;\n\n    @IsNotEmpty()\n    @IsMongoId()\n    role: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\nexport class RegisterUserDto {\n    @IsEmail()\n    @IsNotEmpty()\n    email: string;\n\n    @IsNotEmpty()\n    password: string;\n    name: string;\n    phone: number;\n    age: number;\n    gender: string;\n    address: string;\n    \n}\nexport class UserLoginDto {\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({ example: 'email@gmail.com', description: 'userName' })\n    readonly username: string;\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({\n    example: '123456',\n    description: 'password',\n    })\n    readonly password: string;\n    }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreateCompanyDto {\n    \n    @IsNotEmpty()\n    name: string;\n    \n    @IsNotEmpty()\n    address: string;\n\n    @IsNotEmpty()\n    description: string;\n\n    @IsNotEmpty()\n    logo: string;\n    \n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFileDto.html":{"url":"classes/CreateFileDto.html","title":"class - CreateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobDto.html":{"url":"classes/CreateJobDto.html","title":"class - CreateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                description\n                            \n                            \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                level\n                            \n                            \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                quantity\n                            \n                            \n                                salary\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                            \n                                    \n                                    \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Transform( => )@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsBoolean, IsDate, IsNotEmpty, IsNotEmptyObject, IsObject, IsString, Validate, ValidateNested } from 'class-validator';\nimport mongoose, { Types } from 'mongoose';\nimport { Transform, Type } from 'class-transformer';\n\nclass Company{\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n  name: string;\n  logo: string;\n}\n\nexport class CreateJobDto {\n    \n  @IsNotEmpty()\n  name: string;\n  password: string;\n  salary: number;\n  quantity: number;\n  level: string;\n  description: string;\n  location: string;\n\n  @IsArray()\n  @IsString({each: true})\n  @IsNotEmpty()\n  skills: string[];\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n\n  @IsBoolean()\n    isActive: boolean;\n  \n    @IsNotEmpty()\n    @Transform(({value}) => new Date(value))\n    @IsDate()\n    startDate: Date\n    endDate: Date\n\n   \n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiPath\n                            \n                            \n                                method\n                            \n                            \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from \"class-validator\";\n\nexport class CreatePermissionDto {\n    \n    @IsNotEmpty()\n    name: string;\n    apiPath: string;\n    method: string;\n    module: string;\n  }\n  \n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResumeDto.html":{"url":"classes/CreateResumeDto.html","title":"class - CreateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyId\n                            \n                            \n                                email\n                            \n                            \n                                jobId\n                            \n                            \n                                status\n                            \n                            \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\nexport class CreateResumeDto{\n    @IsNotEmpty()\n    userId: mongoose.Schema.Types.ObjectId;\n    email: string;\n    url: string;\n    companyId: mongoose.Schema.Types.ObjectId;\n    status: string;\n    jobId: mongoose.Schema.Types.ObjectId;\n  }\n  \n  export class CreateUserCvDto {\n      \n    @IsNotEmpty()\n    url: string;\n\n    @IsNotEmpty()\n    @IsMongoId()\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    \n    @IsNotEmpty()\n    @IsMongoId()\n    jobId: mongoose.Schema.Types.ObjectId;  \n  }\n  \n  \n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsArray()@IsMongoId({each: true, message: 'each permission is a mongo object id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsBoolean, IsMongoId, IsNotEmpty } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\nexport class CreateRoleDto {\n    @IsNotEmpty()\n    name: string;\n    description: string;\n\n    @IsNotEmpty()\n    @IsBoolean()\n    isActive: boolean;\n\n    @IsNotEmpty()\n    @IsArray()\n    @IsMongoId({each: true, message: \"each permission is a mongo object id\"})\n    permissions: mongoose.Schema.Types.ObjectId[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCvDto.html":{"url":"classes/CreateUserCvDto.html","title":"class - CreateUserCvDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCvDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                companyId\n                            \n                            \n                                    \n                                    \n                                jobId\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\nexport class CreateResumeDto{\n    @IsNotEmpty()\n    userId: mongoose.Schema.Types.ObjectId;\n    email: string;\n    url: string;\n    companyId: mongoose.Schema.Types.ObjectId;\n    status: string;\n    jobId: mongoose.Schema.Types.ObjectId;\n  }\n  \n  export class CreateUserCvDto {\n      \n    @IsNotEmpty()\n    url: string;\n\n    @IsNotEmpty()\n    @IsMongoId()\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    \n    @IsNotEmpty()\n    @IsMongoId()\n    jobId: mongoose.Schema.Types.ObjectId;  \n  }\n  \n  \n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                gender\n                            \n                            \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                phone\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, IsString, ValidateNested, isPhoneNumber } from 'class-validator';\nimport mongoose from 'mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n\n  }\n\nexport class CreateUserDto {\n    @IsEmail()\n    @IsNotEmpty()\n    email: string;\n\n    @IsNotEmpty()\n    password: string;\n    name: string;\n    phone: number;\n    age: number;\n    gender: string;\n    address: string;\n\n    @IsNotEmpty()\n    @IsMongoId()\n    role: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\nexport class RegisterUserDto {\n    @IsEmail()\n    @IsNotEmpty()\n    email: string;\n\n    @IsNotEmpty()\n    password: string;\n    name: string;\n    phone: number;\n    age: number;\n    gender: string;\n    address: string;\n    \n}\nexport class UserLoginDto {\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({ example: 'email@gmail.com', description: 'userName' })\n    readonly username: string;\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({\n    example: '123456',\n    description: 'password',\n    })\n    readonly password: string;\n    }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabasesController.html":{"url":"controllers/DatabasesController.html","title":"controller - DatabasesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabasesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                databases\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\n\n@Controller('databases')\nexport class DatabasesController {\n  constructor(private readonly databasesService: DatabasesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabasesModule.html":{"url":"modules/DatabasesModule.html","title":"module - DatabasesModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\n\nDatabasesService\n\nDatabasesService\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/databases/databases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabasesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabasesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\nimport { DatabasesController } from './databases.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport { Permission, PermissionSchema } from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\nimport { UsersService } from 'src/users/users.service';\n\n@Module({\n  controllers: [DatabasesController],\n  providers: [DatabasesService, UsersService],\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Permission.name, schema: PermissionSchema },\n      { name: Role.name, schema: RoleSchema },\n    ])\n  ],\n\n})\nexport class DatabasesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabasesService.html":{"url":"injectables/DatabasesService.html","title":"injectable - DatabasesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabasesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, permissionModel: SoftDeleteModel, roleModel: SoftDeleteModel, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/databases/databases.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/databases/databases.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DatabasesService.name)\n                    \n                \n                    \n                        \n                                Defined in src/databases/databases.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Permission, PermissionDocument } from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { UsersService } from 'src/users/users.service';\nimport { ADMIN_ROLE, INIT_PERMISSIONS, USER_ROLE } from './sample';\n\n@Injectable()\nexport class DatabasesService implements OnModuleInit {\n    private readonly logger = new Logger(DatabasesService.name);\n\n    constructor(\n        @InjectModel(User.name)\n        private userModel: SoftDeleteModel,\n\n        @InjectModel(Permission.name)\n        private permissionModel: SoftDeleteModel,\n\n        @InjectModel(Role.name)\n        private roleModel: SoftDeleteModel,\n\n        private configService: ConfigService,\n        private userService: UsersService\n    ) { }\n\n\n    async onModuleInit() {\n        const isInit = this.configService.get(\"SHOULD_INIT\");\n        if (Boolean(isInit)) {\n\n            const countUser = await this.userModel.count({});\n            const countPermission = await this.permissionModel.count({});\n            const countRole = await this.roleModel.count({});\n\n            //create permissions\n            if (countPermission === 0) {\n                await this.permissionModel.insertMany(INIT_PERMISSIONS);\n                //bulk create\n            }\n\n            // create role\n            if (countRole === 0) {\n                const permissions = await this.permissionModel.find({}).select(\"_id\");\n                await this.roleModel.insertMany([\n                    {\n                        name: ADMIN_ROLE,\n                        description: \"Admin has full power\",\n                        isActive: true,\n                        permissions: permissions\n                    },\n                    {\n                        name: USER_ROLE,\n                        description: \"user use the system\",\n                        isActive: true,\n                        permissions: [] \n                    }\n                ]);\n            }\n\n            if (countUser === 0) {\n                const adminRole = await this.roleModel.findOne({ name: ADMIN_ROLE });\n                const userRole = await this.roleModel.findOne({ name: USER_ROLE })\n                await this.userModel.insertMany([\n                    {\n                        name: \"I'm admin\",\n                        email: \"admin@gmail.com\",\n                        password: this.userService.getHashPassword(this.configService.get(\"INIT_PASSWORD\")),\n                        age: 69,\n                        gender: \"MALE\",\n                        address: \"VietNam\",\n                        role: adminRole?._id\n                    },\n                    {\n                        name: \"I'm Duy\",\n                        email: \"duy@gmail.com\",\n                        password: this.userService.getHashPassword(this.configService.get(\"INIT_PASSWORD\")),\n                        age: 96,\n                        gender: \"MALE\",\n                        address: \"VietNam\",\n                        role: adminRole?._id\n                    },\n                    {\n                        name: \"I'm normal user\",\n                        email: \"user@gmail.com\",\n                        password: this.userService.getHashPassword(this.configService.get(\"INIT_PASSWORD\")),\n                        age: 69,\n                        gender: \"MALE\",\n                        address: \"VietNam\",\n                        role: userRole?._id\n                    },\n                ])\n            }\n\n            if (countUser > 0 && countRole > 0 && countPermission > 0) {\n                this.logger.log('>>> ALREADY INIT SAMPLE DATA...');\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/schemas/file.schema.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class File {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateFileDto: UpdateFileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateFileDto\n                                    \n                                                UpdateFileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('upload')@ResponseMessage('upload file')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { fileName: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseInterceptors, UploadedFile, ParseFilePipeBuilder, HttpStatus } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\n\n@Controller('files')\nexport class FilesController {\n  constructor(private readonly filesService: FilesService) {}\n\n  @Public()\n  @Post('upload')\n  @ResponseMessage('upload file')\n  @UseInterceptors(FileInterceptor('fileUpload'))\n  uploadFile(@UploadedFile(\n    new ParseFilePipeBuilder()\n    .addFileTypeValidator({\n      fileType: /^(png|image\\/jpge|jpg|image\\/png|gif|pdf|txt|doc|text\\/plain)$/i,\n    })\n    .addMaxSizeValidator({\n      maxSize: 1024*1024\n    })\n    .build({\n      errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY\n    }),\n  ) file: Express.Multer.File) {\n    return{ fileName: file.filename}\n  }\n\n  @Get()\n  findAll() {\n    return this.filesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.filesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateFileDto: UpdateFileDto) {\n    return this.filesService.update(+id, updateFileDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.filesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService\n\nFilesService\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { FilesController } from './files.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { MulterConfigService } from './multer.config';\n\n@Module({\n  controllers: [FilesController],\n  providers: [FilesService],\n  imports: [\n    MulterModule.registerAsync({\n    useClass: MulterConfigService,\n  })]\n})\nexport class FilesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFileDto: CreateFileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createFileDto\n                                    \n                                                CreateFileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateFileDto: UpdateFileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateFileDto\n                                    \n                                                UpdateFileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\n\n@Injectable()\nexport class FilesService {\n  create(createFileDto: CreateFileDto) {\n    return 'This action adds a new file';\n  }\n\n  findAll() {\n    return `This action returns all files`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} file`;\n  }\n\n  update(id: number, updateFileDto: UpdateFileDto) {\n    return `This action updates a #${id} file`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} file`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/History.html":{"url":"classes/History.html","title":"class - History","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  History\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                status\n                            \n                            \n                                updateAt\n                            \n                            \n                                    \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdatedBy\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@IsNotEmpty()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\nimport { IsArray, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { Type } from 'class-transformer';\n\n\nclass UpdatedBy {\n    @IsNotEmpty()\n    _id: Types.ObjectId;\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n}\n\nclass History{\n        @IsNotEmpty()\n        status: string;\n        updateAt: Date;\n\n        @ValidateNested()\n        @IsNotEmpty()\n        @Type(() => UpdatedBy)\n        updatedBy: UpdatedBy;\n    }\n\n    export class UpdateResumeDto extends PartialType(CreateResumeDto){\n        @IsNotEmpty()\n        @IsArray()\n        @ValidateNested()\n        @Type(() => History)\n        history: History[];\n    }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser{\n    _id: string,\n    name: string,\n    email: string,\n    role: {\n        _id: string,\n        name: string,\n    };\n    permissions?: {\n        _id: string;\n        name: string;\n        apiPath: string;\n        module: string;\n    }[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Job.html":{"url":"classes/Job.html","title":"class - Job","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schemas/job.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endtDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endtDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { timeStamp } from 'console';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type JobDocument = HydratedDocument;\n\n@Schema({timestamps: true})\nexport class Job {\n\n  \n  @Prop()\n  name: string;\n\n  @Prop()\n  password: string;\n\n  @Prop()\n  skills: string[];\n\n  @Prop({type: Object})\n  company:{\n    _id: mongoose.Schema.Types.ObjectId,\n    name: string,\n    logo: string,\n  }\n\n  @Prop()\n  location: string;\n\n  @Prop()\n  salary: number;\n\n  @Prop()\n  quantity: number;\n\n  @Prop()\n  level: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  startDate: Date;\n\n  @Prop()\n  endtDate: Date;\n\n  \n  @Prop()\n  isActive: boolean;\n\n  @Prop({type: Object})\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string,\n  };\n\n  @Prop({type: Object})\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string,\n  };\n\n  @Prop({type: Object})\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string,\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deleteAt: Date;\n\n}\n\nexport const JobSchema = SchemaFactory.createForClass(Job);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('create a new job')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createJobDto\n                                    \n                                                CreateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('fetch jobs with paginate')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()@ResponseMessage('fetch job by id')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('delete a job')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('update a job')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateJobDto\n                                    \n                                                UpdateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags }  from '@nestjs/swagger';\n\n@ApiTags('jobs')\n@Controller('jobs')\nexport class JobsController {\n  constructor(private readonly jobsService: JobsService) {}\n\n  @Post()\n  @ResponseMessage(\"create a new job\")\n create(@Body() createJobDto: CreateJobDto, @User() user: IUser) {\n    return this.jobsService.create(createJobDto, user);\n  }\n\n  @Get()\n  @Public()\n  @ResponseMessage('fetch jobs with paginate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.jobsService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @Public()\n  @ResponseMessage('fetch job by id')\n  findOne(@Param('id') id: string) {\n    return this.jobsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage(\"update a job\")\nupdate(\n  @Param('id') id: string,\n  @Body() updateJobDto: UpdateJobDto, \n  @User() user: IUser\n  ) {\n      return this.jobsService.update(id, updateJobDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage(\"delete a job\")\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.jobsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService\n\nJobsService\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { JobsController } from './jobs.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Job, JobSchema } from './schemas/job.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Job.name, schema: JobSchema }])],\n  controllers: [JobsController],\n  providers: [JobsService]\n})\nexport class JobsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createJobDto\n                                    \n                                                CreateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateJobDto\n                                    \n                                                UpdateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Job, JobDocument } from './schemas/job.schema';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\nimport { UpdateJobDto } from './dto/update-job.dto';\n\n@Injectable()\nexport class JobsService {\n\n  constructor(\n    @InjectModel(Job.name) \n    private jobModel: SoftDeleteModel) {} \n\n  async create(createJobDto: CreateJobDto, user: IUser) {\n    const{\n      name, skills, company, salary, quantity, level, \n      description, startDate, endDate, isActive, location\n    } = createJobDto;\n    let newJob = await this.jobModel.create({\n      name, skills, company, salary, quantity, level, \n      description, startDate, endDate, isActive, location,\n      createdBy:{\n        _id: user._id,\n        email: user.email,\n      }\n      }\n    )\n  }\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, projection, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.jobModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n   \n    const result = await this.jobModel.find(filter)\n    .skip(offset)\n    .limit(defaultLimit)\n    // @ts-ignore: Unreachable code error\n    .sort(sort)\n    .populate(population)\n    .exec()\n    return {\n      meta: {\n      current: currentPage, //trang hiện tại\n      pageSize: limit, //số lượng bản ghi đã lấy\n      pages: totalPages, //tổng số trang với điều kiện query\n      total: totalItems // tổng số phần tử (số bản ghi)\n      },\n      result //kết quả quer\n  }}\n\n  async findOne(id: string) {\n    if(!mongoose.Types.ObjectId.isValid(id))\n      return 'not found job';\n\n      return await this.jobModel.findById(id)\n  }\n\n  async update(id: string, updateJobDto: UpdateJobDto, user: IUser){\n    const updated = await this.jobModel.updateOne({\n      _id: id},\n      {\n        ...updateJobDto,\n        updatedBy:{\n          _id: user._id,\n          email: user.email,\n        }\n      })\n      return updated;\n  }\n\n  async remove(id: string, user: IUser) {\n    if(!mongoose.Types.ObjectId.isValid(id))\n    return 'not found job';\n\n    await this.jobModel.updateOne(\n      {_id: id},\n      {\n        deletedBy:{\n          _id: user._id,\n          email: user.email,\n        }\n      },\n    )\n    return this.jobModel.softDelete({_id: id})\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info, context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    ExecutionContext,\n    ForbiddenException,\n    Injectable,\n    UnauthorizedException,\n  } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Request } from 'express';\n  import { AuthGuard } from '@nestjs/passport';\nimport { IS_PUBLIC_KEY } from 'src/decorator/customize';\n  \n  @Injectable()\n  export class JwtAuthGuard extends AuthGuard('jwt') {\n    constructor(private reflector: Reflector) {\n      super();}\n      canActivate(context: ExecutionContext) {\n        const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n          context.getHandler(),\n          context.getClass(),\n        ]);\n        if (isPublic) {\n          return true;\n        }\n        return super.canActivate(context);\n      }\n  \n    handleRequest(err, user, info, context: ExecutionContext) {\n      const request: Request = context.switchToHttp().getRequest()\n      // You can throw an exception based on either \"info\" or \"err\" arguments\n      if (err || !user) {\n        throw err || new UnauthorizedException('token is unvalid');\n      }\n      // check permissions\n      const targetMethod = request.method;\n      const targetEndpoint = request.route?.apiPath\n\n      const permissions = user?.permissions ?? [];\n      const isExist = permissions.find(permission =>\n        targetMethod === permission.method\n        && targetEndpoint === permission.apiPath)\n        if(!isExist){\n          throw new ForbiddenException(\"you don't have access\")\n        }\n\n      return user;\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/passport/jwt.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { IUser } from 'src/users/users.interface';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private configService: ConfigService,\n    private rolesService: RolesService\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_ACCESS_TOKEN_SECRET')\n    });\n  }\n\n  async validate(payload: IUser) {\n    const { _id, name, email, role } = payload;\n    const userRole = role as unknown as {_id: string; name: string}\n    const temp = (await this.rolesService.findOne(userRole._id)).toObject();\n    return {\n    _id,\n    name,\n    email,\n    role,\n    permissions: temp?.permissions ?? []\n    };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local.stratery.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/local.stratery.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/passport/local.stratery.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/multer.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getRootPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                            \n                                ensureExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/files/multer.config.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MulterModuleOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureExists\n                        \n                    \n                \n            \n            \n                \nensureExists(targetDirectory: string)\n                \n            \n\n\n            \n                \n                    Defined in src/files/multer.config.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetDirectory\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/files/multer.config.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { MulterModuleOptions, MulterOptionsFactory } from \"@nestjs/platform-express\";\nimport fs from 'fs';\nimport { diskStorage } from \"multer\";\nimport path, { join } from \"path\";\n\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n    getRootPath = () => {\n        return process.cwd();\n        };\n        ensureExists(targetDirectory: string) {\n        fs.mkdir(targetDirectory, { recursive: true }, (error) => {\n        if (!error) {\n        console.log('Directory successfully created, or it already exists.');\n        return;\n        }\n        switch (error.code) {\n        case 'EEXIST':\n        // Error:\n        // Requested location already exists, but it's not a directory.\n        break;\n        case 'ENOTDIR':\n        // Error:\n        // The parent hierarchy contains a file with the same name as the dir\n        // you're trying to create.\n        break;\n        default:\n        // Some other error like permission denied.\n        console.error(error);\n        break;\n        }\n        });\n        }\n        \n        createMulterOptions(): MulterModuleOptions {\n            return {\n            storage: diskStorage({\n            destination: (req, file, cb) => {\n            const folder = req?.headers?.folder_type ?? \"default\";\n            this.ensureExists(`public/images/${folder}`);\n            cb(null, join(this.getRootPath(), `public/images/${folder}`))\n            },\n            filename: (req, file, cb) => {\n            //get image extension\n            let extName = path.extname(file.originalname);\n            //get image's name (without extension)\n            let baseName = path.basename(file.originalname, extName);\n            let finalName = `${baseName}-${Date.now()}${extName}`\n            cb(null, finalName)\n            }\n            })\n            };\n            }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/schemas/permission.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\n\nexport type PermissionDocument = HydratedDocument;\n\n@Schema({timestamps: true})\nexport class Permission {\n\n  @Prop()\n  name: string;\n\n  @Prop()\n  apiPath: string;\n\n  @Prop()\n  method: string;\n\n  @Prop()\n  module: string;\n\n  @Prop({type: Object})\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string,\n  };\n\n  @Prop({type: Object})\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string,\n  };\n\n  @Prop({type: Object})\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string,\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deleteAt: Date;\n\n}\n\nexport const PermissionSchema = SchemaFactory.createForClass(Permission);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionsController.html":{"url":"controllers/PermissionsController.html","title":"controller - PermissionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('create a new permission')\n                \n            \n\n            \n                \n                    Defined in src/permissions/permissions.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPermissionDto\n                                    \n                                                CreatePermissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('fetch permissions with paginate')\n                \n            \n\n            \n                \n                    Defined in src/permissions/permissions.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('fetch a permission by id')\n                \n            \n\n            \n                \n                    Defined in src/permissions/permissions.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('delete a permission')\n                \n            \n\n            \n                \n                    Defined in src/permissions/permissions.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('update permission')\n                \n            \n\n            \n                \n                    Defined in src/permissions/permissions.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePermissionDto\n                                    \n                                                UpdatePermissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags }  from '@nestjs/swagger';\n\n@ApiTags('permissions')\n@Controller('permissions')\nexport class PermissionsController {\n  constructor(private readonly permissionsService: PermissionsService) {}\n\n  @Post()\n  @ResponseMessage(\"create a new permission\")\n  create(@Body() createPermissionDto: CreatePermissionDto, @User() user: IUser) {\n    return this.permissionsService.create(createPermissionDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('fetch permissions with paginate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) \n  {\n    return this.permissionsService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('fetch a permission by id')\n  findOne(@Param('id') id: string) {\n    return this.permissionsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage(\"update permission\")\n  update(@Param('id') id: string,\n  @Body() updatePermissionDto: UpdatePermissionDto, \n  @User() user: IUser) {\n      return this.permissionsService.update(id, updatePermissionDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage(\"delete a permission\")\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.permissionsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionsModule.html":{"url":"modules/PermissionsModule.html","title":"module - PermissionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService\n\nPermissionsService\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { PermissionsController } from './permissions.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Permission, PermissionSchema } from './schemas/permission.schema';\n\n@Module({\n  controllers: [PermissionsController],\n  providers: [PermissionsService],\n  imports: [MongooseModule.forFeature([{ name: Permission.name, schema: PermissionSchema }])],\n})\nexport class PermissionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsService.html":{"url":"injectables/PermissionsService.html","title":"injectable - PermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/permissions/permissions.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/permissions/permissions.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPermissionDto\n                                    \n                                                CreatePermissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n            \n                \n                    Defined in src/permissions/permissions.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/permissions/permissions.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/permissions/permissions.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(_id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/permissions/permissions.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePermissionDto\n                                    \n                                                UpdatePermissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Permission, PermissionDocument } from './schemas/permission.schema';\nimport { InjectModel } from '@nestjs/mongoose';\n\n@Injectable()\nexport class PermissionsService {\n  constructor(\n    @InjectModel(Permission.name) \n    private permissionModel: SoftDeleteModel) { } \n\n  async create(createPermissionDto: CreatePermissionDto, user: IUser) {\n    const{name, apiPath, method, module} = createPermissionDto;\n\n    const isExist = await this.permissionModel.findOne({apiPath, method});\n    if(isExist){\n      throw new BadRequestException(`permission with apiPath=${apiPath}, method=${method} already exists`)\n    }\n\n    const newPermission = await this.permissionModel.create({\n      name, apiPath, method, module,\n      createdBy:{\n        _id: user._id,\n        email: user.email\n      },\n      })\n      return {\n        _id: newPermission?._id,\n        createdAt: newPermission?.createdAt,\n      }\n      }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population, projection} = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.permissionModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n   \n    const result = await this.permissionModel.find(filter)\n    .skip(offset)\n    .limit(defaultLimit)\n    // @ts-ignore: Unreachable code error\n    .sort(sort)\n    .populate(population)\n    .select(projection as any)\n    .exec()\n    return {\n      meta: {\n      current: currentPage, //trang hiện tại\n      pageSize: limit, //số lượng bản ghi đã lấy\n      pages: totalPages, //tổng số trang với điều kiện query\n      total: totalItems // tổng số phần tử (số bản ghi)\n      },\n      result //kết quả quer\n  }}\n\n  async findOne(id: string) {\n    if(!mongoose.Types.ObjectId.isValid(id))\n      throw new BadRequestException('not found permission');\n\n      return await this.permissionModel.findById(id)\n  }\n\n  async update(_id: string, updatePermissionDto: UpdatePermissionDto, user: IUser){\n    if(!mongoose.Types.ObjectId.isValid(_id)){\n     throw new BadRequestException(\"not found permission\")}\n\n     const {module, method, apiPath, name} = updatePermissionDto;\n\n    const updated = await this.permissionModel.updateOne(\n      { _id },\n      {\n        module, method, apiPath, name,\n        updatedBy:{\n          _id: user._id,\n          email: user.email\n        }\n      });\n      return updated;\n  }\n\n  async remove(id: string, user: IUser) {\n    if(!mongoose.Types.ObjectId.isValid(id))\n    return 'not found permission';\n\n    await this.permissionModel.updateOne(\n      { _id: id },\n      {\n        deletedBy:{\n          _id: user._id,\n          email: user.email,\n        }\n      }\n    )\n    return this.permissionModel.softDelete({_id: id})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                age\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                gender\n                            \n                            \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, IsString, ValidateNested, isPhoneNumber } from 'class-validator';\nimport mongoose from 'mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n\n  }\n\nexport class CreateUserDto {\n    @IsEmail()\n    @IsNotEmpty()\n    email: string;\n\n    @IsNotEmpty()\n    password: string;\n    name: string;\n    phone: number;\n    age: number;\n    gender: string;\n    address: string;\n\n    @IsNotEmpty()\n    @IsMongoId()\n    role: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\nexport class RegisterUserDto {\n    @IsEmail()\n    @IsNotEmpty()\n    email: string;\n\n    @IsNotEmpty()\n    password: string;\n    name: string;\n    phone: number;\n    age: number;\n    gender: string;\n    address: string;\n    \n}\nexport class UserLoginDto {\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({ example: 'email@gmail.com', description: 'userName' })\n    readonly username: string;\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({\n    example: '123456',\n    description: 'password',\n    })\n    readonly password: string;\n    }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n  } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n  import { Observable } from 'rxjs';\n  import { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n  \n  export interface Response {\n    statusCode: number;\n    message: string;\n    data: any;\n  }\n  \n  @Injectable()\n  export class TransformInterceptor\n    implements NestInterceptor> {\n      constructor(private reflector: Reflector) {}\n    intercept(\n      context: ExecutionContext,\n      next: CallHandler,\n    ): Observable> {\n      return next\n        .handle()\n        .pipe(\n          map((data) => ({\n            statusCode: context.switchToHttp().getResponse().statusCode,\n            message: this.reflector.get(RESPONSE_MESSAGE,context.getHandler()) || '',\n            data: data\n              // result: data.result,\n              // meta: {} // if this is supposed to be the actual return then replace {} with data.result\n            })))\n          }}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/schemas/resume.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                history\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { timeStamp } from 'console';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\nimport { Job } from 'src/jobs/schemas/job.schema';\n\nexport type ResumeDocument = HydratedDocument;\n\n@Schema({timestamps: true})\nexport class Resume {\n\n  \n  @Prop()\n  email: string;\n\n  @Prop()\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @Prop()\n  url: string;\n\n  @Prop()\n  status: string;\n\n  @Prop({type: mongoose.Schema.Types.ObjectId, ref: Company.name})\n  companyId: mongoose.Schema.Types.ObjectId;\n    \n\n  @Prop({type: mongoose.Schema.Types.ObjectId, ref: Job.name})\n  jobId: mongoose.Schema.Types.ObjectId;\n\n  @Prop({type: mongoose.Schema.Types.Array})\n  history:{\n    status: string,\n    updatedAt: Date,\n    updatedBy:{\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n  }\n\n  @Prop({type: Object})\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string,\n  };\n\n  @Prop({type: Object})\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string,\n  };\n\n  @Prop({type: Object})\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string,\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deleteAt: Date;\n\n}\n\n\nexport const ResumeSchema = SchemaFactory.createForClass(Resume);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResumesController.html":{"url":"controllers/ResumesController.html","title":"controller - ResumesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResumesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                resumes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                getResumByUser\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserCvDto: CreateUserCvDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('create a new resume')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserCvDto\n                                    \n                                                CreateUserCvDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('fetch all resumes with paginate')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('fetch a resume by id')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getResumByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getResumByUser(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('by-user')@ResponseMessage('get resume by user')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('delete a resume by id')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStatus(id: string, status: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('update status resume')\n                \n            \n\n            \n                \n                    Defined in src/resumes/resumes.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { ApiTags }  from '@nestjs/swagger';\n\n@ApiTags('resumes')\n@Controller('resumes')\nexport class ResumesController {\n  constructor(private readonly resumesService: ResumesService) {}\n\n  @Post()\n  @ResponseMessage(\"create a new resume\")\n  create(@Body() createUserCvDto: CreateUserCvDto, @User() user: IUser) {\n    return this.resumesService.create(createUserCvDto, user);\n  }\n\n  @Post('by-user')\n  @ResponseMessage(\"get resume by user\")\n  getResumByUser(@Body() @User() user: IUser) {\n    return this.resumesService.findByUsers(user);\n  }\n\n  @Get()\n  @ResponseMessage('fetch all resumes with paginate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.resumesService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('fetch a resume by id')\n  findOne(@Param('id') id: string) {\n    return this.resumesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage(\"update status resume\")\n  updateStatus(@Param('id') id: string,\n  @Body(\"status\") status: string, \n  @User() user: IUser) {\n      return this.resumesService.update(id, status, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage(\"delete a resume by id\")\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.resumesService.remove(id, user);\n  }\n};\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResumesModule.html":{"url":"modules/ResumesModule.html","title":"module - ResumesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResumesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\n\nResumesService\n\nResumesService\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resumes/resumes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResumesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { ResumesController } from './resumes.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Resume, ResumeSchema } from './schemas/resume.schema';\n\n@Module({\n  controllers: [ResumesController],\n  providers: [ResumesService],\n  imports: [MongooseModule.forFeature([{ name: Resume.name, schema: ResumeSchema }])],\n\n})\nexport class ResumesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumesService.html":{"url":"injectables/ResumesService.html","title":"injectable - ResumesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByUsers\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/resumes/resumes.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resumeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserCvDto: CreateUserCvDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserCvDto\n                                    \n                                                CreateUserCvDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUsers(user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(_id: string, status: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateResumeDto, CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { Resume, ResumeDocument } from './schemas/resume.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class ResumesService {\n  constructor(\n    @InjectModel(Resume.name) \n    private resumeModel: SoftDeleteModel) { } \n\n\n  async create(createUserCvDto: CreateUserCvDto, user: IUser) {\n    const{url, companyId, jobId} = createUserCvDto;\n    const {email, _id} = user;\n\n    const newCv = await this.resumeModel.create({\n      url, companyId, jobId, email,\n      userId: _id,\n      status: \"PENDING\",\n      createdBy:{_id,email},\n      history:[{\n        status: \"PENDING\",\n        updatedAt: new Date,\n        updatedBy:{\n          _id: user._id,\n          email: user.email\n        }\n      }]\n      })\n      return {\n        _id: newCv?._id,\n        createdAt: newCv?.createdAt,\n      }\n      }\n      async update(_id: string, status: string, user: IUser){\n        if(!mongoose.Types.ObjectId.isValid(_id)){\n         throw new BadRequestException(\"not found resume\")}\n\n        const updated = await this.resumeModel.updateOne(\n          {_id},\n          {\n            status,\n            updatedBy:{\n              _id: user._id,\n              email: user.email,\n            },\n            $push: {\n              history:{\n                status: status,\n                updatedAt: new Date,\n                updatedBy:{\n                  _id: user._id,\n                 email: user.email,\n                }\n              }\n            }\n          });\n\n          return updated;\n      }\n\n      async findAll(currentPage: number, limit: number, qs: string) {\n        const { filter, sort, population, projection} = aqp(qs);\n        delete filter.current;\n        delete filter.pageSize;\n    \n        let offset = (+currentPage - 1) * (+limit);\n        let defaultLimit = +limit ? +limit : 10;\n    \n        const totalItems = (await this.resumeModel.find(filter)).length;\n        const totalPages = Math.ceil(totalItems / defaultLimit);\n       \n        const result = await this.resumeModel.find(filter)\n        .skip(offset)\n        .limit(defaultLimit)\n        // @ts-ignore: Unreachable code error\n        .sort(sort)\n        .populate(population)\n        .select(projection as any)\n        .exec()\n        return {\n          meta: {\n          current: currentPage, //trang hiện tại\n          pageSize: limit, //số lượng bản ghi đã lấy\n          pages: totalPages, //tổng số trang với điều kiện query\n          total: totalItems // tổng số phần tử (số bản ghi)\n          },\n          result //kết quả quer\n      }}\n\n      async findOne(id: string) {\n        if(!mongoose.Types.ObjectId.isValid(id))\n          throw new BadRequestException('not found resume');\n    \n          return await this.resumeModel.findById(id)\n      }\n\n      async findByUsers(user: IUser){\n        return await this.resumeModel.find({\n          userId: user._id\n        })\n        .sort(\"-createdAt\")\n.populate([\n{\npath: \"companyId\",\nselect: { name: 1 }\n},\n{\npath: \"jobId\",\nselect: { name: 1 }\n}\n])\n\n      }\n\n      async remove(id: string, user: IUser) {\n        if(!mongoose.Types.ObjectId.isValid(id))\n        return 'not found resume';\n    \n        await this.resumeModel.updateOne(\n          {_id: id},\n          {\n            deletedBy:{\n              _id: user._id,\n              email: user.email,\n            }\n          },\n        )\n        return this.resumeModel.softDelete({_id: id})\n      }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/schemas/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isactive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isactive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permissions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport mongoose, { HydratedDocument } from \"mongoose\";\nimport { Permission } from \"src/permissions/schemas/permission.schema\";\n\nexport type RoleDocument = HydratedDocument;\n\n@Schema({timestamps: true})\nexport class Role {\n\n  @Prop()\n  name: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  isactive: boolean;\n\n  @Prop({ type: [mongoose.Schema.Types.ObjectId], ref: Permission.name })\n  permissions: Permissions[];\n\n  @Prop({type: Object})\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string,\n  };\n\n  @Prop({type: Object})\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string,\n  };\n\n  @Prop({type: Object})\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string,\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deleteAt: Date;\n\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('create a new role')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRoleDto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('fetch roles with paginate')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('fetch a role by id')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('delete a role')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('update role')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePermissionDto\n                                    \n                                                UpdatePermissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { UpdatePermissionDto } from 'src/permissions/dto/update-permission.dto';\nimport { ApiTags }  from '@nestjs/swagger';\n\n@ApiTags('roles')\n@Controller('roles')\nexport class RolesController {\n  constructor(private readonly rolesService: RolesService) {}\n\n  @Post()\n  @ResponseMessage(\"create a new role\")\n  create(@Body() createRoleDto: CreateRoleDto, @User() user: IUser) {\n    return this.rolesService.create(createRoleDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('fetch roles with paginate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.rolesService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('fetch a role by id')\n  findOne(@Param('id') id: string) {\n    return this.rolesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage(\"update role\")\n  update(@Param('id') id: string,\n  @Body() updatePermissionDto: UpdatePermissionDto, \n  @User() user: IUser) {\n      return this.rolesService.update(id, updatePermissionDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage(\"delete a role\")\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.rolesService.remove(id, user);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from './schemas/role.schema';\n\n@Module({\n  controllers: [RolesController],\n  providers: [RolesService],\n  exports:[RolesService],\n  imports: [MongooseModule.forFeature([{ name: Role.name, schema: RoleSchema }])],\n\n})\nexport class RolesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRoleDto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(_id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRoleDto\n                                    \n                                                UpdateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Role, RoleDocument } from './schemas/role.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { ADMIN_ROLE } from 'src/databases/sample';\n\n@Injectable()\nexport class RolesService {\n  constructor(\n    @InjectModel(Role.name) \n    private roleModel: SoftDeleteModel) { } \n\n  async create(createRoleDto: CreateRoleDto, user: IUser) {\n    const{name, description, isActive, permissions} = createRoleDto;\n    const isExist = await this.roleModel.findOne({name});\n\n    if(isExist){\n      throw new BadRequestException(`Role with name=${name} already exists`)\n    }\n\n    const newRole = await this.roleModel.create({\n      name, description, isActive, permissions,\n      createdBy:{\n        _id: user._id,\n        email: user.email\n      },\n      })\n      return {\n        _id: newRole?._id,\n        createdAt: newRole?.createdAt,\n      }\n      }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population, projection} = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.roleModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n   \n    const result = await this.roleModel.find(filter)\n    .skip(offset)\n    .limit(defaultLimit)\n    // @ts-ignore: Unreachable code error\n    .sort(sort)\n    .populate(population)\n    .select(projection as any)\n    .exec()\n    return {\n      meta: {\n      current: currentPage, //trang hiện tại\n      pageSize: limit, //số lượng bản ghi đã lấy\n      pages: totalPages, //tổng số trang với điều kiện query\n      total: totalItems // tổng số phần tử (số bản ghi)\n      },\n      result //kết quả quer\n  }}\n\n  async findOne(id: string) {\n    if(!mongoose.Types.ObjectId.isValid(id))\n      {throw new BadRequestException('not found role')};\n\n      return (await this.roleModel.findById(id))\n      .populate({path: \"permissions\", select:{_id: 1, apiPath: 1, name: 1, method: 1, module: 1}})\n  }\n\n  async update(_id: string, updateRoleDto: UpdateRoleDto, user: IUser){\n    if(!mongoose.Types.ObjectId.isValid(_id)){\n     throw new BadRequestException(\"not found role\")}\n\n     const {name, description, isActive, permissions} = updateRoleDto;\n\n    const updated = await this.roleModel.updateOne(\n      {_id},\n      {\n        name, description, isActive, permissions,\n        updatedBy:{\n          _id: user._id,\n          email: user.email,\n        },\n      });\n      return updated;\n  }\n\n  async remove(id: string, user: IUser) {\n    const foundRoler = await this.roleModel.findById(id)\n    if(foundRoler.name === ADMIN_ROLE){\n     throw new BadRequestException(\"cant not delete role ADMIN\")}\n\n    await this.roleModel.updateOne(\n      {_id: id},\n      {\n        deletedBy:{\n          _id: user._id,\n          email: user.email,\n        }\n      },\n    )\n    return this.roleModel.softDelete({_id: id})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/transform.interceptor.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/core/transform.interceptor.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n  } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n  import { Observable } from 'rxjs';\n  import { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n  \n  export interface Response {\n    statusCode: number;\n    message: string;\n    data: any;\n  }\n  \n  @Injectable()\n  export class TransformInterceptor\n    implements NestInterceptor> {\n      constructor(private reflector: Reflector) {}\n    intercept(\n      context: ExecutionContext,\n      next: CallHandler,\n    ): Observable> {\n      return next\n        .handle()\n        .pipe(\n          map((data) => ({\n            statusCode: context.switchToHttp().getResponse().statusCode,\n            message: this.reflector.get(RESPONSE_MESSAGE,context.getHandler()) || '',\n            data: data\n              // result: data.result,\n              // meta: {} // if this is supposed to be the actual return then replace {} with data.result\n            })))\n          }}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompanyDto.html":{"url":"classes/UpdateCompanyDto.html","title":"class - UpdateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/update-company.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCompanyDto } from './create-company.dto';\n\nexport class UpdateCompanyDto extends PartialType(CreateCompanyDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/update-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateFileDto } from './create-file.dto';\n\nexport class UpdateFileDto extends PartialType(CreateFileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobDto.html":{"url":"classes/UpdateJobDto.html","title":"class - UpdateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateJobDto } from './create-Job.dto';\n\nexport class UpdateJobDto extends PartialType(CreateJobDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/update-permission.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePermissionDto } from './create-permission.dto';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResumeDto.html":{"url":"classes/UpdateResumeDto.html","title":"class - UpdateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                history\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         History[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsArray()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\nimport { IsArray, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { Type } from 'class-transformer';\n\n\nclass UpdatedBy {\n    @IsNotEmpty()\n    _id: Types.ObjectId;\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n}\n\nclass History{\n        @IsNotEmpty()\n        status: string;\n        updateAt: Date;\n\n        @ValidateNested()\n        @IsNotEmpty()\n        @Type(() => UpdatedBy)\n        updatedBy: UpdatedBy;\n    }\n\n    export class UpdateResumeDto extends PartialType(CreateResumeDto){\n        @IsNotEmpty()\n        @IsArray()\n        @ValidateNested()\n        @Type(() => History)\n        history: History[];\n    }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/update-role.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRoleDto } from './create-role.dto';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '_id is not empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType, PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateUserDto extends OmitType(CreateUserDto,['password'] as const) {\n    @IsNotEmpty({message: '_id is not empty'})\n    _id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatedBy.html":{"url":"classes/UpdatedBy.html","title":"class - UpdatedBy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatedBy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\nimport { IsArray, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { Type } from 'class-transformer';\n\n\nclass UpdatedBy {\n    @IsNotEmpty()\n    _id: Types.ObjectId;\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n}\n\nclass History{\n        @IsNotEmpty()\n        status: string;\n        updateAt: Date;\n\n        @ValidateNested()\n        @IsNotEmpty()\n        @Type(() => UpdatedBy)\n        updatedBy: UpdatedBy;\n    }\n\n    export class UpdateResumeDto extends PartialType(CreateResumeDto){\n        @IsNotEmpty()\n        @IsArray()\n        @ValidateNested()\n        @Type(() => History)\n        history: History[];\n    }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                birthday\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deleteAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Role } from 'src/roles/schemas/role.schema';\n\nexport type UserDocument = HydratedDocument;\n\n@Schema({timestamps: true})\nexport class User {\n\n  \n  @Prop({ required: true })\n  email: string;\n\n  @Prop({ required: true })\n  password: string;\n\n  @Prop()\n  name: string;\n\n  @Prop()\n  birthday: Date;\n\n  @Prop()\n  gender: string;\n\n  @Prop()\n  address: string;\n\n  @Prop()\n  phone: number;\n\n  @Prop({type: Object})\n  company:{\n    _id: mongoose.Schema.Types.ObjectId,\n    name: string,\n  }\n\n  @Prop({type: mongoose.Schema.Types.ObjectId, ref: Role.name})\n  role: mongoose.Schema.Types.ObjectId;\n\n  @Prop()\n  refreshToken: string;\n\n  @Prop({type: Object})\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string,\n  };\n\n  @Prop({type: Object})\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string,\n  };\n\n  @Prop({type: Object})\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string,\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deleteAt: Date;\n\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: '123456', description: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: 'email@gmail.com', description: 'userName'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, IsString, ValidateNested, isPhoneNumber } from 'class-validator';\nimport mongoose from 'mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n\n  }\n\nexport class CreateUserDto {\n    @IsEmail()\n    @IsNotEmpty()\n    email: string;\n\n    @IsNotEmpty()\n    password: string;\n    name: string;\n    phone: number;\n    age: number;\n    gender: string;\n    address: string;\n\n    @IsNotEmpty()\n    @IsMongoId()\n    role: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\nexport class RegisterUserDto {\n    @IsEmail()\n    @IsNotEmpty()\n    email: string;\n\n    @IsNotEmpty()\n    password: string;\n    name: string;\n    phone: number;\n    age: number;\n    gender: string;\n    address: string;\n    \n}\nexport class UserLoginDto {\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({ example: 'email@gmail.com', description: 'userName' })\n    readonly username: string;\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({\n    example: '123456',\n    description: 'password',\n    })\n    readonly password: string;\n    }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('create a new User')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('fetch user with paginate')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')@ResponseMessage('fetch user by id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('delete a User')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('update a User')@Patch()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from './users.interface';\nimport { ApiTags }  from '@nestjs/swagger';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  @ResponseMessage(\"create a new User\")\n  async create(@Body() createUserDto: CreateUserDto, @User() user: IUser) {\n    let newUser = await this.usersService.create(createUserDto, user);\n    return {\n      _id: newUser?._id,\n      createdAt: newUser?.createdAt,\n    }\n  }\n\n  @Get()\n  @ResponseMessage('fetch user with paginate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.usersService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Public()\n  @Get(':id')\n  @ResponseMessage('fetch user by id')\n  async findOne(@Param('id') id: string) {\n    const foundUser = await this.usersService.findOne(id);\n    return foundUser;\n  }\n\n  @ResponseMessage(\"update a User\")\n  @Patch()\n  async update(@Body() updateUserDto: UpdateUserDto, @User() user: IUser) {\n      let updateUser = await this.usersService.update(updateUserDto, user);\n    return updateUser\n  }\n\n  @Delete(':id')\n  @ResponseMessage(\"delete a User\")\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.usersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([\n    { name: User.name, schema: UserSchema },\n    { name: Role.name, schema: RoleSchema },\n    \n  ])],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findUserByToken\n                            \n                            \n                                getHashPassword\n                            \n                            \n                                updateUserToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                findOneByUsername\n                            \n                            \n                                isValidPassword\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    qs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \nfindOneByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \nisValidPassword(password: string, hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(user: RegisterUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:156\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:149\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateUserDto, RegisterUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User as UserM, UserDocument } from './schemas/user.schema';\nimport mongoose, { Model } from 'mongoose';\nimport {genSaltSync, hashSync, compareSync} from 'bcryptjs';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from './users.interface';\nimport aqp from 'api-query-params'\nimport { User } from 'src/decorator/customize';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { USER_ROLE } from 'src/databases/sample';\n\n\n@Injectable()\nexport class UsersService {\n\n  constructor(\n  @InjectModel(UserM.name) private userModel: SoftDeleteModel,\n  @InjectModel(Role.name) private roleModel: SoftDeleteModel) { }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, projection, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.userModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n   \n    const result = await this.userModel.find(filter)\n    .skip(offset)\n    .limit(defaultLimit)\n    .select(\"-password\")\n    .sort(sort as any)\n    .populate(population)\n    .exec()\n    return {\n      meta: {\n      current: currentPage, //trang hiện tại\n      pageSize: limit, //số lượng bản ghi đã lấy\n      pages: totalPages, //tổng số trang với điều kiện query\n      total: totalItems // tổng số phần tử (số bản ghi)\n      },\n      result //kết quả quer\n  }}\n\n  getHashPassword = (password: string) =>{\n  const salt = genSaltSync(10);\n  const hash = hashSync(password, salt);\n  return hash;\n  }\n  async create(createUserDto: CreateUserDto, @User() user: IUser){\n    const {name, email, password, gender, address, role, company} = createUserDto;\n\n    const isExist = await this.userModel.findOne({email})\n    if(isExist){\n      throw new BadRequestException(`email: ${email} already exists`)\n    }\n  \n    const hashPassword = this.getHashPassword(createUserDto.password)\n    let newUser = await this.userModel.create({\n      name, email, \n      password: hashPassword, \n      gender, address, role, company,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      }\n    })\n    return newUser; \n  }\n\n  async register(user: RegisterUserDto){\n    const { name, email, password, gender, address} = user;\n    const isExist = await this.userModel.findOne({email})\n    if(isExist){\n      throw new BadRequestException(`email: ${email} already exists`)\n    }\n    //fetch user role\n    const userRole = await this.roleModel.findOne({name: USER_ROLE})\n\n    const hashPassword = this.getHashPassword(password)\n    let newRegister = await this.userModel.create({\n      name, email, \n      password: hashPassword, \n      gender, address,\n      role: userRole?._id\n    })\n    return newRegister; \n  }\n\n\n\n  async findOne(id: string) {\n   if(!mongoose.Types.ObjectId.isValid(id)){\n    return 'not found user'\n   }\n      return await  this.userModel.findOne({\n        _id: id\n      })\n      .select(\"-password\")\n      .populate({path: \"role\", select: {name: 1, _id: 1}})\n  }\n\n  findOneByUsername(username: string){\n       return this.userModel.findOne({\n         email: username\n       }).populate({path: \"role\", select: {name: 1}})\n   }\n   \nisValidPassword(password: string, hash: string){\n    return compareSync(password, hash);\n   }\n\n  async update(updateUserDto: UpdateUserDto, user: IUser) {\n    const updated = await this.userModel.updateOne(\n      {_id: updateUserDto._id},\n      {...updateUserDto,\n      updateBy:{\n        _id: user._id,\n        email: user.email,\n      }});\n      return \n  }\n\n  async remove(id: string, user: IUser) {\n    if(!mongoose.Types.ObjectId.isValid(id)){\n      return 'not found user'\n     }\n     const foundUser = await this.userModel.findById(id)\n     if(foundUser && foundUser.email === \"admin@gmail.com\"){\n      throw new BadRequestException(\"cant not delete this email\")\n     }\n        await this.userModel.updateOne(\n          {_id: id},\n          {\n            deletedBy:{\n              _id: user._id,\n              email: user.email,\n            }\n          });\n        return this.userModel.softDelete({\n          _id: id\n        }) \n       }\n\n       updateUserToken = async (refreshToken: string, _id: string) =>{\n        return await this.userModel.updateOne(\n          {_id},\n          { refreshToken }\n          )\n        }\n\n        findUserByToken = async (refreshToken: string) =>{\n          return await this.userModel.findOne({ refreshToken })\n          .populate({\n            path: \"role\", select: {name: 1}\n          })\n          }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/local.stratery.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/companies/companies.controller.ts\n            \n            controller\n            CompaniesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/companies/companies.service.ts\n            \n            injectable\n            CompaniesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/companies/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/companies/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            variable\n            CompanySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/databases.controller.ts\n            \n            controller\n            DatabasesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/databases.service.ts\n            \n            injectable\n            DatabasesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            ADMIN_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            INIT_PERMISSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            USER_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            RESPONSE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/multer.config.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/files/schemas/file.schema.ts\n            \n            class\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            CreateJobDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/jobs/dto/update-job.dto.ts\n            \n            class\n            UpdateJobDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            class\n            Job\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            variable\n            JobSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            variable\n            PermissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateResumeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateUserCvDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            History\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdatedBy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdateResumeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/resumes/resumes.controller.ts\n            \n            controller\n            ResumesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/resumes.service.ts\n            \n            injectable\n            ResumesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            class\n            Resume\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            variable\n            ResumeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/roles/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : 9.4.0\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : 9.4.0\n        \n            @nestjs/jwt : ^10.1.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/mongoose : ^10.0.0\n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/platform-express : 9.4.0\n        \n            @nestjs/swagger : 7.0.4\n        \n            add : ^2.0.6\n        \n            api-query-params : 5.4.0\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cookie-parser : 1.4.6\n        \n            dotenv : ^16.3.1\n        \n            ejs : ^3.1.9\n        \n            mongoose : ^7.3.1\n        \n            ms : ^2.1.3\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : 0.1.13\n        \n            rxjs : 7.2.0\n        \n            soft-delete-plugin-mongoose : ^1.0.15\n        \n            yarn : ^1.22.19\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_exports\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nCompaniesService \n\nCompaniesService \n\nCompaniesService  -->\n\nCompaniesModule->CompaniesService \n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    28 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompaniesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResumesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : grucep23\n        \n            License : UNLICENSED\n        \n            Author : Hỏi Dân IT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompanyDocument   (src/.../company.schema.ts)\n                        \n                        \n                            JobDocument   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionDocument   (src/.../permission.schema.ts)\n                        \n                        \n                            ResumeDocument   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/companies/schemas/company.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/jobs/schemas/job.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/permissions/schemas/permission.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PermissionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/resumes/schemas/resume.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ResumeDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/roles/schemas/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_ROLE   (src/.../sample.ts)\n                        \n                        \n                            CompanySchema   (src/.../company.schema.ts)\n                        \n                        \n                            INIT_PERMISSIONS   (src/.../sample.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../customize.ts)\n                        \n                        \n                            JobSchema   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionSchema   (src/.../permission.schema.ts)\n                        \n                        \n                            Public   (src/.../customize.ts)\n                        \n                        \n                            RESPONSE_MESSAGE   (src/.../customize.ts)\n                        \n                        \n                            ResponseMessage   (src/.../customize.ts)\n                        \n                        \n                            ResumeSchema   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            User   (src/.../customize.ts)\n                        \n                        \n                            USER_ROLE   (src/.../sample.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/databases/sample.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"SUPER_ADMIN\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INIT_PERMISSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        \"_id\": \"648ab415f4328bd3153ee211\",\n        \"name\": \"Get Company with paginate\",\n        \"apiPath\": \"/api/v1/companies\",\n        \"method\": \"GET\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T06:47:49.369Z\",\n        \"updatedAt\": \"2023-07-20T06:54:05.131Z\",\n        \"__v\": 0,\n        \"updatedBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        }\n    },\n    {\n        \"_id\": \"648ab436f4328bd3153ee216\",\n        \"name\": \"Create Company\",\n        \"apiPath\": \"/api/v1/companies\",\n        \"method\": \"POST\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T06:48:22.224Z\",\n        \"updatedAt\": \"2023-07-20T06:48:22.224Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab4d5f4328bd3153ee21b\",\n        \"name\": \"Update Company\",\n        \"apiPath\": \"/api/v1/companies/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T06:51:01.241Z\",\n        \"updatedAt\": \"2023-07-20T06:51:01.241Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab4ebf4328bd3153ee220\",\n        \"name\": \"Delete Company\",\n        \"apiPath\": \"/api/v1/companies/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T06:51:23.973Z\",\n        \"updatedAt\": \"2023-07-20T06:51:23.973Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab5a8072f2a2ef910638d\",\n        \"name\": \"Get Company by id\",\n        \"apiPath\": \"/api/v1/companies/:id\",\n        \"method\": \"GET\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T06:54:32.799Z\",\n        \"updatedAt\": \"2023-07-20T06:54:32.799Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab6d3fa16b294212e4033\",\n        \"name\": \"Create User\",\n        \"apiPath\": \"/api/v1/users\",\n        \"method\": \"POST\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T06:59:31.898Z\",\n        \"updatedAt\": \"2023-07-20T06:59:31.898Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab6e7fa16b294212e4038\",\n        \"name\": \"Get User by Id\",\n        \"apiPath\": \"/api/v1/users/:id\",\n        \"method\": \"GET\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T06:59:51.041Z\",\n        \"updatedAt\": \"2023-07-20T06:59:51.041Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab6fdfa16b294212e403d\",\n        \"name\": \"Get User with paginate\",\n        \"apiPath\": \"/api/v1/users\",\n        \"method\": \"GET\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T07:00:13.364Z\",\n        \"updatedAt\": \"2023-07-20T07:00:13.364Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab719fa16b294212e4042\",\n        \"name\": \"Update User\",\n        \"apiPath\": \"/api/v1/users/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T07:00:41.934Z\",\n        \"updatedAt\": \"2023-07-20T07:00:41.934Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab728fa16b294212e4047\",\n        \"name\": \"Delete User\",\n        \"apiPath\": \"/api/v1/users/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T07:00:56.274Z\",\n        \"updatedAt\": \"2023-07-20T07:00:56.274Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab750fa16b294212e404c\",\n        \"name\": \"Upload Single File\",\n        \"apiPath\": \"/api/v1/files/upload\",\n        \"method\": \"POST\",\n        \"module\": \"FILES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T07:01:36.923Z\",\n        \"updatedAt\": \"2023-07-20T07:01:36.923Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad488dafdb9754f40b846\",\n        \"name\": \"Create a Job\",\n        \"apiPath\": \"/api/v1/jobs\",\n        \"method\": \"POST\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T09:06:16.508Z\",\n        \"updatedAt\": \"2023-07-20T09:06:16.508Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad499dafdb9754f40b84b\",\n        \"name\": \"Get a job by id\",\n        \"apiPath\": \"/api/v1/jobs/:id\",\n        \"method\": \"GET\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T09:06:33.697Z\",\n        \"updatedAt\": \"2023-07-20T09:06:33.697Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4a6dafdb9754f40b850\",\n        \"name\": \"Update a Job\",\n        \"apiPath\": \"/api/v1/jobs/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T09:06:46.085Z\",\n        \"updatedAt\": \"2023-07-20T09:06:46.085Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4ccdafdb9754f40b859\",\n        \"name\": \"Get Job with paginate\",\n        \"apiPath\": \"/api/v1/jobs\",\n        \"method\": \"GET\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T09:07:24.175Z\",\n        \"updatedAt\": \"2023-07-20T09:07:24.175Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4d9dafdb9754f40b85e\",\n        \"name\": \"Delete a Job\",\n        \"apiPath\": \"/api/v1/jobs/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T09:07:37.896Z\",\n        \"updatedAt\": \"2023-07-20T09:07:37.896Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4fedafdb9754f40b863\",\n        \"name\": \"Create a Resume\",\n        \"apiPath\": \"/api/v1/resumes\",\n        \"method\": \"POST\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T09:08:14.659Z\",\n        \"updatedAt\": \"2023-07-20T09:08:14.659Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad511dafdb9754f40b868\",\n        \"name\": \"Fetch resume with paginate\",\n        \"apiPath\": \"/api/v1/resumes\",\n        \"method\": \"GET\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T09:08:33.395Z\",\n        \"updatedAt\": \"2023-07-20T09:08:33.395Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad522dafdb9754f40b86d\",\n        \"name\": \"Get resume by id\",\n        \"apiPath\": \"/api/v1/resumes/:id\",\n        \"method\": \"GET\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T09:08:50.801Z\",\n        \"updatedAt\": \"2023-07-20T09:08:50.801Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad53bdafdb9754f40b872\",\n        \"name\": \"Delete a resume\",\n        \"apiPath\": \"/api/v1/resumes/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T09:09:15.785Z\",\n        \"updatedAt\": \"2023-07-20T09:09:15.785Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad555dafdb9754f40b877\",\n        \"name\": \"Update resume status\",\n        \"apiPath\": \"/api/v1/resumes/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T09:09:41.694Z\",\n        \"updatedAt\": \"2023-07-20T09:09:41.694Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad56ddafdb9754f40b87c\",\n        \"name\": \"Fetch resumes by user\",\n        \"apiPath\": \"/api/v1/resumes/by-user\",\n        \"method\": \"POST\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T09:10:05.961Z\",\n        \"updatedAt\": \"2023-07-20T09:10:05.961Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad59adafdb9754f40b881\",\n        \"name\": \"Create a permission\",\n        \"apiPath\": \"/api/v1/permissions\",\n        \"method\": \"POST\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T09:10:50.946Z\",\n        \"updatedAt\": \"2023-07-20T09:10:50.946Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5aedafdb9754f40b886\",\n        \"name\": \"Fetch Permission with paginate\",\n        \"apiPath\": \"/api/v1/permissions\",\n        \"method\": \"GET\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T09:11:10.914Z\",\n        \"updatedAt\": \"2023-07-20T09:11:10.914Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5c5dafdb9754f40b88b\",\n        \"name\": \"Fetch permission by id\",\n        \"apiPath\": \"/api/v1/permissions/:id\",\n        \"method\": \"GET\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T09:11:33.234Z\",\n        \"updatedAt\": \"2023-07-20T09:11:33.234Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5d4dafdb9754f40b890\",\n        \"name\": \"Update a permission\",\n        \"apiPath\": \"/api/v1/permissions/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T09:11:48.081Z\",\n        \"updatedAt\": \"2023-07-20T09:11:48.081Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5ebdafdb9754f40b895\",\n        \"name\": \"Delete a permission\",\n        \"apiPath\": \"/api/v1/permissions/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T09:12:11.323Z\",\n        \"updatedAt\": \"2023-07-20T09:12:11.323Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad613dafdb9754f40b89a\",\n        \"name\": \"Create Role\",\n        \"apiPath\": \"/api/v1/roles\",\n        \"method\": \"POST\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T09:12:51.974Z\",\n        \"updatedAt\": \"2023-07-20T09:12:51.974Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad622dafdb9754f40b89f\",\n        \"name\": \"Fetch roles with paginate\",\n        \"apiPath\": \"/api/v1/roles\",\n        \"method\": \"GET\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T09:13:06.618Z\",\n        \"updatedAt\": \"2023-07-20T09:13:06.618Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad630dafdb9754f40b8a6\",\n        \"name\": \"Fetch role by id\",\n        \"apiPath\": \"/api/v1/roles/:id\",\n        \"method\": \"GET\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T09:13:20.853Z\",\n        \"updatedAt\": \"2023-07-20T09:13:20.853Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad640dafdb9754f40b8ab\",\n        \"name\": \"Update Role\",\n        \"apiPath\": \"/api/v1/roles/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T09:13:36.836Z\",\n        \"updatedAt\": \"2023-07-20T09:13:36.836Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad650dafdb9754f40b8b0\",\n        \"name\": \"Delete a Role\",\n        \"apiPath\": \"/api/v1/roles/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"647b5108a8a243e8191855b5\",\n            \"email\": \"duy@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2023-07-20T09:13:52.798Z\",\n        \"updatedAt\": \"2023-07-20T09:13:52.798Z\",\n        \"__v\": 0\n    }\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"NORMAL_USER\"\n                    \n                \n\n\n        \n    \n\n    src/companies/schemas/company.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CompanySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Company)\n                    \n                \n\n\n        \n    \n\n    src/decorator/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'response_message'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>\n      SetMetadata(RESPONSE_MESSAGE, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n    (data: unknown, ctx: ExecutionContext) => {\n      const request = ctx.switchToHttp().getRequest();\n      return request.user;\n    },\n  )\n                    \n                \n\n\n        \n    \n\n    src/jobs/schemas/job.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Job)\n                    \n                \n\n\n        \n    \n\n    src/permissions/schemas/permission.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PermissionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Permission)\n                    \n                \n\n\n        \n    \n\n    src/resumes/schemas/resume.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResumeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Resume)\n                    \n                \n\n\n        \n    \n\n    src/roles/schemas/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
